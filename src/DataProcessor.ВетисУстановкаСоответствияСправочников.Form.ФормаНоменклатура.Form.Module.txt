
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	#Если МобильноеПриложениеСервер Тогда
		//Элементы.ОтборХС.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.ОтборПредприятие.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.ОтборПредприятиеGuid.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.ОтборТипПродукции.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.ОтборПродукция.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.ОтборВидПродукции.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.СправочникСписок.Видимость = Ложь;
		Элементы.ГруппаОтбор.Видимость = Ложь;
		Элементы.СписокВетисГруппа1.Группировка = ГруппировкаКолонок.Вертикальная;
		Элементы.СписокВетис.Шапка = Ложь;
	#Иначе
		Элементы.ФормаКомандаОтбор.Пометка = Истина;
		Элементы.СписокВетисКонтекстноеМенюКомандаСоздатьСвязь.Видимость = Ложь;
		Элементы.СписокВетисКонтекстноеМенюКомандаУдалитьСвязь.Видимость = Ложь;
	#КонецЕсли
	
	Элементы.СписокВетисguid.Видимость = Ветис.Настройки_ПоказыватьGuid();
	
	ОтборПредприятиеПредставление = "Представление";
	
	МаксимальноеКоличество = 100;
	
	ОтборТипПродукции = ПредопределенноеЗначение("Справочник.ВетисProductType.МясоИМясопродукты");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Элементы.ГруппаОтбор1.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		Элементы.ГруппаОтбор2.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	#КонецЕсли
	
	НастроитьСправочникСписок();
	
	ЗаполнитьСписокПродукцииСервер();
	
	ЗаполнитьСписокВидовПродукцииСервер();
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Параметр = ЭтаФорма.ИмяФормы Тогда
		//
	ИначеЕсли ИмяСобытия = "ВетисНастройки" Тогда
		УстановитьВидимость();
	ИначеЕсли ИмяСобытия = "ВетисВерсия" Тогда
		УстановитьВидимость();
	ИначеЕсли ИмяСобытия = "ВетисОтладка" Тогда
		//
	ИначеЕсли ИмяСобытия = "ВетисТестовый" Тогда
		//
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаНайти(Команда)
	
	КомандаНайтиСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСоздатьСвязь(Команда)
	
	Если Элементы.СправочникСписок.ТекущиеДанные = Неопределено ИЛИ Элементы.СписокВетис.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;

	_ТекущиеДанныеВетис = Элементы.СписокВетис.ТекущиеДанные;

	//ВетисВызовСервера.Соответствие_Добавить(Элементы.СправочникСписок.ТекущиеДанные.Ссылка, _ТекущиеДанныеВетис.guid, _ТекущиеДанныеВетис.name);

	ОбновитьСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУдалитьСвязь(Команда)
	
	#Если МобильноеПриложениеКлиент Тогда
		
		//ВетисВызовСервера.Соответствие_УдалитьProductItem(Элементы.СписокВетис.ТекущиеДанные.guid, Элементы.СписокВетис.ТекущиеДанные.enterpriseguid);
		
	#Иначе
		
		//ВетисВызовСервера.Соответствие_УдалитьProductItem(Элементы.СправочникСписок.ТекущиеДанные.Ссылка, Элементы.СправочникСписок.ТекущиеДанные.Предприятие);
		
	#КонецЕсли
	
	ОбновитьСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьИзСервиса(Команда)
	
	_ТекущиеДанные = Элементы.СписокВетис.ТекущиеДанные;
	
	_Параметры = Новый Структура("name", _ТекущиеДанные.name);
	
	Если Элементы.СправочникСписок.ТекущаяСтрока = Неопределено 
		ИЛИ Элементы.СписокВетис.ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	КомандаЗаполнитьИзСервисаВыборОбработкаОповещения(Элементы.СправочникСписок.ТекущаяСтрока, _Параметры);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаДобавитьИзСервиса(Команда)
	
	Если Элементы.СписокВетис.ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	_форма = ОткрытьФорму("Справочник.ВетисProductItem.ФормаОбъекта");
	
	_форма.Объект.Наименование = Элементы.СписокВетис.ТекущиеДанные.name;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСправочникДобавить(Команда)
	
	Форма = ОткрытьФорму("Справочник.ВетисProductItem.ФормаОбъекта");
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтбор(Команда)
	
	Элементы.ФормаКомандаОтбор.Пометка = НЕ Элементы.ФормаКомандаОтбор.Пометка;
	
	Элементы.ГруппаОтбор.Видимость = Элементы.ФормаКомандаОтбор.Пометка;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСоздатьСвязьВыборОбработкаОповещения(пРезультат, пПараметры) Экспорт
	
	Если НЕ пРезультат = Неопределено Тогда
		
		//ВетисВызовСервера.Соответствие_ДобавитьProductItem(пРезультат, пПараметры.enterpriseguid, пПараметры.guid, пПараметры.name);
		
		ОбновитьСписок();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьИзСервисаВыборОбработкаОповещения(пРезультат, пПараметры) Экспорт
	
	Если НЕ пРезультат = Неопределено Тогда
		
		_форма = ОткрытьФорму("Справочник.ВетисProductItem.ФормаОбъекта", Новый Структура("Ключ", пРезультат));
		
		_форма.Объект.Наименование = пПараметры.name;
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ОтборХСПриИзменении(Элемент)
	
	ОтборХСИспользование = ЗначениеЗаполнено(Объект.ХозяйствующийСубъект);
	ОтборПредприятиеИспользование = Ложь;
	Объект.Предприятие = Неопределено;
	ОтборПредприятиеGuid = "";
	
КонецПроцедуры


&НаКлиенте
Процедура ОтборИспользованиеПриИзменении(Элемент)
	
	Если Элемент = Элементы.ОтборПредприятиеИспользование Тогда
		НастроитьСправочникСписок();
		ОбновитьСписок();
	ИначеЕсли Элемент = Элементы.ОтборПродукцияИспользование Тогда
		ОтборВидПродукцииИспользование = ОтборВидПродукцииИспользование И ОтборПродукцияИспользование;
	КонецЕсли;
	//УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПриИзменении(Элемент)
	
	Выполнить(Элемент.Имя+"Использование=ЗначениеЗаполнено("+Элемент.Имя+");");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПредприятиеGuidПриИзменении(Элемент)
	
	ОтборПредприятиеИспользование = ЗначениеЗаполнено(ОтборПредприятиеGuid);
	//Объект.Предприятие = ВетисDictionaryСлой1с.Enterprise(ОтборПредприятиеGuid);
	НастроитьСправочникСписок(ОтборПредприятиеGuid);
	ОбновитьСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПредприятиеПриИзменении(Элемент)
	
	ОтборПредприятиеИспользование = ЗначениеЗаполнено(Объект.Предприятие);
	ОтборПредприятиеGuid = "";
	НастроитьСправочникСписок();
	ОбновитьСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборТипПродукцииПриИзменении(Элемент)
	
	ОтборТипПродукцииИспользование = ЗначениеЗаполнено(ОтборТипПродукции);
	
	ОтборПродукция = "";
	
	ОтборПродукцияИспользование = Ложь;
	
	ОтборВидПродукции = "";
	
	ОтборВидПродукцииИспользование = Ложь;
	
	ЗаполнитьСписокПродукцииСервер();
	
	ЗаполнитьСписокВидовПродукцииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПродукцияПриИзменении(Элемент)
	
	ОтборПродукцияИспользование = ЗначениеЗаполнено(ОтборПродукция);
	
	ОтборВидПродукции = "";
	
	ОтборВидПродукцииИспользование = Ложь;
	
	ЗаполнитьСписокВидовПродукцииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборВидПродукцииПриИзменении(Элемент)
	
	ОтборВидПродукцииИспользование = ЗначениеЗаполнено(ОтборВидПродукции);
	
	ОтборПродукцияИспользование = ОтборПродукцияИспользование ИЛИ ОтборВидПродукцииИспользование;
	
КонецПроцедуры


&НаКлиенте
Процедура СписокВетисВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Элементы.СправочникСписок.ТекущаяСтрока = ВетисВызовСервера.Соответствие_ПолучитьСсылку(Элементы.СписокВетис.ТекущиеДанные.guid, "Справочник.ВетисProductItem");
	
КонецПроцедуры


&НаСервере
Процедура УстановитьВидимость()
	
	_Версия20 = Ветис.Версия_2_0();
	
	Если _Версия20 Тогда
		//ОтборПродукцияИспользование = ОтборПродукцияИспользование;
		ОтборВидПродукцииИспользование = ОтборВидПродукцииИспользование И ОтборПродукцияИспользование;
		
		Элементы.ОтборХСИспользование.Видимость = Истина;
		Элементы.ОтборПредприятиеИспользование.Видимость = Истина;
		Элементы.ОтборПредприятиеИспользование1.Видимость = Истина;
		Элементы.ОтборТипПродукцииИспользование.Видимость = Ложь;
		
		Элементы.ОтборХС.Видимость = Истина;
		
		//Элементы.ОтборХС.Доступность = ОтборХСИспользование;
		//Элементы.ОтборПредприятие.Доступность = ОтборПредприятиеИспользование;
		//Элементы.ОтборПредприятиеGuid.Доступность = ОтборПредприятиеИспользование;
		//Элементы.ОтборТипПродукции.Доступность = Истина;
		//Элементы.ОтборПродукция.Доступность = ОтборПродукцияИспользование;
		//Элементы.ОтборВидПродукции.Доступность = ОтборВидПродукцииИспользование;
		//
		//Элементы.СписокВетисenterprise.Видимость = НЕ ОтборПредприятиеИспользование;
		Элементы.СписокВетисenterprise.Видимость = Истина;
	Иначе
		ОтборВидПродукцииИспользование = ОтборВидПродукцииИспользование И ОтборПродукцияИспользование;
		
		Элементы.ОтборХСИспользование.Видимость = Ложь;
		Элементы.ОтборПредприятиеИспользование.Видимость = Ложь;
		Элементы.ОтборПредприятиеИспользование1.Видимость = Ложь;
		Элементы.ОтборТипПродукцииИспользование.Видимость = Ложь;
		
		Элементы.ОтборХС.Видимость = Ложь;
		
		//Элементы.ОтборХС.Доступность = Истина;
		Элементы.ОтборПредприятие.Доступность = Истина;
		Элементы.ОтборПредприятиеGuid.Доступность = Истина;
		Элементы.ОтборТипПродукции.Доступность = Истина;
		//Элементы.ОтборПродукция.Доступность = ОтборПродукцияИспользование;
		//Элементы.ОтборВидПродукции.Доступность = ОтборВидПродукцииИспользование;
		//
		
		Элементы.СписокВетисenterprise.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписок()
	
	#Если НЕ МобильноеПриложениеКлиент Тогда
	Элементы.СправочникСписок.Обновить();
	#КонецЕсли
	
КонецПроцедуры


&НаСервере
Процедура НастроитьСправочникСписок(Guid=Неопределено)
	
	Если НЕ Guid=Неопределено Тогда
		Объект.Предприятие = ВетисDictionaryСлой1с.Enterprise(Guid);
	КонецЕсли;
	
	#Если НЕ МобильноеПриложениеСервер Тогда
		СправочникСписок.ТекстЗапроса =
		"ВЫБРАТЬ
		|	_Таблица.Ссылка,
		|	_Таблица.Код,
		|	_Таблица.Наименование КАК Наименование
		|//оп,	_Ветис.guid КАК guid
		|//оп,	_Ветис.Предприятие КАК Предприятие
		|//оп,	_Ветис.name КАК _name
		|ИЗ
		|	Справочник.ВетисProductItem КАК _Таблица
		|//оп		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВетисСоответствие КАК _Ветис
		|//оп		ПО _Таблица.Ссылка = _Ветис.Ссылка
		|//оп			И _Ветис.Предприятие = &Предприятие
		|ГДЕ
		|	ИСТИНА
		|	И НЕ _Таблица.ПометкаУдаления
		|	И НЕ _Таблица.ЭтоГруппа
		|	И ИСТИНА";
		СправочникСписок.ОсновнаяТаблица = "Справочник.ВетисProductItem";
		
		Если ОтборПредприятиеИспользование Тогда
			СправочникСписок.ТекстЗапроса = СтрЗаменить(СправочникСписок.ТекстЗапроса, "//оп", "");
			СправочникСписок.Параметры.УстановитьЗначениеПараметра("Предприятие", Объект.Предприятие);
		КонецЕсли;
		
		Элементы.СправочникСписокguid.Видимость = ОтборПредприятиеИспользование;
		Элементы.СправочникСписокname.Видимость = ОтборПредприятиеИспользование;
	#КонецЕсли
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьСписокПродукцииСервер()
	
	Перем _Product, _параметры;
	
	Элементы.ОтборПродукция.СписокВыбора.Очистить();
	
	Если НЕ ЗначениеЗаполнено(ОтборТипПродукции) Тогда
		Возврат;
	КонецЕсли;
	
	_Версия20 = Ветис.Версия_2_0();
	_ВетисProductService = ?(_Версия20, ВетисProductService_2_0, ВетисProductService);
	_ВетисArgusProductionСлой1с = ?(_Версия20, ВетисDictionaryСлой1с, ВетисArgusProductionСлой1с);
	
	_productType = _ВетисArgusProductionСлой1с.ProductType(ОтборТипПродукции);
	
	Пока _ВетисProductService.GetProductByTypeListNext(_productType, _Product, _параметры) Цикл
		
		Элементы.ОтборПродукция.СписокВыбора.Добавить(_product.guid, _product.name);
		
	КонецЦикла;
	
	Элементы.ОтборПродукция.СписокВыбора.СортироватьПоПредставлению();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВидовПродукцииСервер()
	
	Перем _subProduct, _параметры;
	
	Элементы.ОтборВидПродукции.СписокВыбора.Очистить();
	
	Если НЕ ЗначениеЗаполнено(ОтборПродукция) Тогда
		Возврат;
	КонецЕсли;
	
	_Версия20 = Ветис.Версия_2_0();
	_ВетисProductService = ?(_Версия20, ВетисProductService_2_0, ВетисProductService);
	
	Пока _ВетисProductService.GetSubProductByProductListNext(ОтборПродукция, _subProduct, _параметры) Цикл
		
		Элементы.ОтборВидПродукции.СписокВыбора.Добавить(_subProduct.guid, _subProduct.name);
		
	КонецЦикла;
	
	Элементы.ОтборВидПродукции.СписокВыбора.СортироватьПоПредставлению();
	
КонецПроцедуры

&НаСервере
Процедура КомандаНайтиСервер()
	
	Перем _product, _subProduct, _productItem;
	
	_Версия20 = Ветис.Версия_2_0();
	
	СписокВетис.Очистить();
	
	_ОтборПродукцияЭлемент = Элементы.ОтборПродукция.СписокВыбора.НайтиПоЗначению(ОтборПродукция);
	_ОтборВидПродукцииЭлемент = Элементы.ОтборВидПродукции.СписокВыбора.НайтиПоЗначению(ОтборВидПродукции);
	_ОтборПродукцияПредставление = ?(_ОтборПродукцияЭлемент = Неопределено, "", _ОтборПродукцияЭлемент.Представление);
	_ОтборВидПродукцииПредставление = ?(_ОтборВидПродукцииЭлемент = Неопределено, "", _ОтборВидПродукцииЭлемент.Представление);
	
	Если _Версия20 Тогда
		
		_businessEntity = ВетисDictionary_2_0.BusinessEntity(?(ОтборХСИспользование, ВетисDictionaryСлой1с.BusinessEntity(Объект.ХозяйствующийСубъект), Неопределено));
		_enterprise  = ВетисDictionary_2_0.Enterprise(?(ОтборПредприятиеИспользование, ?(ЗначениеЗаполнено(Объект.Предприятие), ВетисDictionaryСлой1с.Enterprise(Объект.Предприятие), ОтборПредприятиеGuid), Неопределено));
		
		_productType = ВетисDictionaryСлой1с.ProductType(ОтборТипПродукции);
		_product     = ВетисDictionary_2_0.Product(?(ОтборПродукцияИспользование, ОтборПродукция, Неопределено));
		_subProduct  = ВетисDictionary_2_0.SubProduct(?(ОтборВидПродукцииИспользование, ОтборВидПродукции, Неопределено));
		
		_subProductСоответствие = Новый Соответствие;
		//_subProductСоответствие.Вставить(ОтборВидПродукции, ОтборВидПродукцииПредставление);
		
		_productСоответствие = Новый Соответствие;
		//_productСоответствие.Вставить(ОтборПродукция, ОтборПродукцияПредставление);
		
		_enterpriseСоответствие = Новый Соответствие;
		//_enterpriseСоответствие.Вставить(_enterprise.guid, ?(ЗначениеЗаполнено(Объект.Предприятие), Объект.Предприятие, ОтборПредприятиеПредставление));
		
		_параметрыPI = Неопределено;
		Пока ВетисProductService_2_0.GetProductItemListNext(_productType, _product, _subProduct, _businessEntity, _enterprise, _productItem, _параметрыPI) Цикл
			
			Если НЕ _productItem.producing = Неопределено И _productItem.producing.Количество() > 0
				И НЕ _productItem.producing[0].location = Неопределено
				И НЕ _productItem.producing[0].location.guid = Неопределено
				И _enterpriseСоответствие.Получить(_productItem.producing[0].location.guid) = Неопределено Тогда
				_item = ВетисEnterpriseService_2_0.GetEnterpriseByGuid(_productItem.producing[0].location.guid);
				Если _item = Неопределено Тогда
					_enterpriseСоответствие.Вставить(_productItem.producing[0].location.guid, "");
				Иначе
					_enterpriseСоответствие.Вставить(_item.guid, _item.name);
				КонецЕсли;
			КонецЕсли;
			
			Если _subProductСоответствие.Получить(_productItem.subProduct.guid) = Неопределено Тогда
				//2017-11-01
				//entityNotFoundFault
				//SubProduct with guid [02eec86c-54f3-2d20-6311-d3db41a2e2d1] not found.
				//т.е. то что вернул GetProductItemList
				_item = ВетисProductService_2_0.GetSubProductByGuid(_productItem.subProduct.guid,,Ложь);
				Если _item = Неопределено Тогда
					_subProductСоответствие.Вставить(_productItem.subProduct.guid, "");
				Иначе
					_subProductСоответствие.Вставить(_item.guid, _item.name);
				КонецЕсли;
			КонецЕсли;
			
			Если _productСоответствие.Получить(_productItem.product.guid) = Неопределено Тогда
				_item = ВетисProductService_2_0.GetProductByGuid(_productItem.product.guid);
				Если _item = Неопределено Тогда
					_productСоответствие.Вставить(_productItem.product.guid, "");
				Иначе
					_productСоответствие.Вставить(_item.guid, _item.name);
				КонецЕсли;
			КонецЕсли;
			
			_СписокСтрока = СписокВетис.Добавить();
			_СписокСтрока.name = _productItem.name;
			_СписокСтрока.guid = _productItem.guid;
			_СписокСтрока.productType = ВетисDictionaryСлой1с.ProductType(_productItem.productType);
			_СписокСтрока.subProduct = _subProductСоответствие.Получить(_productItem.subProduct.guid);
			_СписокСтрока.product = _productСоответствие.Получить(_productItem.product.guid);
			
			Если НЕ _productItem.producing = Неопределено И _productItem.producing.Количество() > 0 Тогда
				_СписокСтрока.enterpriseguid = _productItem.producing[0].location.guid;
				_СписокСтрока.enterprise = _enterpriseСоответствие.Получить(_СписокСтрока.enterpriseguid);
				_СписокСтрока.link = НЕ Ветис.Соответствие_ПолучитьСсылку(_productItem.guid, "Справочник.ВетисProductItem", Ложь) = Ложь;
			КонецЕсли;
			
			Если МаксимальноеКоличество > 0 И СписокВетис.Количество() >= МаксимальноеКоличество Тогда Прервать; КонецЕсли;
			
		КонецЦикла;
	Иначе
		_productType = ВетисArgusProductionСлой1с.ProductType(ОтборТипПродукции);
		_enterpriseGuid = ВетисCerberusEnterpriseСлой1с.Enterprise(Объект.Предприятие);
		Если ОтборВидПродукцииИспользование Тогда
			_параметрыPI = Неопределено;
			Пока ВетисProductService.GetProductItemListNext(ОтборВидПродукции, _enterpriseGuid, _productItem, _параметрыPI) Цикл
				_СписокСтрока = СписокВетис.Добавить();
				_СписокСтрока.name = _productItem.name;
				_СписокСтрока.guid = _productItem.guid;
				_СписокСтрока.productType = ВетисDictionaryСлой1с.ProductType(_productItem.productType);
				_СписокСтрока.subProduct = _ОтборВидПродукцииПредставление;
				_СписокСтрока.product = _ОтборПродукцияПредставление;
				Если МаксимальноеКоличество > 0 И СписокВетис.Количество() >= МаксимальноеКоличество Тогда Прервать; КонецЕсли;
			КонецЦикла;
			
		ИначеЕсли ОтборПродукцияИспользование Тогда
			_параметрыS = Неопределено;
			Пока ВетисProductService.GetSubProductByProductListNext(ОтборПродукция, _subProduct, _параметрыS) Цикл
				_параметрыPI = Неопределено;
				Пока ВетисProductService.GetProductItemListNext(_subProduct.guid, _enterpriseGuid, _productItem, _параметрыPI) Цикл
					_СписокСтрока = СписокВетис.Добавить();
					_СписокСтрока.name = _productItem.name;
					_СписокСтрока.guid = _productItem.guid;
					_СписокСтрока.productType = ВетисDictionaryСлой1с.ProductType(_productItem.productType);
					_СписокСтрока.subProduct = _subProduct.name;
					_СписокСтрока.product = _ОтборПродукцияПредставление;
					Если МаксимальноеКоличество > 0 И СписокВетис.Количество() >= МаксимальноеКоличество Тогда Прервать; КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			
		Иначе
			_параметрыP = Неопределено;
			Пока ВетисProductService.GetProductByTypeListNext(_productType, _product, _параметрыP) Цикл
				_параметрыS = Неопределено;
				Пока ВетисProductService.GetSubProductByProductListNext(_product.guid, _subProduct, _параметрыS) Цикл
					_параметрыPI = Неопределено;
					Пока ВетисProductService.GetProductItemListNext(_subProduct.guid, _enterpriseGuid, _productItem, _параметрыPI) Цикл
						_СписокСтрока = СписокВетис.Добавить();
						_СписокСтрока.name = _productItem.name;
						_СписокСтрока.guid = _productItem.guid;
						_СписокСтрока.productType = ВетисDictionaryСлой1с.ProductType(_productItem.productType);
						_СписокСтрока.subProduct = _subProduct.name;
						_СписокСтрока.product = _product.name;
						Если МаксимальноеКоличество > 0 И СписокВетис.Количество() >= МаксимальноеКоличество Тогда Прервать; КонецЕсли;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
			
		КонецЕсли;
	КонецЕсли;
	
	СписокВетис.Сортировать("name");
		
КонецПроцедуры
