
Функция ActivityLocationList(BusinessMember) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.ActivityLocationList(BusinessMember);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.ActivityLocationList(BusinessMember);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

Функция Address(addressView = Неопределено, countryGuid = Неопределено, regionGuid = Неопределено, districtGuid = Неопределено, localityGuid = Неопределено, streetGuid = Неопределено, house = Неопределено, building = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.Address(addressView, countryGuid, regionGuid, districtGuid, localityGuid, streetGuid, house, building);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.Address(addressView, countryGuid, regionGuid, districtGuid, localityGuid, streetGuid, house, building);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисIkar_1_4.Address(addressView, countryGuid, regionGuid, districtGuid, localityGuid, streetGuid, house, building);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

//Тип, описывающий заболевание.
//Параметры:
// name - Наименование заболевания
Функция AnimalDisease(guid = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.AnimalDisease(guid);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.AnimalDisease(guid);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

//тип, описывающий хозяйствующий субъект (ХС)
// Параметры:
//  guid - Строка - собственно guid
//       - Структура - структура со значениями свойств
Функция BusinessEntity(guid = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.BusinessEntity(guid);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.BusinessEntity(guid);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисCerberusEnterprise_1_4.BusinessEntity(guid);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

//тип, описывающий связку хозяйствующего субъекта и площадки (поднадзорного объекта)
Функция BusinessMember(businessEntityGuid, enterpriseGuid, globalID = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.BusinessMember(businessEntityGuid, enterpriseGuid, globalID);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.BusinessMember(businessEntityGuid, enterpriseGuid, globalID);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисCerberusEnterprise_1_4.BusinessMember(businessEntityGuid, enterpriseGuid);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

Функция ComplexDate(Object, Day = Ложь, Hour = Ложь, Minute = Ложь) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.ComplexDate(Object, Day, Hour, Minute);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.ComplexDate(Object, Day, Hour, Minute);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисBase_1_4.ComplexDate(Object, Day);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

Функция Country(guid = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.Country(guid);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.Country(guid);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисIkar_1_4.Country(guid);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

Функция CountryList(guid = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.CountryList(guid);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.CountryList(guid);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисIkar_1_4.CountryList(guid);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

Функция District(guid = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.District(guid);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.District(guid);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисIkar_1_4.District(guid);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

Функция DistrictList(guid = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.DistrictList(guid);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.DistrictList(guid);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисIkar_1_4.DistrictList(guid);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

//тип, описывающий предприятие
// Параметры:
//  guid - Строка - собственно guid
//       - Структура - структура со значениями свойств
Функция Enterprise(guid = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.Enterprise(guid);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.Enterprise(guid);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисCerberusEnterprise_1_4.Enterprise(guid);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

Функция EnterpriseActivity(name = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.EnterpriseActivity(name);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.EnterpriseActivity(name);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисCerberusEnterprise_1_4.EnterpriseActivity(name);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

Функция EnterpriseActivityList(activity = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.EnterpriseActivityList(activity);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.EnterpriseActivityList(activity);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисCerberusEnterprise_1_4.EnterpriseActivityList(activity);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

Функция EnterpriseList(enterprise = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.EnterpriseList(enterprise);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.EnterpriseList(enterprise);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисCerberusEnterprise_1_4.EnterpriseList(enterprise);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

Функция EnterpriseNumberList(enterpriseNumber = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.EnterpriseNumberList(enterpriseNumber);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.EnterpriseNumberList(enterpriseNumber);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисCerberusEnterprise_1_4.EnterpriseNumberList(enterpriseNumber);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

Функция FederalDistrict(guid = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.FederalDistrict(guid);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.FederalDistrict(guid);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисIkar_1_4.FederalDistrict(guid);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

Функция IncorporationForm(code, shortName = "", name = "") Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.IncorporationForm(code, shortName, name);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.IncorporationForm(code, shortName, name);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисCerberusEnterprise_1_4.IncorporationForm(code, shortName, name);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

Функция Locality(guid = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.Locality(guid);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.Locality(guid);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисIkar_1_4.Locality(guid);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

Функция LocalityList(guid = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.LocalityList(guid);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.LocalityList(guid);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисIkar_1_4.LocalityList(guid);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

//Тип, содержащий информацию о пункте маршрута следования.
//Параметры:
// name - Название пункта перегрузки
// address - Адрес пункта перегрузки
Функция Location(name = "", address = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.Location(name, address);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.Location(name, address);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

//Тип, описывающий препарат/вакцину, которыми обрабатывались животные.
//Параметры:
// ID - Идентификационный (уникальный) номер препарата
// name - Наименование вакцины/препарата
// series - Номер серии препарата/вакцины
// producer - dt:BusinessMember - Производитель препарата/вакцины
Функция MedicinalDrug(ID = "", name = "", series = "", producer = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.MedicinalDrug(ID, name, series, producer);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.MedicinalDrug(ID, name, series, producer);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

//Тип, описывающий организацию, в т.ч. учреждения структуры Россельхознадзора, ветеринарных управлений субъектов РФ и т.д.
Функция Organization() Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.Organization();
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.Organization();
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

//Тип, описывающий упаковку партии продукции.
//Поддерживается указание многоуровневой упаковки и маркировки партии продукции.
//Параметры:
// level        - dt:PackageLevelType - Уровень упаковки
// packingType  - dt:PackingType - Тип упаковки
// quantity     - xs:integer - Количество единиц упаковки
// productMarks - dt:ProductMarks - Маркировка партии продукции
Функция Package(level = Неопределено, packingType = Неопределено, quantity = Неопределено, productMarks = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.Package(level, packingType, quantity, productMarks);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.Package(level, packingType, quantity, productMarks);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

Функция PackageList(package = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.PackageList(package);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.PackageList(package);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

//Тип, описывающий вариант фасовки продукции.
//Поддерживается указание многоуровневой упаковки и маркировки партии продукции.
//Параметры:
// packagingType - dt:PackingType - Тип упаковки
// quantity    - xs:integer - Количество единиц упаковки
// volume      - bs:Decimal - Объём единицы упаковки товара
// unit        - dt:Unit - Единица измерения объёма единицы упаковки товара
Функция Packaging(packagingType, quantity = Неопределено, volume = Неопределено, unit = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.Packaging(packagingType, quantity, volume, unit);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.Packaging(packagingType, quantity, volume, unit);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

//Тип, описывающий вид упаковки.
//по xsd это bs:GenericVersioningEntity, по справке bs:GenericEntity (24.10.2017), считаем что по xsd правильнее
Функция PackingType(guid = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.PackingType(guid);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.PackingType(guid);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисArgusCommon_1_4.PackingForm(guid);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

Функция PackingFormList(packingForm) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисArgusCommon_1_4.PackingFormList(packingForm);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

//тип, описывающий производителя продукции
Функция Producer(enterpriseGuid = Неопределено, role = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.Producer(enterpriseGuid, role);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.Producer(enterpriseGuid, role);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисCerberusEnterprise_1_4.Producer(enterpriseGuid, role);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

//Тип, описывающий список производителей продукции
Функция ProducerList(guid) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.ProducerList(guid);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.ProducerList(guid);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисCerberusEnterprise_1_4.ProducerList(guid);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

//Тип, описывающий продукцию.
Функция Product(guid = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.Product(guid);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.Product(guid);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисArgusProduction_1_4.Product(guid);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

//Тип, описывающий cведения о наименовании продукции в соответствии с номенклатурой производителя.
Функция ProductItem(guid = Неопределено, name = Неопределено, packaging = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.ProductItem(guid, name, packaging);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.ProductItem(guid, name, packaging);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисArgusProduction_1_4.ProductItem(guid, name);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

//Тип, описывающий список наименований продукции
//Параметры:
// productItemList - Наименование продукции в номенклатуре производителя. Массив - dt:ProductItem 0..*
Функция ProductItemList(productItemList = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.ProductItemList(productItemList);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.ProductItemList(productItemList);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисArgusProduction_1_4.ProductItemList(productItemList);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

//Тип, описывающий площадку, на которой выпускается продукция
//Параметры:
// location - Площадка, осуществляющая выпуск продукции. dt:Enterprise 1..1
Функция ProductItemProducing(location = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.ProductItemProducing(location);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.ProductItemProducing(location);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

//Тип, описывающий список маркировок продукции.
//Под маркировкой понимается всё, что может быть физически нанесено на упаковку или непосредственно на продукцию.
//Для каждой маркировки может быть указан её тип (см. атрибут class), который также может определять формат маркировки.
//Параметры:
// class - Описание упаковки. dt:ProductMarkingClass
Функция ProductMarks(content = Неопределено, class = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.ProductMarks(content, class);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.ProductMarks(content, class);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

//Тип, описывающий назначение груза.
Функция Purpose(guid = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.Purpose(guid);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.Purpose(guid);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисArgusCommon_1_4.Purpose(guid);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

Функция Region(guid = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.Region(guid);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.Region(guid);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисIkar_1_4.Region(guid);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

Функция RegionList(guid = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.RegionList(guid);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.RegionList(guid);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисIkar_1_4.RegionList(guid);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

//Тип, описывающий условие регионализации, соблюдаемое при перевозке груза.
//Параметры:
// referenceNumber - Номер условия
// text - xs:Text - Формулировка условия
// strict - xs:boolean - Обязательность соблюдения условия
// relatedDisease - xs:String - Заболевание, к которому относится данное условие
Функция RegionalizationCondition(guid = Неопределено, referenceNumber = Неопределено, text = Неопределено, strict = Неопределено, relatedDisease = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.RegionalizationCondition(guid, referenceNumber, text, strict, relatedDisease);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.RegionalizationCondition(guid, referenceNumber, text, strict, relatedDisease);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

//Тип, содержащий информацию о пункте маршрута следования.
//Параметры:
// name - Наименование метода исследования
Функция ResearchMethod(name = "") Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.ResearchMethod(name);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.ResearchMethod(name);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

Функция Street(guid = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.Street(guid);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.Street(guid);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисIkar_1_4.Street(guid);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

Функция StreetList(guid = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисDictionary_2_0.StreetList(guid);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисDictionary_2_0.Street(guid);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисIkar_1_4.StreetList(guid);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

//Тип, описывающий вид продукции.
Функция SubProduct(guid = Неопределено, name = Неопределено) Экспорт
	
	_Объект = Создать("SubProduct");
	
	ВетисОбщегоНазначения.УстановитьЗначение(_Объект, guid);
	ВетисОбщегоНазначения.УстановитьЗначение(_Объект, name, "name");
	
	Возврат _Объект;
	
КонецФункции

//Тип, описывающий единицу измерения.
Функция Unit(guid = Неопределено) Экспорт
	
	_Объект = Создать("Unit");
	
	ВетисОбщегоНазначения.УстановитьЗначение(_Объект, guid);
	
	Возврат _Объект;
	
КонецФункции


//Природа ВСД (электронный или бумажный).
Функция DocumentNature(value) Экспорт
	
	Если      value = 1 Тогда
		Возврат ВетисКонстанты.DocumentNature_ELECTRONIC();
	ИначеЕсли value = 2 Тогда
		Возврат ВетисКонстанты.DocumentNature_PAPER();
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция ProductMarkingClass(value) Экспорт
	
	Если      value = 1 Тогда
		Возврат ВетисКонстанты.ProductMarkingClass_UNDEFINED();
	ИначеЕсли value = 2 Тогда
		Возврат ВетисКонстанты.ProductMarkingClass_BN();
	ИначеЕсли value = 3 Тогда
		Возврат ВетисКонстанты.ProductMarkingClass_SSCC();
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

//Тип, описывающий cпособ хранения при перевозке.
Функция TransportationStorageType(value) Экспорт
	
	Если      value = 1 Тогда
		Возврат ВетисКонстанты.TransportationStorageType_FROZEN();
	ИначеЕсли value = 2 Тогда
		Возврат ВетисКонстанты.TransportationStorageType_CHILLED();
	ИначеЕсли value = 3 Тогда
		Возврат ВетисКонстанты.TransportationStorageType_COOLED();
	ИначеЕсли value = 4 Тогда
		Возврат ВетисКонстанты.TransportationStorageType_VENTILATED();
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции


Функция Создать(пИмя, пФабрика = Неопределено) Экспорт
	
	Возврат ВетисОбщегоНазначения.Создать(пИмя, URI(), пФабрика);
	
КонецФункции

Функция URI() Экспорт
	
	Возврат "http://api.vetrf.ru/schema/cdm/dictionary/v2";
	
КонецФункции
