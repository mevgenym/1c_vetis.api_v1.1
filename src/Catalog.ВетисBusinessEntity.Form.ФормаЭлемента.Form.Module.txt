
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	уид = Объект.Ссылка.УникальныйИдентификатор();
	
	ЗаполнитьРеквизитыНаСервере(Объект);
	
	КомандаПредприятияЗаполнитьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	КомандаПредприятияЗаписатьНаСервере();
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаЗаполнитьИзСервиса(Команда)
	
	Перем _Ошибка, _Отказ;
	
	КомандаЗаполнитьИзСервисаНаСервере(_Отказ, _Ошибка);
	
	Если _Отказ = Истина Тогда
		Сообщить(_Ошибка);
	Иначе
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура КомандаЗаполнитьИзСервисаНаСервере(пОтказ, пОшибка)
	
	Если ЗначениеЗаполнено(Объект.Ссылка.УникальныйИдентификатор()) Тогда
		_guid = Строка(Объект.Ссылка.УникальныйИдентификатор());
	Иначе
		_guid = Объект.guid;
	КонецЕсли;
	
	_be = ВетисEnterpriseService.GetBusinessEntityByGuid(_guid, пОтказ, пОшибка);
	
	Если пОтказ = Истина Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Истина;
	
	_Объект = РеквизитФормыВЗначение("Объект");
	
	_Объект.Заполнить(_be);
	
	ЗначениеВРеквизитФормы(_Объект, "Объект");
	
	ЗаполнитьРеквизитыНаСервере(_be);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПредприятияЗаполнить(Команда)
	
	Если Модифицированность Тогда
		Сообщить("Сохраните изменения!");
		Возврат;
	КонецЕсли;
	
	КомандаПредприятияЗаполнитьИзСервисаНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура КомандаПредприятияЗаполнитьНаСервере(Enterprise = Неопределено)
	
	Если Enterprise = Неопределено Тогда
		Предприятия.Очистить();
	Иначе
		РегистрыСведений.ВетисBusinessMembers.Добавить(Объект.Ссылка, Enterprise);
	КонецЕсли;
	
	Запрос = Новый Запрос(КомандаПредприятияЗаполнитьПолучитьТекстЗапроса());
	
	Запрос.УстановитьПараметр("BusinessEntity", Объект.Ссылка);
	Запрос.УстановитьПараметр("Enterprise", Enterprise);
	
	Если НЕ Enterprise = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//1", "");
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Enterprise = Неопределено Тогда
			ЗаполнитьЗначенияСвойств(Предприятия.Добавить(), Выборка);
		Иначе
			_ПредприятияСтрока = Предприятия.НайтиСтроки(Новый Структура("Ссылка",Выборка.Ссылка));
			Если _ПредприятияСтрока.Количество() > 0 Тогда
				_ПредприятияСтрока = _ПредприятияСтрока[0];
			Иначе
				_ПредприятияСтрока = Предприятия.Добавить();
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(_ПредприятияСтрока, Выборка);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция КомандаПредприятияЗаполнитьПолучитьТекстЗапроса()
	Возврат
	"ВЫБРАТЬ
	|	МАКСИМУМ(_Таблица.Период) КАК Период,
	|	_Таблица.Enterprise КАК Enterprise
	|ПОМЕСТИТЬ ВПериод
	|ИЗ
	|	РегистрСведений.ВетисЖурналОпераций КАК _Таблица
	|ГДЕ
	|	ИСТИНА
	|	И _Таблица.BusinessEntity = &BusinessEntity
	|//1	И _Таблица.Enterprise = &Enterprise
	|	И _Таблица.Направление = ЗНАЧЕНИЕ(Перечисление.ВетисНаправлениеОперации.Ответ)
	|	И _Таблица.Операция В
	|			(ВЫБРАТЬ
	|				Справочник.ВетисОперации.Ссылка
	|			ИЗ
	|				Справочник.ВетисОперации
	|			ГДЕ
	|				Справочник.ВетисОперации.Наименование = ""getStockEntryChangesList"")
	|
	|СГРУППИРОВАТЬ ПО
	|	_Таблица.Enterprise
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	_Таблица.Представление КАК Представление,
	|	_Таблица.Enterprise КАК Enterprise
	|ПОМЕСТИТЬ _ЖурналОпераций
	|ИЗ
	|	РегистрСведений.ВетисЖурналОпераций КАК _Таблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВПериод КАК _Период
	|		ПО _Таблица.Enterprise = _Период.Enterprise
	|			И _Таблица.Период = _Период.Период
	|ГДЕ
	|	ИСТИНА
	|	И _Таблица.BusinessEntity = &BusinessEntity
	|//1	И _Таблица.Enterprise = &Enterprise
	|	И _Таблица.Направление = ЗНАЧЕНИЕ(Перечисление.ВетисНаправлениеОперации.Ответ)
	|	И _Таблица.Операция В
	|			(ВЫБРАТЬ
	|				Справочник.ВетисОперации.Ссылка
	|			ИЗ
	|				Справочник.ВетисОперации
	|			ГДЕ
	|				Справочник.ВетисОперации.Наименование = ""getStockEntryChangesList"")
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	_Таблица.Enterprise КАК Ссылка,
	|	_Таблица.Enterprise.guid КАК guid,
	|	_Таблица.Enterprise.last КАК last,
	|	_Таблица.Enterprise.active КАК active,
	|	_Таблица.Enterprise.status КАК status,
	|	_Таблица.Enterprise.name КАК name,
	|	_Таблица.Enterprise.eOwner КАК Owner,
	|	_Таблица.Enterprise.addressView КАК addressView,
	|	_Таблица.Enterprise.type КАК type,
	|	_Таблица.Enterprise.enterpriseNumber КАК enterpriseNumber,
	|	_Таблица.ВСервисе,
	|	_Таблица.Свой,
	|	_Таблица.Использовать,
	|	ВЫРАЗИТЬ(_ЖурналОпераций.Представление КАК СТРОКА(100)) КАК ПоследнийОтвет
	|ИЗ
	|	РегистрСведений.ВетисBusinessMembers КАК _Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ _ЖурналОпераций КАК _ЖурналОпераций
	|		ПО _Таблица.Enterprise = _ЖурналОпераций.Enterprise
	|ГДЕ
	|	ИСТИНА
	|	И _Таблица.BusinessEntity = &BusinessEntity
	|//1	И _Таблица.Enterprise = &Enterprise
	|
	|УПОРЯДОЧИТЬ ПО
	|	name";
	
КонецФункции

&НаСервере
Процедура КомандаПредприятияЗаполнитьИзСервисаНаСервере(_Отказ = Ложь, _Ошибка = "")
	
	Перем _Enterprise, _Параметры;
	
	КомандаПредприятияЗаполнитьНаСервере();
	
	Пока ВетисEnterpriseService.GetActivityLocationListNext(ВетисDictionaryСлой1с.BusinessEntity(Объект.Ссылка), _Enterprise, _Параметры, _Отказ, _Ошибка) Цикл
		_ПредприятияСтрока = Предприятия.НайтиСтроки(Новый Структура("guid",_Enterprise.guid));
		Если _ПредприятияСтрока.Количество() > 0 Тогда
			_ПредприятияСтрока = _ПредприятияСтрока[0];
		Иначе
			_ПредприятияСтрока = Предприятия.Добавить();
		КонецЕсли;
		_Owner = ВетисDictionaryСлой1с.BusinessEntity(_Enterprise.Owner, ПредопределенноеЗначение("Справочник.ВетисBusinessEntity.ПустаяСсылка"));
		_status = ВетисBaseСлой1с.VersionStatus(_Enterprise.Status);
		_type = ВетисDictionaryСлой1с.EnterpriseType(_Enterprise.type);
		_enterpriseNumber = "";
		Если НЕ _Enterprise.numberList = Неопределено Тогда
			Для каждого _enterpriseNumber1 Из _Enterprise.numberList.enterpriseNumber Цикл
				_enterpriseNumber = _enterpriseNumber + ?(_enterpriseNumber="","","; ") + _enterpriseNumber1;
			КонецЦикла;
		КонецЕсли;
		Если ЗначениеЗаполнено(_ПредприятияСтрока.Ссылка) Тогда
			_ПредприятияСтрока.ЕстьОтличия = Ложь
				ИЛИ НЕ _ПредприятияСтрока.name = _Enterprise.name
				ИЛИ НЕ _ПредприятияСтрока.last = _Enterprise.last
				ИЛИ НЕ _ПредприятияСтрока.active = _Enterprise.active
				ИЛИ НЕ _ПредприятияСтрока.Owner = _Owner
				ИЛИ НЕ _ПредприятияСтрока.status = _Status
				ИЛИ НЕ _ПредприятияСтрока.type = _type
				ИЛИ НЕ _ПредприятияСтрока.addressView = _Enterprise.address.addressView
				ИЛИ НЕ _ПредприятияСтрока.enterpriseNumber = _enterpriseNumber;
		КонецЕсли;
		_ПредприятияСтрока.ВСервисе = Истина;
		_ПредприятияСтрока.guid = _Enterprise.guid;
		_ПредприятияСтрока.name = _Enterprise.name;
		_ПредприятияСтрока.last = _Enterprise.last;
		_ПредприятияСтрока.active = _Enterprise.active;
		_ПредприятияСтрока.Owner = _Owner;
		_ПредприятияСтрока.status = _Status;
		_ПредприятияСтрока.type = _type;
		_ПредприятияСтрока.addressView = _Enterprise.address.addressView;
		_ПредприятияСтрока.enterpriseNumber = _enterpriseNumber;
	КонецЦикла;
	
	Если _Отказ = Истина Тогда
		ВетисОбщегоНазначения.ВывестиСообщение(_Ошибка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПредприятияЗаписать(Команда)
	КомандаПредприятияЗаписатьНаСервере();
КонецПроцедуры

&НаСервере
Процедура КомандаПредприятияЗаписатьНаСервере()
	
	_BusinessMembers = РегистрыСведений.ВетисBusinessMembers.СоздатьНаборЗаписей();
	_BusinessMembers.Отбор.BusinessEntity.Установить(Объект.Ссылка);
	
	Для каждого _ПредприятияСтрока Из Предприятия Цикл
		Если НЕ ЗначениеЗаполнено(_ПредприятияСтрока.guid) Тогда
			Продолжить;
		КонецЕсли;
		Если ЗначениеЗаполнено(_ПредприятияСтрока.Ссылка) Тогда
			_Ссылка = _ПредприятияСтрока.Ссылка;
		Иначе
			_Ссылка = ВетисDictionaryСлой1с.Enterprise(_ПредприятияСтрока.guid);
		КонецЕсли;
		_Запись = _BusinessMembers.Добавить();
		_Запись.BusinessEntity = Объект.Ссылка;
		_Запись.Enterprise = _Ссылка;
		_Запись.Использовать = _ПредприятияСтрока.Использовать;
		_Запись.ВСервисе = _ПредприятияСтрока.ВСервисе;
		_Запись.Свой = _ПредприятияСтрока.Свой;
	КонецЦикла;
	
	_BusinessMembers.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПривязатьВСервисе(Команда)
	
	Перем _Отказ, _Ошибка;
	
	_ТекущиеДанные = Элементы.Предприятия.ТекущиеДанные;
	
	ModifyActivityLocations(Объект.Ссылка, _ТекущиеДанные.Ссылка, Истина, _Отказ, _Ошибка);
	
	Если _Отказ = Истина Тогда
		Сообщить(_Ошибка);
		Возврат;
	КонецЕсли;
	
	_ТекущиеДанные.ВСервисе = Истина;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтвязатьВСервисе(Команда)
	
	Перем _Отказ, _Ошибка;
	
	_ТекущиеДанные = Элементы.Предприятия.ТекущиеДанные;
	
	ModifyActivityLocations(Объект.Ссылка, _ТекущиеДанные.Ссылка, Ложь, _Отказ, _Ошибка);
	
	Если _Отказ = Истина Тогда
		Сообщить(_Ошибка);
		Возврат;
	КонецЕсли;
	
	_ТекущиеДанные.ВСервисе = Ложь;
	
	Модифицированность = Истина;
	
КонецПроцедуры


&НаКлиенте
Процедура ПредприятияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	//ОткрытьФорму("Справочник.ВетисEnterprise.ФормаВыбора", Новый Структура("BusinessEntity", Объект.Ссылка),,,,,Новый ОписаниеОповещения("ПредприятияПередНачаломДобавленияОбработкаОповещения",ЭтаФорма));
	ОткрытьФорму("Справочник.ВетисEnterprise.ФормаВыбора", Новый Структура,,,,,Новый ОписаниеОповещения("ПредприятияПередНачаломДобавленияОбработкаОповещения",ЭтаФорма));
	
КонецПроцедуры

&НаКлиенте
Процедура ПредприятияПередНачаломДобавленияОбработкаОповещения(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		_Строки = Предприятия.НайтиСтроки(Новый Структура("Ссылка", Результат));
		Если _Строки.Количество() = 0 Тогда
			КомандаПредприятияЗаполнитьНаСервере(Результат);
			//Предприятия.Сортировать("name");
			//_Строки = Предприятия.НайтиСтроки(Новый Структура("Ссылка", Результат));
			//Элементы.Предприятия.ТекущаяСтрока = Предприятия.Индекс(_Строки[0]);
			Элементы.Предприятия.ТекущаяСтрока = Предприятия.Количество()-1;
		Иначе
			Элементы.Предприятия.ТекущаяСтрока = Предприятия.Индекс(_Строки[0]);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПредприятияПередНачаломДобавленияНаСервере(BusinessEntity, Enterprise)
	
	РегистрыСведений.ВетисBusinessMembers.Добавить(BusinessEntity, Enterprise);
	
КонецПроцедуры


&НаКлиенте
Процедура ПредприятияПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредприятияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОткрытьЗначение(Элементы.Предприятия.ТекущиеДанные.Ссылка);
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьРеквизитыНаСервере(value)
	
	last     = value.last;
	active   = value.active;
	
	Если ТипЗнч(value) = Тип("ОбъектXDTO") Тогда
		status   = ВетисBaseСлой1с.VersionStatus(value.Status);
		_uuid    = value.uuid;
		next     = value.next;
		previous = value.previous;
		createDate = value.createDate;
		updateDate = value.updateDate;
	Иначе
		status   = value.Status;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ModifyActivityLocations(BusinessEntity, Enterprise, CREATE = Истина, пОтказ = Ложь, пОшибка = "")
	
	ВетисMercuryApplicationsСлой1с.ModifyActivityLocations(BusinessEntity, Enterprise, CREATE, пОтказ, пОшибка);
	
КонецПроцедуры
