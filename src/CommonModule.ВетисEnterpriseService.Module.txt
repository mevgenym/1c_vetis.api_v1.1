
// предназначена для получения последней в истории записи хозяйствующего субъекта
Функция GetBusinessEntityByGuid(guid, пОтказ = Ложь, пОшибка = "", пВызватьИсключение = Ложь) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисEnterpriseService_2_0.GetBusinessEntityByGuid(guid, пОтказ, пОшибка, пВызватьИсключение);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисEnterpriseService_2_0.GetBusinessEntityByGuid(guid, пОтказ, пОшибка, пВызватьИсключение);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисEnterpriseService_1_4.GetBusinessEntityByGuid(guid, пОтказ, пОшибка, пВызватьИсключение);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

Функция GetBusinessEntityByUuid(uuid, пОтказ = Ложь, пОшибка = "", пВызватьИсключение = Ложь) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисEnterpriseService_2_0.GetBusinessEntityByUuid(uuid, пОтказ, пОшибка, пВызватьИсключение);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисEnterpriseService_2_0.GetBusinessEntityByUuid(uuid, пОтказ, пОшибка, пВызватьИсключение);
	//ИначеЕсли Ветис.Версия_1_4() Тогда
	//	Возврат ВетисEnterpriseService_1_4.GetBusinessEntityByUuid(uuid, пОтказ, пОшибка, пВызватьИсключение);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

// поиск ХС по ИНН (этой операции нет в сервисе)
Функция GetBusinessEntityByINN(inn, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисEnterpriseService_2_0.GetBusinessEntityByINN(inn, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисEnterpriseService_2_0.GetBusinessEntityByINN(inn, пОтказ, пОшибка);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

// предназначена для получения последней в истории записи предприятия
Функция GetEnterpriseByGuid(guid, пОтказ = Ложь, пОшибка = "", пВызватьИсключение = Ложь) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисEnterpriseService_2_0.GetEnterpriseByGuid(guid, пОтказ, пОшибка, пВызватьИсключение);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисEnterpriseService_2_0.GetEnterpriseByGuid(guid, пОтказ, пОшибка, пВызватьИсключение);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисEnterpriseService_1_4.GetEnterpriseByGuid(guid, пОтказ, пОшибка, пВызватьИсключение);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

Функция GetEnterpriseByUuid(uuid, пОтказ = Ложь, пОшибка = "", пВызватьИсключение = Ложь) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисEnterpriseService_2_0.GetEnterpriseByUuid(uuid, пОтказ, пОшибка, пВызватьИсключение);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисEnterpriseService_2_0.GetEnterpriseByUuid(uuid, пОтказ, пОшибка, пВызватьИсключение);
	//ИначеЕсли Ветис.Версия_1_4() Тогда
	//	Возврат ВетисEnterpriseService_1_4.GetEnterpriseByUuid(uuid, пОтказ, пОшибка, пВызватьИсключение);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции


// Предназначена для выборки хозяйствующих субъектов из реестра Россельхознадзора.
// Используется самостоятельно в цикле Пока.
// Параметры:
//  filtr - Структура - отбор
//  Item - элемент списка, возвращаемый параметр
//  Params - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetBusinessEntityListNext(Item, Params, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисEnterpriseService_2_0.GetBusinessEntityListNext(Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисEnterpriseService_2_0.GetBusinessEntityListNext(Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисEnterpriseService_1_4.GetBusinessEntityListNext(Item, Params, пОтказ, пОшибка);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

// Предназначена для выборки предприятий, зарегистрированных на территории Российской Федерации.
// Используется самостоятельно в цикле Пока.
// Параметры:
//  filter - Структура - отбор
//   UUID - Уникальный идентификатор версии записи предприятия в реестре Россельхознадзора. bs:UUID
//   GUID - Уникальный глобальный идентификатор в реестре Россельхознадзора. bs:UUID
//   name - Название предприятия. bs:String255
//   address - Адрес предприятия. ikar:Address
//    region - Регион Российской Федерации. ikar:Region	0..1
//    district - Район региона Российской Федерации. При поиске по району указывать регион не обязательно. ikar:District
//    locality - Населённый пункт регионального подчинения. По населённым пунктам районного подчинения поиск не осуществляется; При поиске обязательно также указывать регион. ikar:Locality
//  Item - элемент списка, возвращаемый параметр
//  Params - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//  Булево - Ложь значит список пройден весь
Функция GetRussianEnterpriseListNext(Item, Params, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисEnterpriseService_2_0.GetRussianEnterpriseListNext(Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисEnterpriseService_2_0.GetRussianEnterpriseListNext(Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисEnterpriseService_1_4.GetRussianEnterpriseListNext(Item, Params, пОтказ, пОшибка);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции


// Предназначена для получения изменений в списке российских предприятий за указанный период времени
// Используется самостоятельно в цикле Пока.
// Параметры:
//  beginDate - Начальная дата интервала xs:dateTime
//  endDate - Конечная дата интервала xs:dateTime
//  Item - элемент списка, возвращаемый параметр
//  Params - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetBusinessEntityChangesListNext(beginDate, endDate = Неопределено, Item, Params, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисEnterpriseService_2_0.GetBusinessEntityChangesListNext(beginDate, endDate, Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисEnterpriseService_2_0.GetBusinessEntityChangesListNext(beginDate, endDate, Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисEnterpriseService_1_4.GetBusinessEntityChangesListNext(beginDate, endDate, Item, Params, пОтказ, пОшибка);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

// Предназначена для получения изменений в списке российских предприятий за указанный период времени
// Используется самостоятельно в цикле Пока.
// Параметры:
//  beginDate - Начальная дата интервала xs:dateTime
//  endDate - Конечная дата интервала xs:dateTime
//  Item - элемент списка, возвращаемый параметр
//  Params - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetRussianEnterpriseChangesListNext(beginDate, endDate = Неопределено, Item, Params, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисEnterpriseService_2_0.GetRussianEnterpriseChangesListNext(beginDate, endDate, Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисEnterpriseService_2_0.GetRussianEnterpriseChangesListNext(beginDate, endDate, Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисEnterpriseService_1_4.GetRussianEnterpriseChangesListNext(beginDate, endDate, Item, Params, пОтказ, пОшибка);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции


//Запрос на получение списка предприятий, связанных с указанным ХС.
//Используется самостоятельно в цикле Пока.
//Параметры:
// businessEntityGuid - guid ХС
// Item - элемент списка, возвращаемый параметр
// Params - для внутреннего использования, начальное значение - Неопределено
//Возврат:
// Булево - Ложь значит список пройден весь
Функция GetActivityLocationListNext(businessEntityGuid, Item, Params, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисEnterpriseService_2_0.GetActivityLocationListNext(businessEntityGuid, Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисEnterpriseService_2_0.GetActivityLocationListNext(businessEntityGuid, Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисEnterpriseService_1_4.GetActivityLocationListNext(businessEntityGuid, Item, Params, пОтказ, пОшибка);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

//Запрос на получение пары ХС-площадка по глобальному идентификатору GLN
//Параметры:
// globalID - Глобальный идентификатор (GLN), по которому проводится поиск записи dt:GLNType
//Возврат:
// businessMember - dt:businessMember
Функция GetBusinessMemberByGLN(globalID, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисEnterpriseService_2_0.GetBusinessMemberByGLN(globalID, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисEnterpriseService_2_0.GetBusinessMemberByGLN(globalID, пОтказ, пОшибка);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции


Функция ИмяСервиса() Экспорт
	
	Возврат Перечисления.ВетисСервис.EnterpriseService;
	
КонецФункции

Функция Прокси()
	
	Возврат ВетисПовтИсп.Прокси(ИмяСервиса());
	
КонецФункции
