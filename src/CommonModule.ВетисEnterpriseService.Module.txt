
// предназначена для получения последней в истории записи хозяйствующего субъекта
Функция GetBusinessEntityByGuid(guid, пОтказ = Ложь, пОшибка = "") Экспорт
	
	//Если Ветис.Настройки_ОберткаHttp() Тогда
	//	Возврат ВетисRegistry.getBusinessEntityByGuid(guid, пОтказ, пОшибка);
	//КонецЕсли;
	
	Попытка
		Возврат Прокси().GetBusinessEntityByGuid(guid);
	Исключение
		пОтказ = Истина;
		пОшибка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВетисОбщегоНазначения.ВывестиСообщениеОбОшибке(ИнформацияОбОшибке(), "GetBusinessEntityByGuid");
		ВызватьИсключение;
	КонецПопытки;
	
КонецФункции

// предназначена для получения последней в истории записи предприятия
Функция GetEnterpriseByGuid(guid, пОтказ = Ложь, пОшибка = "") Экспорт
	
	//Если Ветис.Настройки_ОберткаHttp() Тогда
	//	Возврат ВетисRegistry.GetEnterpriseByGuid(guid, пОтказ, пОшибка);
	//КонецЕсли;
	
	Попытка
		Возврат Прокси().GetEnterpriseByGuid(guid);
	Исключение
		пОтказ = Истина;
		пОшибка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВетисОбщегоНазначения.ВывестиСообщениеОбОшибке(ИнформацияОбОшибке(), "GetEnterpriseByGuid");
		ВызватьИсключение;
	КонецПопытки;
	
КонецФункции


// Предназначена для выборки хозяйствующих субъектов из реестра Россельхознадзора.
// Используется самостоятельно в цикле Пока.
// Параметры:
//  filtr - Структура - отбор
//  Item - элемент списка, возвращаемый параметр
//  пПараметры - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetBusinessEntityListNext(filter = Неопределено, Item, пПараметры, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ветис.ВыборкаСпискаЭтоНачало(пПараметры) Тогда
		Ветис.ВыборкаСпискаИнициализация(ИмяСервиса(), "GetBusinessEntityList", "businessEntity", "", пПараметры,
			?(filter = Неопределено, ВетисCerberusEnterprise.BusinessEntity(), ВетисCerberusEnterprise.BusinessEntity(filter)));
	КонецЕсли;
	
	Возврат Ветис.ВыборкаСпискаСледующий(Item, пПараметры, пОтказ, пОшибка);
	
КонецФункции

// Предназначена для выборки предприятий, зарегистрированных на территории Российской Федерации.
// Используется самостоятельно в цикле Пока.
// Параметры:
//  filter - Структура - отбор
//   UUID - Уникальный идентификатор версии записи предприятия в реестре Россельхознадзора. bs:UUID
//   GUID - Уникальный глобальный идентификатор в реестре Россельхознадзора. bs:UUID
//   name - Название предприятия. bs:String255
//   address - Адрес предприятия. ikar:Address
//    region - Регион Российской Федерации. ikar:Region	0..1
//    district - Район региона Российской Федерации. При поиске по району указывать регион не обязательно. ikar:District
//    locality - Населённый пункт регионального подчинения. По населённым пунктам районного подчинения поиск не осуществляется; При поиске обязательно также указывать регион. ikar:Locality
//  Item - элемент списка, возвращаемый параметр
//  пПараметры - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//  Булево - Ложь значит список пройден весь
Функция GetRussianEnterpriseListNext(filter = Неопределено, Item, пПараметры, пОтказ = Ложь, пОшибка = "") Экспорт
	
	//Если Ветис.Настройки_ОберткаHttp() Тогда
	//	Возврат ВетисRegistry.GetRussianEnterpriseListNext(filter, Item, пПараметры, пОтказ, пОшибка);
	//КонецЕсли;
	
	Если Ветис.ВыборкаСпискаЭтоНачало(пПараметры) Тогда
		Ветис.ВыборкаСпискаИнициализация(ИмяСервиса(), "GetRussianEnterpriseList", "enterprise", "", пПараметры, 
			?(filter = Неопределено, ВетисCerberusEnterprise.Enterprise(), ВетисCerberusEnterprise.Enterprise(filter)));
	КонецЕсли;
	
	Возврат Ветис.ВыборкаСпискаСледующий(Item, пПараметры, пОтказ, пОшибка);
	
КонецФункции


// Предназначена для получения изменений в списке российских предприятий за указанный период времени
// Используется самостоятельно в цикле Пока.
// Параметры:
//  beginDate - Начальная дата интервала xs:dateTime
//  endDate - Конечная дата интервала xs:dateTime
//  Item - элемент списка, возвращаемый параметр
//  пПараметры - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetBusinessEntityChangesListNext(beginDate, endDate = Неопределено, Item, пПараметры, пОтказ = Ложь, пОшибка = "") Экспорт
	
	//Если Ветис.Настройки_ОберткаHttp() Тогда
	//	Возврат ВетисRegistry.getBusinessEntityChangesListNext(beginDate, endDate, Item, пПараметры, пОтказ, пОшибка);
	//КонецЕсли;
	
	Если Ветис.ВыборкаСпискаЭтоНачало(пПараметры) Тогда
		Ветис.ВыборкаСпискаИнициализация(ИмяСервиса(), "GetBusinessEntityChangesList", "businessEntity", "", пПараметры, 
			ВетисBase.DateInterval(beginDate, endDate));
	КонецЕсли;
	
	Возврат Ветис.ВыборкаСпискаСледующий(Item, пПараметры, пОтказ, пОшибка);
	
КонецФункции

// Предназначена для получения изменений в списке российских предприятий за указанный период времени
// Используется самостоятельно в цикле Пока.
// Параметры:
//  beginDate - Начальная дата интервала xs:dateTime
//  endDate - Конечная дата интервала xs:dateTime
//  Item - элемент списка, возвращаемый параметр
//  пПараметры - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetRussianEnterpriseChangesListNext(beginDate, endDate = Неопределено, Item, пПараметры, пОтказ = Ложь, пОшибка = "") Экспорт
	
	//Если Ветис.Настройки_ОберткаHttp() Тогда
	//	Возврат ВетисRegistry.getRussianEnterpriseChangesListNext(beginDate, endDate, Item, пПараметры, пОтказ, пОшибка);
	//КонецЕсли;
	
	Если Ветис.ВыборкаСпискаЭтоНачало(пПараметры) Тогда
		Ветис.ВыборкаСпискаИнициализация(ИмяСервиса(), "GetRussianEnterpriseChangesList", "enterprise", "", пПараметры, 
			ВетисBase.DateInterval(beginDate, endDate));
	КонецЕсли;
	
	Возврат Ветис.ВыборкаСпискаСледующий(Item, пПараметры, пОтказ, пОшибка);
	
КонецФункции


// Предназначена для выборки предприятий, подчиненных ХС.
// Этой функции нет в сервисе, название выдуманное
// Используется самостоятельно в цикле Пока.
// Параметры:
//  businessEntityGuid - guid ХС
//  Item - элемент списка, возвращаемый параметр
//  пПараметры - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetActivityLocationListNext(businessEntityGuid, Item, пПараметры, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если пПараметры = Неопределено ИЛИ НЕ пПараметры.Свойство("Индекс") Тогда
		пПараметры = ?(пПараметры = Неопределено, Новый Структура, пПараметры);
		пПараметры.Вставить("List", Новый Массив);
		пПараметры.Вставить("Индекс", 0);
		_Entity = GetBusinessEntityByGuid(businessEntityGuid, пОтказ, пОшибка);
		Если пОтказ = Истина Тогда Возврат Ложь; КонецЕсли;
		Для Каждого _Location из _Entity.activityLocation Цикл
			_Enterprise = GetEnterpriseByGuid(_Location.enterprise.guid, пОтказ, пОшибка);
			Если пОтказ = Истина Тогда Возврат Ложь; КонецЕсли;
			пПараметры.List.Добавить(_Enterprise);
		КонецЦикла;
	Иначе
		пПараметры.Индекс = пПараметры.Индекс + 1;
	КонецЕсли;
	
	Если пПараметры.Индекс >= пПараметры.List.Количество() Тогда
		Возврат Ложь;
	Иначе
		Item = пПараметры.List[пПараметры.Индекс];
		Возврат Истина;
	КонецЕсли;
	
КонецФункции


Функция ИмяСервиса() Экспорт
	
	Возврат Перечисления.ВетисСервис.EnterpriseService;
	
КонецФункции

Функция Прокси()
	
	Возврат ВетисПовтИсп.Прокси(ИмяСервиса());
	
КонецФункции
