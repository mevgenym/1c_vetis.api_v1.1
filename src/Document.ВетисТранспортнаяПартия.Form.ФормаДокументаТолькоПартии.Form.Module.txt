
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОтправительСвязь = Истина;
	
	ПолучательСвязь = Истина;
	
	//МногоуровневаяУпаковка = Ветис.Настройки_МногоуровневаяУпаковка();
	
	ЗаполнитьРеквизитыФормы();
	
	Для каждого _Элемент Из Элементы Цикл
		Если ТипЗнч(_Элемент) = Тип("ПолеФормы") Тогда
			Если Лев(_Элемент.ПутьКДанным, 3) = "всд" Тогда
				_Элемент.УстановитьДействие("ПриИзменении", "ВСДПриИзменении");
			ИначеЕсли Лев(_Элемент.ПутьКДанным, 3) = "ттн" Тогда
				_Элемент.УстановитьДействие("ПриИзменении", "ТТНПриИзменении");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	//Элементы.ГруппаДокументОснование.Видимость = Ветис.Настройки_Интеграция();
	
	//Элементы.ТоварыКомандаЗаполнитьТовары.Видимость = Ветис.Настройки_Интеграция();
	
	Элементы.СписокСообщений.Видимость = Ложь;
	
	ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокСообщений.Отбор, "Операция", Справочники.ВетисОперации.НайтиПоНаименованию("prepareOutcomingConsignment"));
	ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокСообщений.Отбор, "Объект", Объект.Ссылка);
	
	Элементы.ГруппаОтладка.Видимость = Ветис.РазрешенаОтладка();
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимостьКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ЗаписатьРеквизитыФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокСообщений.Отбор, "Объект", Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Параметр = ЭтаФорма.ИмяФормы Тогда
		//
	ИначеЕсли ИмяСобытия = "ВетисНастройки" Тогда
		УстановитьВидимость();
	ИначеЕсли ИмяСобытия = "ВетисВерсия" Тогда
		УстановитьВидимость();
	ИначеЕсли ИмяСобытия = "ВетисОтладка" Тогда
		//
	ИначеЕсли ИмяСобытия = "ВетисТестовый" Тогда
		//
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	//Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
	//	Если ИсточникВыбора.ИмяФормы = "Документ.ВетисТранспортнаяПартия.Форма.ФормаПодбора" Тогда
	//		Если Объект.Партии.НайтиСтроки(Новый Структура("StockEntry",ВыбранноеЗначение.Ссылка)).Количество() = 0 Тогда
	//			_СтрокаПартии = Объект.Партии.Добавить();
	//			_СтрокаПартии.StockEntry = ВыбранноеЗначение.Ссылка;
	//			_СтрокаПартии.Unit = ВыбранноеЗначение.Unit;
	//			_СтрокаПартии.Количество = ВыбранноеЗначение.Количество;
	//			_СтрокаПартии.КлючСтроки = ПолучитьКлючСтроки();
	//			Для каждого _ВыбранноеУпаковка Из ВыбранноеЗначение.Упаковка Цикл
	//				_СтрокаУпаковка = Объект.Упаковка.Добавить();
	//				_СтрокаУпаковка.КлючСтроки = ПолучитьКлючСтрокиУпаковка();
	//				_СтрокаУпаковка.КлючСвязи = _СтрокаПартии.КлючСтроки;
	//				_СтрокаУпаковка.Уровень = _ВыбранноеУпаковка.Уровень;
	//				_СтрокаУпаковка.Упаковка = _ВыбранноеУпаковка.Упаковка;
	//				_СтрокаУпаковка.Количество = _ВыбранноеУпаковка.Количество;
	//				Для каждого _ВыбранноеМаркировка Из _ВыбранноеУпаковка.Маркировка Цикл
	//					_СтрокаМаркировка = Объект.Маркировка.Добавить();
	//					_СтрокаМаркировка.КлючСвязи = _СтрокаУпаковка.КлючСтроки;
	//					_СтрокаМаркировка.Маркировка = _ВыбранноеМаркировка.Маркировка;
	//					_СтрокаМаркировка.КлассМаркировки = _ВыбранноеМаркировка.КлассМаркировки;
	//				КонецЦикла;
	//			КонецЦикла;
	//			Модифицированность = Истина;
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаОтправить(Команда)
	
	Если Модифицированность ИЛИ НЕ Объект.Проведен Тогда
		Предупреждение("Перед операцией документ необходимо провести");
		Возврат;
	КонецЕсли;
	
	ПоказатьВопрос(Новый ОписаниеОповещения("КомандаОтправитьОбработкаОповещения", ЭтаФорма), "Отправить транзакцию?", РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет, "Отправка");
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтправитьОбработкаОповещения(Результат, Параметры) Экспорт
	
	Перем _Отказ, _Ошибка;
	
	Если НЕ Результат = КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ОтложенныеОперацииДобавить(Объект.Ссылка, "Отправить", Объект.Отправитель);
	
	КомандаОтложенныеОперацииСервер(_Отказ, _Ошибка, Объект.Ссылка);
	
	Если _Отказ = Истина Тогда
		Сообщить(_Ошибка);
		Сообщить("Если партии отправлены, исходящие ВСД надо выбрать вручную");
	Иначе
		Прочитать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаАннулировать(Команда)
	
	//ПоказатьВопрос(Новый ОписаниеОповещения("КомандаАннулироватьОбработкаОповещения", ЭтаФорма), "Аннулировать транзакцию?", РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет, "Аннулирование");
	ПоказатьВводСтроки(Новый ОписаниеОповещения("КомандаАннулироватьОбработкаОповещения", ЭтаФорма), "Ошибка оформления", "Причина аннулирования", 255);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаАннулироватьОбработкаОповещения(Результат, Параметры) Экспорт
	
	Перем _Отказ, _Ошибка;
	
	//Если НЕ Результат = КодВозвратаДиалога.Да Тогда
	//	Возврат;
	//КонецЕсли;
	
	ОтложенныеОперацииДобавить(Объект.Ссылка, "Аннулировать", Объект.Отправитель, Новый Структура("Причина", Результат));
	
	КомандаОтложенныеОперацииСервер(_Отказ, _Ошибка, Объект.Ссылка);
	
	Если _Отказ = Истина Тогда
		Сообщить(_Ошибка);
	Иначе
		Прочитать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПодборПартий(пКоманда)
	
	Если пКоманда = Команды.Найти("КомандаПодборПартий") Тогда
		_Команда = "Подбор";
	Иначе
		_Команда = пКоманда;
	КонецЕсли;
	
	_ТекущиеДанные = Элементы.Партии.ТекущиеДанные;
	
	_Параметры = Новый Структура;
	
	_Параметры.Вставить("ТекущийДокумент", Объект.Ссылка);
	
	Если НЕ _ТекущиеДанные = Неопределено И НЕ _Команда = "Добавить" Тогда
		_Параметры.Вставить("Ключ", _ТекущиеДанные.StockEntry);
		_Параметры.Вставить("Количество", _ТекущиеДанные.Количество);
		ДобавитьУпаковкуМаркировку(_ТекущиеДанные.КлючСтроки, _Параметры);
	КонецЕсли;
	
	Если Объект.Подпитка Тогда
		_Параметры.Вставить("BusinessEntity", Объект.ОтправительПодпитка);
		_Параметры.Вставить("Enterprise", Объект.ОтправительПредприятиеПодпитка);
	Иначе
		_Параметры.Вставить("BusinessEntity", Объект.Отправитель);
		_Параметры.Вставить("Enterprise", Объект.ОтправительПредприятие);
	КонецЕсли;
	
	ОткрытьФорму("Справочник.ВетисStockEntry.ФормаВыбора", _Параметры, ЭтаФорма,,,,Новый ОписаниеОповещения("ПодборПартийОбработкаОповещения",ЭтаФорма, Новый Структура("Команда,ТекущиеДанные", пКоманда, _ТекущиеДанные)));
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаИзменить(Команда)
	
	_ТекущиеДанные = Элементы.Партии.ТекущиеДанные;
	
	_Параметры = Новый Структура("Ссылка, Количество", _ТекущиеДанные.StockEntry, _ТекущиеДанные.Количество);
	
	ДобавитьУпаковкуМаркировку(_ТекущиеДанные.КлючСтроки, _Параметры);	
	
	ОткрытьФорму("Справочник.ВетисStockEntry.Форма.ФормаВводаКоличества", _Параметры, ЭтаФорма,,,, Новый ОписаниеОповещения("ПодборПартийОбработкаОповещения", ЭтаФорма, Новый Структура("Команда,ТекущиеДанные", Команда, _ТекущиеДанные)));
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьУпаковкуМаркировку(пКлючСтроки, пПараметры) Экспорт
	
	_Упаковка = Новый Массив;
	_Маркировка = Новый Массив;
	Для каждого _УпаковкаСтрока Из Объект.Упаковка.НайтиСтроки(Новый Структура("КлючСвязи", пКлючСтроки)) Цикл
		_УпаковкаСтрока1 = Новый Структура("КлючСтроки,Уровень,Упаковка,Количество");
		ЗаполнитьЗначенияСвойств(_УпаковкаСтрока1, _УпаковкаСтрока);
		_Упаковка.Добавить(_УпаковкаСтрока1);
		Для каждого _МаркировкаСтрока Из Объект.Маркировка.НайтиСтроки(Новый Структура("КлючСвязи", _УпаковкаСтрока.КлючСтроки)) Цикл
			_МаркировкаСтрока1 = Новый Структура("Маркировка,КлассМаркировки");
			ЗаполнитьЗначенияСвойств(_МаркировкаСтрока1, _МаркировкаСтрока);
			_Маркировка.Добавить(_МаркировкаСтрока1);
		КонецЦикла;
	КонецЦикла;
	
	пПараметры.Вставить("Упаковка", _Упаковка);
	пПараметры.Вставить("Маркировка", _Маркировка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборПартийОбработкаОповещения(пРезультат, пПараметры) Экспорт
	
	Если НЕ пРезультат = Неопределено Тогда
		Если пПараметры.Команда = "Изменить" ИЛИ пПараметры.Команда = "Подбор" Тогда
			_СтрокаПартии = пПараметры.ТекущиеДанные;
			Для каждого _СтрокаУпаковка Из Объект.Упаковка.НайтиСтроки(Новый Структура("КлючСвязи", _СтрокаПартии.КлючСтроки)) Цикл
				Для каждого _СтрокаМаркировка Из Объект.Маркировка.НайтиСтроки(Новый Структура("КлючСвязи", _СтрокаУпаковка.КлючСтроки)) Цикл
					Объект.Маркировка.Удалить(_СтрокаМаркировка);
				КонецЦикла;
				Объект.Упаковка.Удалить(_СтрокаУпаковка);
			КонецЦикла;
		ИначеЕсли пПараметры.Команда = "Добавить" Тогда
			_СтрокаПартии = Объект.Партии.Добавить();
			_СтрокаПартии.КлючСтроки = ПолучитьКлючСтроки();
		КонецЕсли;
		_СтрокаПартии.StockEntry = пРезультат.Ссылка;
		_СтрокаПартии.Unit = пРезультат.Unit;
		_СтрокаПартии.Количество = пРезультат.Количество;
		//Для каждого _ВыбранноеУпаковка Из Результат.Упаковка Цикл
			_ВыбранноеУпаковка = пРезультат.Упаковка;
			_СтрокаУпаковка = Объект.Упаковка.Добавить();
			_СтрокаУпаковка.КлючСтроки = ПолучитьКлючСтрокиУпаковка();
			_СтрокаУпаковка.КлючСвязи = _СтрокаПартии.КлючСтроки;
			_СтрокаУпаковка.Уровень = _ВыбранноеУпаковка.Уровень;
			_СтрокаУпаковка.Упаковка = _ВыбранноеУпаковка.Упаковка;
			_СтрокаУпаковка.Количество = _ВыбранноеУпаковка.Количество;
			Для каждого _ВыбранноеМаркировка Из пРезультат.Маркировка Цикл
				_СтрокаМаркировка = Объект.Маркировка.Добавить();
				_СтрокаМаркировка.КлючСвязи = _СтрокаУпаковка.КлючСтроки;
				_СтрокаМаркировка.Маркировка = _ВыбранноеМаркировка.Значение;
				_СтрокаМаркировка.КлассМаркировки = _ВыбранноеМаркировка.Класс;
			КонецЦикла;
		//КонецЦикла;
		Модифицированность = Истина;
		СброситьУсловияПеремещения();
		УстановитьВидимостьКлиент("Партии");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУсловияПеремещения(Команда)
	
	_Параметры = Новый Структура;
	
	_Параметры.Вставить("StockEntryList", ВетисОбщегоНазначенияКлиентСервер.ВыгрузитьКолонку(Объект.Партии, "StockEntry"));
	_Параметры.Вставить("shipmentRoute", Новый Массив);
	_Параметры.Вставить("BusinessEntity", Объект.Отправитель);
	
	_Параметры.shipmentRoute.Добавить(Новый Структура("Предприятие", Объект.ОтправительПредприятие));
	_Параметры.shipmentRoute.Добавить(Новый Структура("Предприятие", Объект.ПолучательПредприятие));
	
	_Форма = ОткрытьФорму("Документ.ВетисТранспортнаяПартия.Форма.ФормаУсловияПеремещения", _Параметры, ЭтаФорма,,,,Новый ОписаниеОповещения("КомандаУсловияПеремещенияОбработкаОповещения", ЭтаФорма));
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУсловияПеремещенияОбработкаОповещения(пРезультат, пПараметры) Экспорт
	
	Если НЕ пРезультат = Неопределено Тогда
		Объект.УсловияПеремещенияПроверены = Истина;
		Объект.УсловияПеремещения.Очистить();
		Если пРезультат = Истина Тогда
			//пропускаем
		ИначеЕсли ТипЗнч(пРезультат) = Тип("Соответствие") Тогда
			Для каждого _Элемент Из пРезультат Цикл
				Для каждого _Условие Из _Элемент.Значение Цикл
					_УсловияПеремещенияСтрока = Объект.УсловияПеремещения.Добавить();
					_УсловияПеремещенияСтрока.subProduct = _Элемент.Ключ;
					_УсловияПеремещенияСтрока.Условие = _Условие;
				КонецЦикла;
			КонецЦикла;
		Иначе
			//неожиданный результат
			_Сообщение = Новый СообщениеПользователю;
			_Сообщение.Текст = "неожиданный результат";
			_Сообщение.Сообщить();
		КонецЕсли;
		УстановитьВидимостьКлиент("УсловияПеремещения");
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьПоДокументу(Команда)
	
	КомандаЗаполнитьПоДокументуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура КомандаЗаполнитьПоДокументуНаСервере(пОтказ = Ложь, пОшибка = "")
	
	//Если Объект.Подпитка И ЗначениеЗаполнено(Объект.ТранзакцияПодпитка) Тогда
	//	
	//	_Объект = Объект.ТранзакцияПодпитка.ПолучитьОбъект();
	//	
	//	//....
	//	
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПоказатьСообщения(Команда)
	
	Элементы.ФормаКомандаПоказатьСообщения.Пометка = НЕ Элементы.ФормаКомандаПоказатьСообщения.Пометка;
	
	Элементы.СписокСообщений.Видимость = Элементы.ФормаКомандаПоказатьСообщения.Пометка;
	
КонецПроцедуры


&НаКлиенте
Процедура ОтправительПриИзменении(Элемент)
	
	Если ОтправительСвязь Тогда
		Объект.ОтправительПредприятие = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправительПредприятиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ОтправительСвязь Тогда
		СтандартнаяОбработка = Ложь;
		Если ЗначениеЗаполнено(Объект.Отправитель) Тогда
			ОткрытьФорму("Справочник.ВетисEnterprise.ФормаВыбора", Новый Структура("BusinessEntity", Объект.Отправитель),,,,,Новый ОписаниеОповещения("ОтправительПредприятиеОбработкаОповещения",ЭтаФорма));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправительПредприятиеОбработкаОповещения(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		Модифицированность = Истина;
		Объект.ОтправительПредприятие = Результат;
		СброситьУсловияПеремещения();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправительСвязьНажатие(Элемент)
	
	ОтправительСвязь = НЕ ОтправительСвязь;
	
	УстановитьВидимостьКлиент("ОтправительСвязь");
	
КонецПроцедуры


&НаКлиенте
Процедура ПолучательПриИзменении(Элемент)
	
	Если ПолучательСвязь Тогда
		Объект.ПолучательПредприятие = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучательПредприятиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ПолучательСвязь Тогда
		СтандартнаяОбработка = Ложь;
		Если ЗначениеЗаполнено(Объект.Получатель) Тогда
			ОткрытьФорму("Справочник.ВетисEnterprise.ФормаВыбора", Новый Структура("BusinessEntity", Объект.Получатель),,,,,Новый ОписаниеОповещения("ПолучательПредприятиеОбработкаОповещения",ЭтаФорма));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучательПредприятиеОбработкаОповещения(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		Модифицированность = Истина;
		Объект.ПолучательПредприятие = Результат;
		СброситьУсловияПеремещения();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучательСвязьНажатие(Элемент)
	
	ПолучательСвязь = НЕ ПолучательСвязь;
	
	УстановитьВидимостьКлиент("ПолучательСвязь");
	
КонецПроцедуры


&НаКлиенте
Процедура ПартииПриАктивизацииСтроки(Элемент)
	
	_ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если _ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//Элементы.Упаковка.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСвязи", _ТекущиеДанные.КлючСтроки);
	//
	//_СтрокиУпаковка = Объект.Упаковка.НайтиСтроки(Новый Структура("КлючСвязи", _ТекущиеДанные.КлючСтроки));
	//Если _СтрокиУпаковка.Количество() > 0 Тогда
	//	Элементы.Упаковка.ТекущаяСтрока = _СтрокиУпаковка[0];
	//	Элементы.Маркировка.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСвязи", _СтрокиУпаковка[0].КлючСтроки);
	//Иначе
	//	Элементы.Маркировка.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСвязи", 0);
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПартииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.КлючСтроки = ПолучитьКлючСтроки();
		//Элементы.Упаковка.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСвязи", Элемент.ТекущиеДанные.КлючСтроки);
		//Если НЕ Элементы.Упаковка.ТекущаяСтрока = Неопределено Тогда
		//	_ТекущиеДанные = Объект.Упаковка.НайтиПоИдентификатору(Элементы.Упаковка.ТекущаяСтрока);
		//	Если НЕ _ТекущиеДанные = Неопределено Тогда
		//		Элементы.Маркировка.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСвязи", _ТекущиеДанные.КлючСтроки);
		//	КонецЕсли;
		//КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПартииПередУдалением(Элемент, Отказ)
	
	_ТекущиеДанные = Элементы.Партии.ТекущиеДанные;
	
	Для каждого _СтрокаУпаковка Из Объект.Упаковка.НайтиСтроки(Новый Структура("КлючСвязи", Элемент.ТекущиеДанные.КлючСтроки)) Цикл
		Для каждого _СтрокаМаркировка Из Объект.Маркировка.НайтиСтроки(Новый Структура("КлючСвязи", _СтрокаУпаковка.КлючСтроки)) Цикл
			Объект.Маркировка.Удалить(_СтрокаМаркировка);
		КонецЦикла;
		Объект.Упаковка.Удалить(_СтрокаУпаковка);
	КонецЦикла;
	
	СброситьУсловияПеремещения();
	
КонецПроцедуры

&НаКлиенте
Процедура ПартииПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	КомандаПодборПартий("Добавить");
	
КонецПроцедуры

&НаКлиенте
Процедура ПартииПередНачаломИзменения(Элемент, Отказ)
	
	//Отказ = Истина;
	//
	//Если Элементы.Партии.ТекущийЭлемент = Элементы.ПартииВСД Тогда
	//	ОткрытьЗначение(Элементы.Партии.ТекущиеДанные.ВСД);
	//Иначе
	//	КомандаПодборПартий("Изменить");
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПартииВСДНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	_Статус = Новый СписокЗначений;
	_Статус.Добавить(ПредопределенноеЗначение("Перечисление.ВетисVetDocumentStatus.Погашен"));
	_Статус.Добавить(ПредопределенноеЗначение("Перечисление.ВетисVetDocumentStatus.Оформлен"));
	_Статус.Добавить(ПредопределенноеЗначение("Перечисление.ВетисVetDocumentStatus.Аннулирован"));
	
	_Тип = Новый СписокЗначений;
	_Тип.Добавить(ПредопределенноеЗначение("Перечисление.ВетисVetDocumentType.Транспортный"));
	
	_Параметры = Новый Структура("Проведен, Статус, Тип, Входящие, Исходящие", Истина, _Статус, _Тип);
	
	_Параметры.Вставить("Отправитель", Объект.Отправитель);
	_Параметры.Вставить("Получатель", Объект.Получатель);
	
	_Параметры.Вставить("ОтправительПредприятие", Объект.ОтправительПредприятие);
	_Параметры.Вставить("ПолучательПредприятие", Объект.ПолучательПредприятие);
	
	_оо = Новый ОписаниеОповещения("ПартииВСДНачалоВыбораОбработкаОповещения", ЭтаФорма);
	
	ОткрытьФорму("Документ.ВетисВетеринарноСопроводительныйДокумент.ФормаВыбора", _Параметры,,,,, _оо);
	
КонецПроцедуры

&НаКлиенте
Процедура ПартииВСДНачалоВыбораОбработкаОповещения(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		
		Элементы.Партии.ТекущиеДанные.ВСД = Результат;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПартииЗаписьСЖНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	//_Параметры = Новый Структура;
	//
	//_Параметры.Вставить("BusinessEntity", Объект.Отправитель);
	//
	//_Параметры.Вставить("Enterprise", Объект.ОтправительПредприятие);
	//
	//_Параметры.Вставить("Ключ", Элементы.Партии.ТекущиеДанные.StockEntry);
	//
	//ОткрытьФорму("Справочник.ВетисStockEntry.ФормаВыбора", _Параметры, ЭтаФорма, ,,,Новый ОписаниеОповещения("ПартииЗаписьСЖНачалоВыбораОбработкаОповещения", ЭтаФорма));
	
	//КомандаПодборПартий(?(ЗначениеЗаполнено(Элементы.Партии.ТекущиеДанные.StockEntry), "Изменить", "Добавить"));
	КомандаПодборПартий("Изменить");
	
КонецПроцедуры


&НаКлиенте
Процедура УпаковкаПриАктивизацииСтроки(Элемент)
	
	_ТекущиеДанные = Элементы.Упаковка.ТекущиеДанные;
	
	Если _ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.Маркировка.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСвязи", _ТекущиеДанные.КлючСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура УпаковкаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Элементы.Партии.ТекущиеДанные = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура УпаковкаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.КлючСвязи = Элементы.Партии.ТекущиеДанные.КлючСтроки;
		Элемент.ТекущиеДанные.КлючСтроки = ПолучитьКлючСтрокиУпаковка();
		Элементы.Маркировка.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСвязи", Элемент.ТекущиеДанные.КлючСтроки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УпаковкаПередУдалением(Элемент, Отказ)
	
	Для каждого _Строка Из Объект.Маркировка.НайтиСтроки(Новый Структура("КлючСвязи", Элемент.ТекущиеДанные.КлючСтроки)) Цикл
		Объект.Маркировка.Удалить(_Строка);
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура МаркировкаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Элементы.Упаковка.ТекущиеДанные = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура МаркировкаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	_ТекущиеДанные = Элементы.Упаковка.ТекущиеДанные;
	
	Если _ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.КлючСвязи = _ТекущиеДанные.КлючСтроки;
		Элемент.ТекущиеДанные.КлассМаркировки = ПредопределенноеЗначение("Перечисление.ВетисProductMarkingClass.UNDEFINED");
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ВСДПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры


&НаКлиенте
Процедура ТТНПриИзменении(Элемент)
	
	Если Элемент = Элементы.ттнТранспорт Тогда
		ттнТранспортПриИзменении(Элемент);
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ттнТранспортПриИзменении(Элемент)
	
	ттнТранспортПриИзмененииНаСервере();
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьРеквизитыФормы()
	
	Для каждого _Реквизит Из ПолучитьРеквизиты() Цикл
		
		Для каждого _Строка Из Объект.РезультатыОсмотра Цикл
			Если Лев(_Реквизит.Имя, 3) = "осм" Тогда
				ЭтаФорма[_Реквизит.Имя] = _Строка[Сред(_Реквизит.Имя, 4)];
				ЭтаФорма.Элементы[_Реквизит.Имя].УстановитьДействие("ПриИзменении", "РеквизитыПриИзменении");
			КонецЕсли;
			Прервать;
		КонецЦикла;
		
		Для каждого _Строка Из Объект.ТТН Цикл
			Если Лев(_Реквизит.Имя, 3) = "ттн" Тогда
				ЭтаФорма[_Реквизит.Имя] = _Строка[Сред(_Реквизит.Имя, 4)];
				ЭтаФорма.Элементы[_Реквизит.Имя].УстановитьДействие("ПриИзменении", "РеквизитыПриИзменении");
			КонецЕсли;
			Прервать;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьРеквизитыФормы()
	
	Объект.РезультатыОсмотра.Очистить();
	Объект.ТТН.Очистить();
	
	_СтрокаВСД = Объект.РезультатыОсмотра.Добавить();
	_СтрокаТТН = Объект.ТТН.Добавить();
	
	Для каждого _Реквизит Из ПолучитьРеквизиты() Цикл
		Если Лев(_Реквизит.Имя, 3) = "осм" Тогда
			_СтрокаВСД[Сред(_Реквизит.Имя, 4)] = ЭтаФорма[_Реквизит.Имя];
		ИначеЕсли Лев(_Реквизит.Имя, 3) = "ттн" Тогда
			_СтрокаТТН[Сред(_Реквизит.Имя, 4)] = ЭтаФорма[_Реквизит.Имя];
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитыПриИзменении()
	
	Модифицированность = Истина;
	
КонецПроцедуры


&НаСервере
Функция ПолучитьКлючСтроки()
	
	_список = Объект.Партии.Выгрузить().ВыгрузитьКолонку("КлючСтроки");
	
	Для _Индекс = 1 По 999 Цикл
		Если _список.Найти(_Индекс) = Неопределено Тогда
			Возврат _Индекс;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

&НаСервере
Функция ПолучитьКлючСтрокиУпаковка()
	
	_список = Объект.Упаковка.Выгрузить().ВыгрузитьКолонку("КлючСтроки");
	
	Для _Индекс = 1 По 999 Цикл
		Если _список.Найти(_Индекс) = Неопределено Тогда
			Возврат _Индекс;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции


&НаКлиенте
Процедура СброситьУсловияПеремещения()
	
	Объект.УсловияПеремещенияПроверены = Ложь;
	Объект.УсловияПеремещения.Очистить();
	
	УстановитьВидимостьКлиент("УсловияПеремещения");
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьКлиент(пИмяСобытия = Неопределено)
	
	Если пИмяСобытия = "ОтправительСвязь" ИЛИ пИмяСобытия = Неопределено Тогда
		Элементы.ОтправительСвязь.Подсказка = ?(ОтправительСвязь, "с учетом связи", "без учета связи");
		Элементы.ОтправительСвязь.Картинка = ?(ОтправительСвязь, БиблиотекаКартинок.ВетисЕстьСвязь, БиблиотекаКартинок.ВетисНетСвязи);
	КонецЕсли;
	
	Если пИмяСобытия = "ПолучательСвязь" ИЛИ пИмяСобытия = Неопределено Тогда
		Элементы.ПолучательСвязь.Подсказка = ?(ПолучательСвязь, "с учетом связи", "без учета связи");
		Элементы.ПолучательСвязь.Картинка = ?(ПолучательСвязь, БиблиотекаКартинок.ВетисЕстьСвязь, БиблиотекаКартинок.ВетисНетСвязи);
	КонецЕсли;
	
	Если пИмяСобытия = "Партии" ИЛИ пИмяСобытия = Неопределено Тогда
		//обновим представление в колонке Упаковка
		Для каждого _ПартииСтрока Из Объект.Партии Цикл
			_Упаковка = "";
			Для каждого _УпаковкаСтрока Из Объект.Упаковка Цикл
				Если _УпаковкаСтрока.КлючСвязи = _ПартииСтрока.КлючСтроки Тогда
					_Упаковка = _Упаковка + ?(_Упаковка = "", "", "; ") + Строка(_УпаковкаСтрока.Упаковка) + ", " + _УпаковкаСтрока.Количество;
					Если СтрДлина(_Упаковка) > 100 Тогда
						Прервать;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			_ПартииСтрока.Упаковка = _Упаковка;
		КонецЦикла;
	КонецЕсли;
	
	Если пИмяСобытия = "УсловияПеремещения" ИЛИ пИмяСобытия = Неопределено Тогда
		Элементы.ДекорацияУсловияПеремещенияНеПроверены.Видимость = НЕ Объект.УсловияПеремещенияПроверены;
		
		Элементы.ДекорацияУсловияПеремещенияПроверены.Видимость = Ложь;//Объект.УсловияПеремещенияПроверены И Объект.УсловияПеремещения.Количество() > 0;
		
		Элементы.ДекорацияУсловияПеремещенияНеТребуются.Видимость = Объект.УсловияПеремещенияПроверены И Объект.УсловияПеремещения.Количество() = 0;
		
		Элементы.УсловияПеремещения.Видимость = Объект.УсловияПеремещения.Количество() > 0;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимость(пИмяСобытия = Неопределено)
	
	Если пИмяСобытия = Неопределено ИЛИ пИмяСобытия = "ВетисНастройки" ИЛИ пИмяСобытия = "ВетисВерсия" Тогда
		
		//_Версия20 = Ветис.Версия_2_0();
		
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьНаСервере()
	
	_Объект = РеквизитФормыВЗначение("Объект");
	
	_Объект.Заполнить(Объект.ДокументОснование);
	
	ЗначениеВРеквизитФормы(_Объект, "Объект");
	
КонецПроцедуры

&НаСервере
Функция ттнТранспортПриИзмененииНаСервере()
	
	ттнНомерТранспорта = ттнТранспорт.Номер;
	
	ттнНомерПрицепа = ттнТранспорт.НомерПрицепа;
	
	ттнТипТранспорта = ттнТранспорт.ТипТранспорта;
	
	ттнПосредник = ттнТранспорт.Перевозчик;
	
	ттнСпособХранения = ттнТранспорт.СпособХранения;
	
КонецФункции

&НаКлиенте
Процедура СписокСообщенийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
КонецПроцедуры


&НаСервереБезКонтекста
Процедура КомандаОтложенныеОперацииСервер(пОтказ = Ложь, пОшибка = "", пОтбор = Неопределено)
	
	ВетисСинхронизация.ОтложенныеОперации(пОтказ, пОшибка, пОтбор);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОтложенныеОперацииДобавить(пСсылка, пОперация = Неопределено, пНастройка = Неопределено, пПараметры = Неопределено)
	
	РегистрыСведений.ВетисОтложенныеОперации.Добавить(пСсылка, пОперация, пНастройка, , пПараметры);
	
КонецПроцедуры
