
// Получение единицы измерения.
Функция GetUnitByGuid(guid, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Попытка
		Возврат Прокси().GetUnitByGuid(guid);
	Исключение
		пОтказ = Истина;
		пОшибка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВетисОбщегоНазначения.ВывестиСообщениеОбОшибке(ИнформацияОбОшибке(), "GetUnitByGuid");
		ВызватьИсключение;
	КонецПопытки;
	
КонецФункции

// Получение назначения груза.
Функция GetPurposeByGuid(guid, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Попытка
		Возврат Прокси().GetPurposeByGuid(guid);
	Исключение
		пОтказ = Истина;
		пОшибка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВетисОбщегоНазначения.ВывестиСообщениеОбОшибке(ИнформацияОбОшибке(), "GetPurposeByGuid");
		ВызватьИсключение;
	КонецПопытки;
	
КонецФункции


// Получение списка всех единиц измерения.
// Используется самостоятельно в цикле Пока.
// Параметры:
//  Item - элемент списка, возвращаемый параметр
//  пПараметры - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetUnitListNext(Item, пПараметры, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Ветис.ВыборкаСпискаИнициализация(ИмяСервиса(), "GetUnitList", "unit", "", пПараметры);
	
	Возврат Ветис.ВыборкаСпискаСледующий(Item, пПараметры, пОтказ, пОшибка);
	
КонецФункции

// Получение списка всех назначений груза.
// Используется самостоятельно в цикле Пока.
// Параметры:
//  Item - элемент списка, возвращаемый параметр
//  пПараметры - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetPurposeListNext(Item, пПараметры, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Ветис.ВыборкаСпискаИнициализация(ИмяСервиса(), "GetPurposeList", "purpose", "", пПараметры);
	
	Возврат Ветис.ВыборкаСпискаСледующий(Item, пПараметры, пОтказ, пОшибка);
	
КонецФункции


Функция GetUnitChangesListNext(beginDate, endDate = Неопределено, Item, пПараметры, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ветис.ВыборкаСпискаЭтоНачало(пПараметры) Тогда
		Ветис.ВыборкаСпискаИнициализация(ИмяСервиса(), "GetUnitChangesList", "unit", "", пПараметры, 
			ВетисBase.DateInterval(beginDate, endDate));
	КонецЕсли;
	
	Возврат Ветис.ВыборкаСпискаСледующий(Item, пПараметры, пОтказ, пОшибка);
	
КонецФункции

Функция GetPurposeChangesListNext(beginDate, endDate = Неопределено, Item, пПараметры, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ветис.ВыборкаСпискаЭтоНачало(пПараметры) Тогда
		Ветис.ВыборкаСпискаИнициализация(ИмяСервиса(), "GetPurposeChangesList", "purpose", "", пПараметры, 
			ВетисBase.DateInterval(beginDate, endDate));
	КонецЕсли;
	
	Возврат Ветис.ВыборкаСпискаСледующий(Item, пПараметры, пОтказ, пОшибка);
	
КонецФункции


Функция ИмяСервиса() Экспорт
	
	Возврат Перечисления.ВетисСервис.DictionaryService;
	
КонецФункции

Функция Прокси()
	
	Возврат ВетисПовтИсп.Прокси(ИмяСервиса());
	
КонецФункции
