
// Получение единицы измерения.
Функция GetUnitByGuid(guid, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат GetUnitByGuid_2_0(guid, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат GetUnitByGuid_2_0(guid, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат GetUnitByGuid_1_4(guid, пОтказ, пОшибка);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции
Функция GetUnitByGuid_1_4(guid, пОтказ = Ложь, пОшибка = "")
	
	Попытка
		Возврат Прокси().GetUnitByGuid(guid);
	Исключение
		пОтказ = Истина;
		пОшибка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВетисОбщегоНазначения.ВывестиСообщениеОбОшибке(ИнформацияОбОшибке(), "GetUnitByGuid");
		ВызватьИсключение;
	КонецПопытки;
	
КонецФункции
Функция GetUnitByGuid_2_0(guid, пОтказ = Ложь, пОшибка = "", пВызватьИсключение = Ложь)
	
	Попытка
		Возврат Прокси().GetUnitByGuid(guid);
	Исключение
		пОтказ = Истина;
		пОшибка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВетисОбщегоНазначения.ВывестиСообщениеОбОшибке(ИнформацияОбОшибке(), "GetUnitByGuid");
		Если пВызватьИсключение = Истина Тогда ВызватьИсключение; КонецЕсли;
	КонецПопытки;
	
КонецФункции

// Получение назначения груза.
Функция GetPurposeByGuid(guid, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат GetPurposeByGuid_2_0(guid, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат GetPurposeByGuid_2_0(guid, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат GetPurposeByGuid_1_4(guid, пОтказ, пОшибка);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции
Функция GetPurposeByGuid_1_4(guid, пОтказ = Ложь, пОшибка = "")
	
	Попытка
		Возврат Прокси().GetPurposeByGuid(guid);
	Исключение
		пОтказ = Истина;
		пОшибка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВетисОбщегоНазначения.ВывестиСообщениеОбОшибке(ИнформацияОбОшибке(), "GetPurposeByGuid");
		ВызватьИсключение;
	КонецПопытки;
	
КонецФункции
Функция GetPurposeByGuid_2_0(guid, пОтказ = Ложь, пОшибка = "", пВызватьИсключение = Ложь)
	
	Попытка
		Возврат Прокси().GetPurposeByGuid(guid);
	Исключение
		пОтказ = Истина;
		пОшибка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВетисОбщегоНазначения.ВывестиСообщениеОбОшибке(ИнформацияОбОшибке(), "GetPurposeByGuid");
		Если пВызватьИсключение = Истина Тогда ВызватьИсключение; КонецЕсли;
	КонецПопытки;
	
КонецФункции


// Получение списка всех единиц измерения.
// Используется самостоятельно в цикле Пока.
// Параметры:
//  Item - элемент списка, возвращаемый параметр
//  Params - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetUnitListNext(Item, Params, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат GetUnitListNext_2_0(Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат GetUnitListNext_2_0(Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат GetUnitListNext_1_4(Item, Params, пОтказ, пОшибка);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции
Функция GetUnitListNext_1_4(Item, пПараметры, пОтказ = Ложь, пОшибка = "")
	
	Ветис.GetRefListInit(ИмяСервиса(), "GetUnitList", "unit", "", пПараметры);
	
	Возврат Ветис.GetRefListNext(Item, пПараметры, пОтказ, пОшибка);
	
КонецФункции
Функция GetUnitListNext_2_0(Item, пПараметры, пОтказ = Ложь, пОшибка = "")
	
	Ветис.GetRefListInit(ИмяСервиса(), "GetUnitList", "unit", "", пПараметры);
	
	Возврат Ветис.GetRefListNext(Item, пПараметры, пОтказ, пОшибка);
	
КонецФункции

// Получение списка всех назначений груза.
// Используется самостоятельно в цикле Пока.
// Параметры:
//  Item - элемент списка, возвращаемый параметр
//  Params - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetPurposeListNext(Item, Params, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат GetPurposeListNext_2_0(Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат GetPurposeListNext_2_0(Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат GetPurposeListNext_1_4(Item, Params, пОтказ, пОшибка);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции
Функция GetPurposeListNext_1_4(Item, пПараметры, пОтказ = Ложь, пОшибка = "")
	
	Ветис.GetRefListInit(ИмяСервиса(), "GetPurposeList", "purpose", "", пПараметры);
	
	Возврат Ветис.GetRefListNext(Item, пПараметры, пОтказ, пОшибка);
	
КонецФункции
Функция GetPurposeListNext_2_0(Item, пПараметры, пОтказ = Ложь, пОшибка = "")
	
	Ветис.GetRefListInit(ИмяСервиса(), "GetPurposeList", "purpose", "", пПараметры);
	
	Возврат Ветис.GetRefListNext(Item, пПараметры, пОтказ, пОшибка);
	
КонецФункции


// Предназначена для получения списка актуальных записей о методах исследования (active=true, last=true).
// Используется самостоятельно в цикле Пока.
// Параметры:
//  Item - элемент списка, возвращаемый параметр
//  пПараметры - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetResearchMethodListNext(Item, Params, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат GetResearchMethodListNext_2_0(Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат GetResearchMethodListNext_2_0(Item, Params, пОтказ, пОшибка);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции
Функция GetResearchMethodListNext_2_0(Item, пПараметры, пОтказ = Ложь, пОшибка = "")
	
	Ветис.GetRefListInit(ИмяСервиса(), "GetResearchMethodList", "researchMethod", "", пПараметры);
	
	Возврат Ветис.GetRefListNext(Item, пПараметры, пОтказ, пОшибка);

КонецФункции


// Предназначена для получения списка актуальных записей о методах исследования (active=true, last=true).
// Используется самостоятельно в цикле Пока.
// Параметры:
//  Item - элемент списка, возвращаемый параметр
//  пПараметры - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetDiseaseListNext(Item, Params, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат GetDiseaseListNext_2_0(Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат GetDiseaseListNext_2_0(Item, Params, пОтказ, пОшибка);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции
Функция GetDiseaseListNext_2_0(Item, пПараметры, пОтказ = Ложь, пОшибка = "")
	
	Ветис.GetRefListInit(ИмяСервиса(), "GetDiseaseList", "disease", "", пПараметры);
	
	Возврат Ветис.GetRefListNext(Item, пПараметры, пОтказ, пОшибка);

КонецФункции


Функция GetUnitChangesListNext(beginDate, endDate = Неопределено, Item, Params, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат GetUnitChangesListNext_2_0(beginDate, endDate, Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат GetUnitChangesListNext_2_0(beginDate, endDate, Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат GetUnitChangesListNext_1_4(beginDate, endDate, Item, Params, пОтказ, пОшибка);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции
Функция GetUnitChangesListNext_1_4(beginDate, endDate = Неопределено, Item, пПараметры, пОтказ = Ложь, пОшибка = "")
	
	Если Ветис.GetListItFirst(пПараметры) Тогда
		Ветис.GetRefListInit(ИмяСервиса(), "GetUnitChangesList", "unit", "", пПараметры, 
			ВетисBase.DateInterval(beginDate, endDate));
	КонецЕсли;
	
	Возврат Ветис.GetRefListNext(Item, пПараметры, пОтказ, пОшибка);
	
КонецФункции
Функция GetUnitChangesListNext_2_0(beginDate, endDate = Неопределено, Item, пПараметры, пОтказ = Ложь, пОшибка = "")
	
	Если Ветис.GetListItFirst(пПараметры) Тогда
		Ветис.GetRefListInit(ИмяСервиса(), "GetUnitChangesList", "unit", "", пПараметры, 
			ВетисBase.DateInterval(beginDate, endDate));
	КонецЕсли;
	
	Возврат Ветис.GetRefListNext(Item, пПараметры, пОтказ, пОшибка);
	
КонецФункции

Функция GetPurposeChangesListNext(beginDate, endDate = Неопределено, Item, Params, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат GetPurposeChangesListNext_2_0(beginDate, endDate, Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат GetPurposeChangesListNext_2_0(beginDate, endDate, Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат GetPurposeChangesListNext_1_4(beginDate, endDate, Item, Params, пОтказ, пОшибка);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции
Функция GetPurposeChangesListNext_1_4(beginDate, endDate = Неопределено, Item, пПараметры, пОтказ = Ложь, пОшибка = "")
	
	Если Ветис.GetListItFirst(пПараметры) Тогда
		Ветис.GetRefListInit(ИмяСервиса(), "GetPurposeChangesList", "purpose", "", пПараметры, 
			ВетисBase.DateInterval(beginDate, endDate));
	КонецЕсли;
	
	Возврат Ветис.GetRefListNext(Item, пПараметры, пОтказ, пОшибка);
	
КонецФункции
Функция GetPurposeChangesListNext_2_0(beginDate, endDate = Неопределено, Item, пПараметры, пОтказ = Ложь, пОшибка = "")
	
	Если Ветис.GetListItFirst(пПараметры) Тогда
		Ветис.GetRefListInit(ИмяСервиса(), "GetPurposeChangesList", "purpose", "", пПараметры, 
			ВетисBase.DateInterval(beginDate, endDate));
	КонецЕсли;
	
	Возврат Ветис.GetRefListNext(Item, пПараметры, пОтказ, пОшибка);
	
КонецФункции


Функция ИмяСервиса() Экспорт
	
	Возврат Перечисления.ВетисСервис.DictionaryService;
	
КонецФункции

Функция Прокси()
	
	Возврат ВетисПовтИсп.Прокси(ИмяСервиса());
	
КонецФункции
