
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ОбъектXDTO") Тогда
		
		_Версия20 = Ветис.Версия_2_0() ИЛИ Ветис.Версия_2_1();
		
		_stockEntry = ДанныеЗаполнения;
		
		ПометкаУдаления = Ложь;
		guid = _stockEntry.guid;
		uuid = _stockEntry.uuid;
		last = _stockEntry.last;
		active = _stockEntry.active;
		status = ВетисBaseСлой1с.VersionStatus(_stockEntry.Status);
		
		Код = _stockEntry.entryNumber;
		
		updateDate = Ветис.ВремяМестное(_stockEntry.updateDate);// xs:dateTime
		
		ProductType = ВетисDictionaryСлой1с.productType(_stockEntry.batch.productType);
		Product     = ВетисDictionaryСлой1с.Product(_stockEntry.batch.product);
		SubProduct  = ВетисDictionaryСлой1с.SubProduct(_stockEntry.batch.subProduct);
		ProductItem = ВетисDictionaryСлой1с.ProductItem(_stockEntry.batch.productItem);
		ProductItemName = _stockEntry.batch.productItem.name;
		
		Наименование = ProductItemName;
		
		Unit        = ВетисDictionaryСлой1с.Unit(_stockEntry.batch.unit);
		volume      = _stockEntry.batch.volume;
		
		perishable    = _stockEntry.batch.perishable;
		lowGradeCargo = _stockEntry.batch.lowGradeCargo;
		
		Если НЕ ЗначениеЗаполнено(_stockEntry.previous) Тогда
			//createDate меняется в каждой версии, поэтому надо брать только из первой
			//будем считать, что первая это та в которой previous не заполнен
			createDate = Ветис.ВремяМестное(_stockEntry.createDate);// xs:dateTime
			//начальный объем тоже сохраняем, в веб он отображается
			volume1 = _stockEntry.batch.volume;
		КонецЕсли;
		
		Если _Версия20 Тогда
			
			_enterpriseGuid = ВетисОбщегоНазначения.ЗначениеРеквизита(Enterprise, "Guid");
			
			seOwner = ВетисDictionaryСлой1с.BusinessEntity(_stockEntry.batch.owner);
			
			Если НЕ _stockEntry.batch.packageList = Неопределено Тогда
				_pl = PackageList;
				_pl.Очистить();
				_pm = ProductMarks;
				_pm.Очистить();
				_plКлючСтроки = 1;
				Для каждого _package Из _stockEntry.batch.packageList.package Цикл
					_plСтрока = _pl.Добавить();
					_plСтрока.level = ВетисDictionaryСлой1с.PackageLevelType(_package.level);
					_plСтрока.packingType = ВетисDictionaryСлой1с.PackingType(_package.packingType);
					_plСтрока.quantity = _package.quantity;
					_plСтрока.КлючСтроки = _plКлючСтроки;
					Для каждого _productMarks Из _package.productMarks Цикл
						_pmСтрока = _pm.Добавить();
						_pmСтрока.КлючСвязи = _plКлючСтроки;
						_pmСтрока.value = _productMarks.__content;
						_pmСтрока.class = ВетисDictionaryСлой1с.ProductMarkingClass(_productMarks.class);
					КонецЦикла;
					_plКлючСтроки = _plКлючСтроки + 1;
				КонецЦикла;
			КонецЕсли;
			
			Если НЕ _stockEntry.batch.origin = Неопределено Тогда
				Если НЕ _stockEntry.batch.origin.producer = Неопределено Тогда
					ProducerList.Очистить();
					__stockEntry = Неопределено;
					//ProducerList.Очистить();
					Для каждого _producer Из _stockEntry.batch.origin.producer Цикл
						_Строка = ProducerList.Добавить();
						_Строка.producer = ВетисDictionaryСлой1с.Enterprise(_producer.enterprise);
						_Строка.role = ВетисDictionaryСлой1с.EnterpriseRole(_producer.role);
						Если ЗначениеЗаполнено(_Строка.producer) Тогда
							_Строка.producerName = _Строка.producer.Наименование;
						ИначеЕсли ЗначениеЗаполнено(_producer.enterprise.name) Тогда
							_Строка.producerName = _producer.enterprise.name;
						//ИначеЕсли ЗначениеЗаполнено(_Строка.producerName) Тогда
						//	//упрощенный вариант
						//	//если уже есть, через костыль обновлять не будем
						Иначе
							//2018-07-11
							//костыль
							//сделать: проверить, возможно исправили
							//операции getStockEntryList, getStockEntryChangesList
							//возращают пустые значения producer.enterprise.guid И producer.enterprise.name
							//операция getStockEntryByGuid возращает с заполненными полями
							_Отказ = Ложь;
							__stockEntry = ВетисMercuryApplications.getStockEntryByGuid(_stockEntry.guid, _enterpriseGuid, BusinessEntity, _Отказ);
							Если НЕ _Отказ Тогда
								Прервать;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
					//костыль
					Если НЕ __stockEntry = Неопределено Тогда
						ProducerList.Очистить();
						Для каждого _producer Из __stockEntry.batch.origin.producer Цикл
							_Строка = ProducerList.Добавить();
							_Строка.producer = ВетисDictionaryСлой1с.Enterprise(_producer.enterprise);
							_Строка.role = ВетисDictionaryСлой1с.EnterpriseRole(_producer.role);
							Если ЗначениеЗаполнено(_Строка.producer) Тогда
								_Строка.producerName = _Строка.producer.Наименование;
							ИначеЕсли ЗначениеЗаполнено(_producer.enterprise.name) Тогда
								_Строка.producerName = _producer.enterprise.name;
							Иначе
								//сюда не должны попасть
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
				country = ВетисDictionaryСлой1с.Country(_stockEntry.batch.origin.country);
			КонецЕсли;
			
			VetDocumentList.Очистить();
			_Отказ = Ложь; _Ошибка = "";
			Для каждого _vetDocument Из _stockEntry.vetDocument Цикл
				_Строка = VetDocumentList.Добавить();
				_Строка.vetDocument = ВетисMercuryVetdocumentСлой1с.VetDocument(_vetDocument, _enterpriseGuid, BusinessEntity, _Отказ, _Ошибка);
				Если _Отказ Тогда
					//MERC29224 - Ветеринарно-сопроводительный документ не найден в реестре РСХН, либо идентификатор не соответствует установленному формату.
					//ВСД может быть и есть но под другими enterpriseGuid или issuerID
					//сделать: проверить, возможно исправили
					//
					//ответ ТП (2019-01-22):
					//По вашему обращению проведена проверка.
					//Запись складского журнала, которая сформировалась в результате гашения ВСД хххххх, была отредактирована гос.вет. врачом.
					//В частности, указанным врачом изменен ХС-владелец продукции. Произвести данные изменения возможно в веб-интерфейсе Меркурий.ГВЭ.
					//
					//...руки опускаются от этого маразма
					ВызватьИсключение _Ошибка;
				КонецЕсли;
			КонецЦикла;
			
			dateOfProductionFirst = ВетисDictionary.ComplexDate(_stockEntry.batch.dateOfProduction.firstDate, Истина);
			dateOfProductionSecond = ВетисDictionary.ComplexDate(_stockEntry.batch.dateOfProduction.secondDate, Истина);
			dateOfProductionInformal = _stockEntry.batch.dateOfProduction.informalDate;
			
			expiryDateFirst = ВетисDictionary.ComplexDate(_stockEntry.batch.expiryDate.firstDate, Истина);
			expiryDateSecond = ВетисDictionary.ComplexDate(_stockEntry.batch.expiryDate.secondDate, Истина);
			expiryDateInformal = _stockEntry.batch.expiryDate.informalDate;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(guid) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		Если НЕ ЗначениеЗаполнено(ПолучитьСсылкуНового()) Тогда
			УстановитьСсылкуНового(Справочники.ВетисStockEntry.ПолучитьСсылку(Новый УникальныйИдентификатор(guid)));
		КонецЕсли;
	КонецЕсли;
	
	productMarking = "";
	Для каждого _Строка Из ProductMarks Цикл
		productMarking = productMarking + ?(productMarking="","",",") + _Строка.value;
	КонецЦикла;
	
	producerName = "";
	Для каждого _Строка Из ProducerList Цикл
		producer = _Строка.producer;
		producerName = producerName + ?(producerName="","",",") + _Строка.producerName;
	КонецЦикла;
	
	packingAmount = 0;
	Для каждого _Строка Из PackageList Цикл
		packingAmount = packingAmount + _Строка.quantity;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(dateOfProductionInformal) Тогда
		dateOfProduction = dateOfProductionInformal;
	Иначе
		dateOfProduction = формат(dateOfProductionFirst, "ДЛФ=D") + ?(ЗначениеЗаполнено(dateOfProductionSecond), " - " + формат(dateOfProductionSecond, "ДЛФ=D"), "");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(expiryDateInformal) Тогда
		expiryDate = expiryDateInformal;
	Иначе
		expiryDate = формат(expiryDateFirst, "ДЛФ=D") + ?(ЗначениеЗаполнено(expiryDateSecond), " - " + формат(expiryDateSecond, "ДЛФ=D"), "");
	КонецЕсли;
	
	Наименование = ProductItemName;
	Представление = ProductItemName;
	
	Если Ветис.Настройки_РегистрНакопленияStockEntry() Тогда
		//см. комментарий в обработке проведения ВетисТранспортнаяПартия
		Для Каждого _ТекСтрокаТовары Из VetDocumentList Цикл
			_НЗ = РегистрыНакопления.ВетисStockEntry.СоздатьНаборЗаписей();
			_НЗ.Отбор.Регистратор.Установить(_ТекСтрокаТовары.vetDocument);
			_Движение = _НЗ.Добавить();
			_Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			_Движение.Период = ВетисОбщегоНазначения.ЗначениеРеквизита(_ТекСтрокаТовары.vetDocument, "Дата");
			_Движение.vetDocument = _ТекСтрокаТовары.vetDocument;
			_Движение.BusinessEntity = BusinessEntity;
			_Движение.Enterprise = Enterprise;
			_Движение.StockEntry = Ссылка;
			_Движение.volume = volume1; //начальный объем
			//_Движение.uuid = uuid;
			Попытка
				_НЗ.Записать();
			Исключение
				ВетисОбщегоНазначения.ВывестиСообщениеОбОшибке(ИнформацияОбОшибке());
			КонецПопытки;
			Прервать;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры
