
Процедура ВетисОчередьЗапросов() Экспорт
	
	_Фабрика = ВетисПовтИсп.ФабрикаОбщая();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	_Таблица.Период,
	|	_Таблица.TransactionId,
	|	_Таблица.Операция,
	|	_Таблица.Настройка,
	|	_Таблица.BusinessEntity,
	|	_Таблица.Пользователь,
	|	_Таблица.ТекстЗапроса,
	|	_Таблица.ApplicationId,
	|	_Таблица.ТекстОтвета,
	|	_Таблица.Статус,
	|	_Таблица.Ошибка,
	|	_Таблица.ВыполнятьДо
	|ИЗ
	|	РегистрСведений.ВетисОчередьЗапросов КАК _Таблица
	|ГДЕ
	|	_Таблица.Статус В (ЗНАЧЕНИЕ(Перечисление.ВетисСтатусЗапроса.ПустаяСсылка), ЗНАЧЕНИЕ(Перечисление.ВетисСтатусЗапроса.ACCEPTED), ЗНАЧЕНИЕ(Перечисление.ВетисСтатусЗапроса.IN_PROCESS))";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Статус = Перечисления.ВетисСтатусЗапроса.ПустаяСсылка() Тогда
			_Ответ = Ветис.ОтправитьЗапрос(Выборка.ТекстЗапроса, Выборка.issuerId);
		ИначеЕсли Выборка.Статус = Перечисления.ВетисСтатусЗапроса.ACCEPTED Тогда
			_Ответ = Ветис.ПолучитьОтвет(Выборка.ApplicationId, Выборка.issuerId);
		ИначеЕсли Выборка.Статус = Перечисления.ВетисСтатусЗапроса.IN_PROCESS Тогда
			_Ответ = Ветис.ПолучитьОтвет(Выборка.ApplicationId, Выборка.issuerId);
		КонецЕсли;
		
		_Envelope = ВетисОбщегоНазначения.Десериализовать(_Ответ.ТекстОтвета, _Envelope.Тип(), _Фабрика);
		
		_мз = РегистрыСведений.ВетисОчередьЗапросов.СоздатьМенеджерЗаписи();
		
		ЗаполнитьЗначенияСвойств(_мз, Выборка);
		
		Если _Ответ.Отказ Тогда
			_мз.Отказ = Истина;
			_мз.ТекстОтвета = Новый ХранилищеЗначения(_Ответ.ТекстОтвета, Новый СжатиеДанных(9));
		Иначе
			Если НЕ _Envelope.body.Свойство("submitApplicationResponse") = Неопределено Тогда
				_Response = _Envelope.body.submitApplicationResponse;
				_мз.ApplicationId = Новый УникальныйИдентификатор(_Response.Application.ApplicationId);
			ИначеЕсли НЕ _Envelope.body.Свойство("receiveApplicationResultResponse") = Неопределено Тогда
				_Response = _Envelope.body.receiveApplicationResultResponse;
				_Result = ВетисApplication.ApplicationResult(_Response.Application);
				_мз.ТекстОтвета = Новый ХранилищеЗначения(ВетисОбщегоНазначения.Сериализовать(_Result, _Фабрика), Новый СжатиеДанных(9));
			КонецЕсли;
			_мз.Статус = ВетисApplicationСлой1с.Status(_Response.Application.Status);
		КонецЕсли;
		
		_мз.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

//http://vetrf.ru/vetrf-forum/posts/list/870/6633.page#43821
//С одной стороны, есть ограничение сверху: 5 запросов в секунду от одного клиента (логина).
//Причем, это ограничение общее для всех запросов к шлюзу, не только receiveApplicationResultRequest.
//С другой стороны, нет смысла 5 раз в секунду опрашивать сервер в надежде получить результат операции,
//которая выполняется 2 минуты, к примеру. 
//Поэтому рекомендации здесь такие:
// для каждого типа заявки (операции) определить время ожидания перед первым receiveApplicationResultRequest
// равное минимальному времени обработки заявки. И далее повторять опрос с интервалом 2 секунды.
