
Процедура ВетисОчередьЗапросов() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 5
	|	_Таблица.BusinessEntity,
	|	_Таблица.Операция,
	|	_Таблица.TransactionId,
	|	_Таблица.ApplicationId,
	|	_Таблица.ТекстЗапроса,
	|	_Таблица.ТекстОтвета,
	|	_Таблица.Ошибка,
	|	_Таблица.Статус
	|ИЗ
	|	РегистрСведений.ВетисОчередьЗапросов КАК _Таблица
	|ГДЕ
	|	_Таблица.Статус В (ЗНАЧЕНИЕ(Перечисление.ВетисСтатусЗапроса.ПустаяСсылка), ЗНАЧЕНИЕ(Перечисление.ВетисСтатусЗапроса.IN_PROCESS))";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.ТекстЗапроса) Тогда
			_Ответ = Ветис.ОтправитьЗапрос(Строка(Выборка.Операция) + "Request", Выборка.ТекстЗапроса, Выборка.issuerId);
		Иначе
			_Ответ = Ветис.ПолучитьОтвет(Строка(Выборка.Операция) + "Request", Выборка.ApplicationId, Выборка.issuerId);
		КонецЕсли;
	КонецЦикла;
	
	_мз = РегистрыСведений.ВетисОчередьЗапросов.СоздатьМенеджерЗаписи();
	
	ЗаполнитьЗначенияСвойств(_мз, Выборка);
	
	_Фабрика = ВетисПовтИсп.ФабрикаОбщая();
	
	_Envelope = ВетисОбщегоНазначения.Десериализовать(_Ответ.Текст, _Envelope.Тип(), _Фабрика);
	
	_receiveResponse = ВетисSoapEnvelope.Извлечь(_Envelope).receiveApplicationResultResponse;
	
	_мз.Статус = ВетисApplicationСлой1с.Status(_receiveResponse.Application.Status);
	
	//Если _receiveResponse.Application.Status = ВетисКонстанты.Status_IN_PROCESS() Тогда
	//	Возврат Новый Структура("Отказ, Ответ, status", Истина, "", _receiveResponse.Application.status);
	//Иначе
	//	Если НЕ _receiveResponse.Application.status = ВетисКонстанты.Status_COMPLETED() Тогда
	//		Возврат Новый Структура("Отказ, Ответ, status", Истина, ПолучитьТекстОшибки(_receiveResponse.Application.errors), _receiveResponse.Application.status);
	//	Иначе
	//		Возврат Новый Структура("Отказ, Ответ, status", Ложь, _Ответ.ПолучитьТелоКакСтроку("UTF-8"), _receiveResponse.Application.status);
	//	КонецЕсли;
	//КонецЕсли;
	
КонецПроцедуры

//http://vetrf.ru/vetrf-forum/posts/list/870/6633.page#43821
//С одной стороны, есть ограничение сверху: 5 запросов в секунду от одного клиента (логина).
//Причем, это ограничение общее для всех запросов к шлюзу, не только receiveApplicationResultRequest.
//С другой стороны, нет смысла 5 раз в секунду опрашивать сервер в надежде получить результат операции,
//которая выполняется 2 минуты, к примеру. 
//Поэтому рекомендации здесь такие:
// для каждого типа заявки (операции) определить время ожидания перед первым receiveApplicationResultRequest
// равное минимальному времени обработки заявки. И далее повторять опрос с интервалом 2 секунды.
