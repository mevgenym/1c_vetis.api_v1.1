
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Enterprise") Тогда
		
		ВетисОбщегоНазначения.ДобавитьОтбор(СписокПартии.Отбор, "Enterprise", Параметры.Enterprise);
		
	КонецЕсли;
	
	ЗакрыватьПриВыборе = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыбрать(Команда)
	
	Если Элементы.СписокПартии.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	_ТекущиеДанные = Элементы.СписокПартии.ТекущиеДанные;
	
	ЗначениеВыбора = Новый Структура;
	ЗначениеВыбора.Вставить("Guid",            _ТекущиеДанные.Guid);
	ЗначениеВыбора.Вставить("ProductType",     _ТекущиеДанные.ProductType);
	ЗначениеВыбора.Вставить("Product",         _ТекущиеДанные.Product);
	ЗначениеВыбора.Вставить("SubProduct",      _ТекущиеДанные.SubProduct);
	ЗначениеВыбора.Вставить("ProductItem",     _ТекущиеДанные.ProductItem);
	ЗначениеВыбора.Вставить("ProductItemName", ?(ПустаяСтрока(_ТекущиеДанные.ProductItemName), _ТекущиеДанные.ProductItem, _ТекущиеДанные.ProductItemName));
	//ЗначениеВыбора.Вставить("dateOfProductionFirst", _ТекущиеДанные.dateOfProductionFirst);
	//ЗначениеВыбора.Вставить("dateOfProductionSecond", _ТекущиеДанные.dateOfProductionSecond);
	ЗначениеВыбора.Вставить("Unit",            _ТекущиеДанные.Unit);
	ЗначениеВыбора.Вставить("producer",        _ТекущиеДанные.producer);
	ЗначениеВыбора.Вставить("Количество",      _ТекущиеДанные.Volume);
	ЗначениеВыбора.Вставить("Упаковка",        ПолучитьУпаковку(_ТекущиеДанные.Уид));
	
	Если ЗначениеЗаполнено(_ТекущиеДанные.dateOfProductionInformal) Тогда
		ЗначениеВыбора.Вставить("dateOfProductionInformal", _ТекущиеДанные.dateOfProductionInformal);
	Иначе
		ЗначениеВыбора.Вставить("dateOfProductionInformal", формат(_ТекущиеДанные.dateOfProductionFirst, "ДЛФ=D") + " - " + формат(_ТекущиеДанные.dateOfProductionSecond, "ДЛФ=D"));
	КонецЕсли;
	
	ОповеститьОВыборе(ЗначениеВыбора);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьУпаковку(пУид) 
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	_Упаковка.level КАК Уровень,
	|	_Упаковка.packingType КАК Упаковка,
	|	_Упаковка.packingAmount КАК Количество,
	|	_Маркировка.value КАК Маркировка,
	|	_Маркировка.class КАК КлассМаркировки,
	|	_Упаковка.КлючСтроки КАК КлючСтроки,
	|	_Маркировка.КлючСвязи
	|ИЗ
	|	РегистрСведений.ВетисPackageList КАК _Упаковка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВетисProductMarks КАК _Маркировка
	|		ПО _Упаковка.уид = _Маркировка.уид
	|			И _Упаковка.КлючСтроки = _Маркировка.КлючСвязи
	|ГДЕ
	|	_Упаковка.уид = &уид
	|ИТОГИ
	|	МАКСИМУМ(Уровень),
	|	МАКСИМУМ(Упаковка),
	|	МАКСИМУМ(Количество)
	|ПО
	|	КлючСтроки");
	
	Запрос.УстановитьПараметр("уид", пУид);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	_список = Новый Массив;
	Пока Выборка.Следующий() Цикл
		
		_Маркировка = Новый Массив;
		
		ВыборкаМарк = Выборка.Выбрать();
		Пока ВыборкаМарк.Следующий() Цикл
			Если НЕ ВыборкаМарк.Маркировка = NULL Тогда
				_Маркировка.Добавить(Новый Структура("КлючСвязи,Маркировка,КлассМаркировки",ВыборкаМарк.КлючСвязи,ВыборкаМарк.Маркировка,ВыборкаМарк.КлассМаркировки));
			КонецЕсли;
		КонецЦикла;
		
		_строка = Новый Структура();
		_строка.Вставить("КлючСтроки",Выборка.КлючСтроки);
		_строка.Вставить("Уровень",Выборка.Уровень);
		_строка.Вставить("Упаковка",Выборка.Упаковка);
		_строка.Вставить("Количество",Выборка.Количество);
		_строка.Вставить("Маркировка", _Маркировка);
		
		_список.Добавить(_строка);
		
	КонецЦикла;
	
	Возврат _список;
	
КонецФункции


&НаКлиенте
Процедура СписокПартииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	КомандаВыбрать(Неопределено);
	
КонецПроцедуры
