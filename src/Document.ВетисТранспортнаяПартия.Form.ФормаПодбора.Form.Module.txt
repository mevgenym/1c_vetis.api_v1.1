
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Enterprise") Тогда
		
		ВетисОбщегоНазначения.ДобавитьОтбор(СписокСкладскойЖурнал.Отбор, "Enterprise", Параметры.Enterprise);
		
	КонецЕсли;
	
	ЗакрыватьПриВыборе = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыбрать(Команда)
	
	Если Элементы.СписокСкладскойЖурнал.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	_ТекущиеДанные = Элементы.СписокСкладскойЖурнал.ТекущиеДанные;
	
	Для каждого _ТекущиеДанные Из Выбранное Цикл
		ЗначениеВыбора = Новый Структура;
		ЗначениеВыбора.Вставить("Guid",            _ТекущиеДанные.Guid);
		ЗначениеВыбора.Вставить("ProductType",     _ТекущиеДанные.ProductType);
		ЗначениеВыбора.Вставить("Product",         _ТекущиеДанные.Product);
		ЗначениеВыбора.Вставить("SubProduct",      _ТекущиеДанные.SubProduct);
		ЗначениеВыбора.Вставить("ProductItem",     _ТекущиеДанные.ProductItem);
		ЗначениеВыбора.Вставить("ProductItemName", _ТекущиеДанные.ProductItemName);
		ЗначениеВыбора.Вставить("Unit",            _ТекущиеДанные.Unit);
		ЗначениеВыбора.Вставить("producer",        _ТекущиеДанные.producer);
		ЗначениеВыбора.Вставить("Количество",      _ТекущиеДанные.Количество);
		ЗначениеВыбора.Вставить("Упаковка",        ПолучитьУпаковку(_ТекущиеДанные.Уид));
		ЗначениеВыбора.Вставить("dateOfProductionInformal", _ТекущиеДанные.dateOfProductionInformal);
		
		ОповеститьОВыборе(ЗначениеВыбора);
	КонецЦикла;
	
	Закрыть();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьУпаковку(пУид) 
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	_Упаковка.level КАК Уровень,
	|	_Упаковка.packingType КАК Упаковка,
	|	_Упаковка.packingAmount КАК Количество,
	|	_Маркировка.value КАК Маркировка,
	|	_Маркировка.class КАК КлассМаркировки,
	|	_Упаковка.КлючСтроки КАК КлючСтроки,
	|	_Маркировка.КлючСвязи
	|ИЗ
	|	РегистрСведений.ВетисPackageList КАК _Упаковка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВетисProductMarks КАК _Маркировка
	|		ПО _Упаковка.уид = _Маркировка.уид
	|			И _Упаковка.КлючСтроки = _Маркировка.КлючСвязи
	|ГДЕ
	|	_Упаковка.уид = &уид
	|ИТОГИ
	|	МАКСИМУМ(Уровень),
	|	МАКСИМУМ(Упаковка),
	|	МАКСИМУМ(Количество)
	|ПО
	|	КлючСтроки");
	
	Запрос.УстановитьПараметр("уид", пУид);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	_список = Новый Массив;
	Пока Выборка.Следующий() Цикл
		
		_Маркировка = Новый Массив;
		
		ВыборкаМарк = Выборка.Выбрать();
		Пока ВыборкаМарк.Следующий() Цикл
			Если НЕ ВыборкаМарк.Маркировка = NULL Тогда
				_Маркировка.Добавить(Новый Структура("КлючСвязи,Маркировка,КлассМаркировки",ВыборкаМарк.КлючСвязи,ВыборкаМарк.Маркировка,ВыборкаМарк.КлассМаркировки));
			КонецЕсли;
		КонецЦикла;
		
		_строка = Новый Структура();
		_строка.Вставить("КлючСтроки",Выборка.КлючСтроки);
		_строка.Вставить("Уровень",Выборка.Уровень);
		_строка.Вставить("Упаковка",Выборка.Упаковка);
		_строка.Вставить("Количество",Выборка.Количество);
		_строка.Вставить("Маркировка", _Маркировка);
		
		_список.Добавить(_строка);
		
	КонецЦикла;
	
	Возврат _список;
	
КонецФункции


&НаКлиенте
Процедура СписокПартииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	//КомандаВыбрать(Неопределено);
	
	ОткрытьФорму("Документ.ВетисТранспортнаяПартия.Форма.ФормаВводаКоличества", , ЭтаФорма,,,, Новый ОписаниеОповещения("СписокПартииВыборОбработкаОповещения", ЭтаФорма));
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПартииВыборОбработкаОповещения(Результат, Параметры) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		
		Если Элементы.СписокСкладскойЖурнал.ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		_ТекущиеДанные = Элементы.СписокСкладскойЖурнал.ТекущиеДанные;
		
		_строки = Выбранное.НайтиСтроки(Новый Структура("guid", _ТекущиеДанные.Guid));
		
		Если _строки.Количество() = 0 Тогда
			ЗначениеВыбора = Выбранное.Добавить();
			ЗначениеВыбора.Guid        = _ТекущиеДанные.Guid;
			ЗначениеВыбора.уид         = _ТекущиеДанные.уид;
			ЗначениеВыбора.ProductType = _ТекущиеДанные.ProductType;
			ЗначениеВыбора.Product     = _ТекущиеДанные.Product;
			ЗначениеВыбора.SubProduct  = _ТекущиеДанные.SubProduct;
			ЗначениеВыбора.ProductItem = _ТекущиеДанные.ProductItem;
			ЗначениеВыбора.ProductItemName = ?(ПустаяСтрока(_ТекущиеДанные.ProductItemName), _ТекущиеДанные.ProductItem, _ТекущиеДанные.ProductItemName);
			ЗначениеВыбора.Unit        = _ТекущиеДанные.Unit;
			ЗначениеВыбора.producer    = _ТекущиеДанные.producer;
			
			Если ЗначениеЗаполнено(_ТекущиеДанные.dateOfProductionInformal) Тогда
				ЗначениеВыбора.dateOfProductionInformal = _ТекущиеДанные.dateOfProductionInformal;
			Иначе
				ЗначениеВыбора.dateOfProductionInformal = формат(_ТекущиеДанные.dateOfProductionFirst, "ДЛФ=D") + " - " + формат(_ТекущиеДанные.dateOfProductionSecond, "ДЛФ=D");
			КонецЕсли;
		Иначе
			ЗначениеВыбора = _строки[0];
		КонецЕсли;
		
		ЗначениеВыбора.Количество = Результат;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПартииПриАктивизацииСтроки(Элемент)
	
	_ТекущиеДанные = Элементы.СписокСкладскойЖурнал.ТекущиеДанные;
	
	Если _ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокСкладскойЖурналУпаковка.Отбор, "уид", _ТекущиеДанные.уид);
	ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокСкладскойЖурналМаркировка.Отбор, "уид", _ТекущиеДанные.уид);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСкладскойЖурналУпаковкаПриАктивизацииСтроки(Элемент)
	
	_ТекущиеДанные = Элементы.СписокСкладскойЖурналУпаковка.ТекущиеДанные;
	
	Если _ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокСкладскойЖурналМаркировка.Отбор, "КлючСвязи", _ТекущиеДанные.КлючСтроки);
	
КонецПроцедуры
