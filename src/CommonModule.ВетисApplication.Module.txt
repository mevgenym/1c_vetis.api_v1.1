
// тип, описывающий cведения о содержимом заявки
Функция Application(Object, Name, IssuerId) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисApplication_2_0.Application(Object, Name, IssuerId);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисApplication_2_0.Application(Object, Name, IssuerId);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисApplication_1_4.Application(Object, Name, IssuerId);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

// результат обработки заявки
Функция ApplicationResult(Object) Экспорт
	
	Возврат Object.result;
	
КонецФункции

// тип, описывающий cведения о содержимом заявки
Функция ApplicationDataWrapper(Object = Неопределено, Name = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисApplication_2_0.ApplicationDataWrapper(Object, Name);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисApplication_2_0.ApplicationDataWrapper(Object, Name);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисApplication_1_4.ApplicationDataWrapper(Object, Name);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

// тип, описывающий cведения о результате обработки заявки
Функция ApplicationResultWrapper(Object) Экспорт
	
	Возврат Object.applicationResultData;
	
КонецФункции


#Область Service

// Заявка в единой заявочной системе на выполнение определенной операции,
// определяет пользователя, который инициирует запрос и содержит сведения самого запроса.
Функция submitApplicationRequest(Application, APIkey) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисApplication_2_0.submitApplicationRequest(Application, APIkey);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисApplication_2_0.submitApplicationRequest(Application, APIkey);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисApplication_1_4.submitApplicationRequest(Application, APIkey);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

// Заявка в заявочной системе, содержит сведения запроса.
Функция submitApplicationResponse(Object) Экспорт
	
	Возврат Object.application;
	
КонецФункции

// Запрос на получение результатов обработки заявки.
Функция receiveApplicationResultRequest(ApplicationId, IssuerId, APIkey) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисApplication_2_0.receiveApplicationResultRequest(ApplicationId, IssuerId, APIkey);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисApplication_2_0.receiveApplicationResultRequest(ApplicationId, IssuerId, APIkey);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисApplication_1_4.receiveApplicationResultRequest(ApplicationId, IssuerId, APIkey);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

// Получение результатов обработки заявки.
Функция receiveApplicationResultResponse(Object) Экспорт
	
	Возврат Object.application;
	
КонецФункции

#КонецОбласти


Функция Создать(Name, URI = Неопределено, Factory = Неопределено) Экспорт
	
	Возврат ВетисОбщегоНазначения.Создать(Name, ?(URI = Неопределено, URI(), URI), ?(Factory = Неопределено, Factory(), Factory));
	
КонецФункции

Функция ServiceURI() Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисApplication_2_0.ServiceURI();
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисApplication_2_0.ServiceURI();
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисApplication_1_4.ServiceURI();
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

Функция URI() Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисApplication_2_0.URI();
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисApplication_2_0.URI();
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисApplication_1_4.URI();
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

Функция Factory()
	
	Возврат ВетисПовтИсп.Определения(Перечисления.ВетисСервис.ApplicationManagementService).ФабрикаXDTO;
	
КонецФункции

