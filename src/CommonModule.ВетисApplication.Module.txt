
// тип, описывающий cведения о содержимом заявки
Функция Application(Object, Name, IssuerId) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат Application_1_4(Object, Name, IssuerId);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат Application_1_4(Object, Name, IssuerId);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат Application_1_4(Object, Name, IssuerId);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции
Функция Application_1_4(Object, пИмя, issuerId)
	
	_Объект = Создать("Application");
	
	_Объект.serviceId = Ветис.serviceId();
	_Объект.issuerId  = issuerId;
	_Объект.issueDate = Ветис.ВремяСервиса();//xs:dateTime
	_Объект.data      = ApplicationDataWrapper(Object, пИмя);
	
	Возврат _Объект;
	
КонецФункции

// результат обработки заявки
Функция ApplicationResult(Object) Экспорт
	
	Возврат Object.result;
	
КонецФункции

// тип, описывающий cведения о содержимом заявки
Функция ApplicationDataWrapper(Object = Неопределено, Name = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ApplicationDataWrapper_1_4(Object, Name);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ApplicationDataWrapper_1_4(Object, Name);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ApplicationDataWrapper_1_4(Object, Name);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции
Функция ApplicationDataWrapper_1_4(Object = Неопределено, пИмя = Неопределено)
	
	_Объект = Создать("ApplicationDataWrapper");
	
	Если НЕ Object = Неопределено Тогда
		
		_Объект.Добавить(ФормаXML.Элемент, Object.Тип().URIПространстваИмен, ?(пИмя = Неопределено, Object.Тип().Имя, пИмя), Object);
		
	КонецЕсли;
	
	Возврат _Объект;
	
КонецФункции

// тип, описывающий cведения о результате обработки заявки
Функция ApplicationResultWrapper(Object) Экспорт
	
	Возврат Object.applicationResultData;
	
КонецФункции


#Область Service

// Заявка в единой заявочной системе на выполнение определенной операции,
// определяет пользователя, который инициирует запрос и содержит сведения самого запроса.
Функция submitApplicationRequest(Application, APIkey) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат submitApplicationRequest_1_4(Application, APIkey);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат submitApplicationRequest_1_4(Application, APIkey);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат submitApplicationRequest_1_4(Application, APIkey);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции
Функция submitApplicationRequest_1_4(пApplication, APIkey)
	
	_Объект = Создать("submitApplicationRequest", ServiceURI());
	
	_Объект.apiKey      = APIkey;
	_Объект.application = пApplication;
	
	Возврат _Объект;
	
КонецФункции

// Заявка в заявочной системе, содержит сведения запроса.
Функция submitApplicationResponse(Object) Экспорт
	
	Возврат Object.application;
	
КонецФункции

// Запрос на получение результатов обработки заявки.
Функция receiveApplicationResultRequest(ApplicationId, IssuerId, APIkey) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат receiveApplicationResultRequest_1_4(ApplicationId, IssuerId, APIkey);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат receiveApplicationResultRequest_1_4(ApplicationId, IssuerId, APIkey);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат receiveApplicationResultRequest_1_4(ApplicationId, IssuerId, APIkey);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции
Функция receiveApplicationResultRequest_1_4(applicationId, issuerId, APIkey)
	
	_Объект = Создать("receiveApplicationResultRequest", ServiceURI());
	
	_Объект.apiKey        = APIkey;
	_Объект.issuerId      = issuerId;
	_Объект.applicationId = applicationId;
	
	Возврат _Объект;
	
КонецФункции

// Получение результатов обработки заявки.
Функция receiveApplicationResultResponse(Object) Экспорт
	
	Возврат Object.application;
	
КонецФункции

#КонецОбласти


Функция Создать(Name, URI = Неопределено, Factory = Неопределено) Экспорт
	
	Возврат ВетисОбщегоНазначения.Создать(Name, ?(URI = Неопределено, URI(), URI), ?(Factory = Неопределено, Factory(), Factory));
	
КонецФункции

Функция ServiceURI() Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат "http://api.vetrf.ru/schema/cdm/application/ws-definitions";
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат "http://api.vetrf.ru/schema/cdm/application/ws-definitions";
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат "http://api.vetrf.ru/schema/cdm/application/ws-definitions";
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

Функция URI() Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат "http://api.vetrf.ru/schema/cdm/application";
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат "http://api.vetrf.ru/schema/cdm/application";
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат "http://api.vetrf.ru/schema/cdm/application";
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

Функция Factory()
	
	Возврат ВетисПовтИсп.Определения(Перечисления.ВетисСервис.amsMercuryService).ФабрикаXDTO;
	
КонецФункции

