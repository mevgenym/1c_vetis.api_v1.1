
&НаКлиенте
Процедура КомандаЗапуск(Команда)
	
	Перем _Отказ, _Ошибка;
	
	КомандаОтложенныеОперацииСервер(_Отказ, _Ошибка);
	
	Если _Отказ = Истина Тогда
		Сообщить(_Ошибка);
	КонецЕсли;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура КомандаОтложенныеОперацииСервер(пОтказ = Ложь, пОшибка = "", пОтбор = Неопределено)
	
	ВетисСинхронизация.ОтложенныеОперации(пОтказ, пОшибка, пОтбор);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПовторить(Команда)
	
	ПоказатьВопрос(Новый ОписаниеОповещения("КомандаПовторитьОбработкаОповещения", ЭтаФорма), "Повторить выбранные?", РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет, "Повторить операции");
	
КонецПроцедуры
	
&НаКлиенте
Процедура КомандаПовторитьОбработкаОповещения(Результат, Параметры) Экспорт
	
	Перем _Отказ, _Ошибка;
	
	Если НЕ Результат = КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	_список = Новый Массив;
	Для каждого _Ключ Из Элементы.Список.ВыделенныеСтроки Цикл
		_список.Добавить(_Ключ);
	КонецЦикла;
	
	КомандаПовторитьНаСервере(_список, _Отказ, _Ошибка);
	
	Если _Отказ = Истина Тогда
		Сообщить(_Ошибка);
	КонецЕсли;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура КомандаПовторитьНаСервере(пСписок, пОтказ = Ложь, пОшибка = "")
	
	Для каждого _Ключ Из пСписок Цикл
		
		РегистрыСведений.ВетисОтложенныеОперации.Скопировать(_Ключ.УникальныйИдентификатор);
		
	КонецЦикла;
	
КонецПроцедуры
