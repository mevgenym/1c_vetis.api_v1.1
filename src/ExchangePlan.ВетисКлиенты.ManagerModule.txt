
Функция ПолучитьУзел(пИмя, пОтказ = Ложь) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	_Таблица.Ссылка КАК Ссылка,
	|	_Таблица.НомерПринятого КАК НомерПринятого,
	|	_Таблица.НомерОтправленного КАК НомерОтправленного
	|ИЗ
	|	ПланОбмена.ВетисКлиенты КАК _Таблица
	|ГДЕ
	|	_Таблица.Код = &Код");
	Запрос.УстановитьПараметр("Код", пИмя);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		//_Узел = ПланыОбмена.ВетисКлиенты.СоздатьУзел();
		//_Узел.Код = пИмя;
		//_Узел.Наименование = пИмя;
		//Попытка
		//	_Узел.Записать();
		//Исключение
		//	пОтказ = Истина;
		//	_ИнформацияОбОшибке = ИнформацияОбОшибке();
		//	пСообщение = ПодробноеПредставлениеОшибки(_ИнформацияОбОшибке);
		//	ВетисОбщегоНазначения.ВывестиСообщениеОбОшибке(_ИнформацияОбОшибке);
		//	Возврат Неопределено;
		//КонецПопытки;
		//Возврат Новый Структура("Ссылка,НомерПринятого,НомерОтправленного", _Узел.Ссылка, _Узел.НомерПринятого, _Узел.НомерОтправленного);
		Возврат Неопределено;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Новый Структура("Ссылка,НомерПринятого,НомерОтправленного", Выборка.Ссылка, Выборка.НомерПринятого, Выборка.НомерОтправленного);
	КонецЕсли;
	
КонецФункции

Процедура УдалитьРегистрациюИзменений(пУзел, пНомерОтправленного) Экспорт
	
	ПланыОбмена.УдалитьРегистрациюИзменений(пУзел, пНомерОтправленного);
	
КонецПроцедуры

Процедура ЗарегистрироватьИзменения(пДанные) Экспорт
	
	//Запрос = Новый Запрос(
	//"ВЫБРАТЬ
	//|	_Таблица.Ссылка
	//|ИЗ
	//|	ПланОбмена.ВетисКлиенты КАК _Таблица
	//|ГДЕ
	//|	ИСТИНА
	//|	И НЕ _Таблица.ПометкаУдаления
	//|	И НЕ _Таблица.ЭтотУзел
	//|	И ИСТИНА");
	//
	//СписокУзлов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	//
	//ПланыОбмена.ЗарегистрироватьИзменения(СписокУзлов, пДанные);
	
	//на данный момент в рабочей базе условие ЭтотУзел не срабатывает
	//поэтому пока только так
	ПланыОбмена.ЗарегистрироватьИзменения(ПланыОбмена.ВетисКлиенты.НайтиПоКоду("trade"), пДанные);
	
КонецПроцедуры

Процедура УстановитьНомер(пУзел, пНомерПринятого, пНомерОтправленного, пОшибка = "") Экспорт
	
	_Узел = пУзел.ПолучитьОбъект();
	_Узел.НомерПринятого = пНомерПринятого;
	_Узел.НомерОтправленного = пНомерОтправленного;
	
	Попытка
		_Узел.Записать();
	Исключение
		пОшибка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
КонецПроцедуры

Процедура УстановитьНомерПринятого(пУзел, пНомерПринятого, пОшибка = "") Экспорт
	
	_Узел = пУзел.ПолучитьОбъект();
	_Узел.НомерПринятого = пНомерПринятого;
	
	Попытка
		_Узел.Записать();
	Исключение
		пОшибка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
КонецПроцедуры

Процедура УстановитьНомерОтправленного(пУзел, пНомерОтправленного, пОшибка = "") Экспорт
	
	_Узел = пУзел.ПолучитьОбъект();
	_Узел.НомерОтправленного = пНомерОтправленного;
	
	Попытка
		_Узел.Записать();
	Исключение
		пОшибка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	УдалитьРегистрациюИзменений(пУзел, пНомерОтправленного);
	
КонецПроцедуры
