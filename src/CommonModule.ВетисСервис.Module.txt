
Функция ОбработатьВходящийЗапрос(пЗапрос) Экспорт
	
	//ВетисОбщегоНазначения.Пауза(10);
	
	_Отказ = Ложь;
	
	_Обновление = Истина;
	
	_Сообщение = "";
	
	_Запрос = Десериализовать(пЗапрос.ПолучитьТелоКакСтроку());
	
	Если НЕ ТипЗнч(_Запрос) = Тип("ХранилищеЗначения") Тогда
		Возврат ОтветСервер("Неправильный формат запроса", Истина);
	КонецЕсли;
	
	_Запрос = _Запрос.Получить();
	
	//проверка запроса
	Если НЕ ТипЗнч(_Запрос) = Тип("Структура") Тогда
		Возврат ОтветСервер("Неправильный формат запроса", Истина);
	КонецЕсли;
	
	//обработчик
	_ответ = Новый Структура;
	//_Выгруженные = Неопределено;
	Если _Запрос.Свойство("BusinessEntity") И ТипЗнч(_Запрос.BusinessEntity) = Тип("Массив") Тогда
		_ответ.Вставить("BusinessEntity", Новый Массив);
		Для каждого _ЭлементЗапроса Из _Запрос.BusinessEntity Цикл
			
			_Отказ = Ложь; _Ошибка = "";
			Если _ЭлементЗапроса.Свойство("inn") И ЗначениеЗаполнено(_ЭлементЗапроса.inn) Тогда
				_список = Новый Массив;
				_ссылка = Справочники.ВетисBusinessEntity.НайтиПоРеквизиту("inn", _ЭлементЗапроса.inn);
				Если ЗначениеЗаполнено(_ссылка) Тогда
					_список.Добавить(ПолучитьСтруктуруОбъекта(_ссылка));
				Иначе
					_ОтветСервиса = ВетисEnterpriseService_2_0.GetBusinessEntityByINN(_ЭлементЗапроса.inn, _Отказ, _Ошибка);
					Если _Отказ = Истина Тогда
						Возврат ОтветСервер(_Ошибка, Истина);
					КонецЕсли;
					Для каждого _ОбъектСервиса Из _ОтветСервиса Цикл
						_список.Добавить(ПолучитьСтруктуруОбъекта(ВетисDictionaryСлой1с.BusinessEntity(_ОбъектСервиса)));
					КонецЦикла;
				КонецЕсли;
				_ответ.BusinessEntity.Добавить(Новый Структура("inn, Объекты", _ЭлементЗапроса.inn, _список));
				
			ИначеЕсли _ЭлементЗапроса.Свойство("guid") И ЗначениеЗаполнено(_ЭлементЗапроса.guid) Тогда
				_список = Новый Массив;
				_ссылка = ВетисDictionaryСлой1с.BusinessEntity(_ЭлементЗапроса.guid);
				_список.Добавить(ПолучитьСтруктуруОбъекта(_ссылка));
				_ответ.BusinessEntity.Добавить(Новый Структура("guid, Объекты", _ЭлементЗапроса.guid, _список));
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли _Запрос.Свойство("Enterprise") И ТипЗнч(_Запрос.Enterprise) = Тип("Массив") Тогда
		_ответ.Вставить("Enterprise", Новый Массив);
		Для каждого _ЭлементЗапроса Из _Запрос.Enterprise Цикл
			
			_Отказ = Ложь; _Ошибка = "";
			Если _ЭлементЗапроса.Свойство("businessEntityGuid") И ЗначениеЗаполнено(_ЭлементЗапроса.businessEntityGuid) Тогда
				_список = Новый Массив;
				_enterprise = Неопределено;
				_параметры = Неопределено;
				Пока ВетисEnterpriseService_2_0.GetActivityLocationListNext(_ЭлементЗапроса.businessEntityGuid, _enterprise, _параметры, _Отказ, _Ошибка) Цикл
					_список.Добавить(ПолучитьСтруктуруОбъекта(ВетисDictionaryСлой1с.Enterprise(_enterprise)));
				КонецЦикла;
				Если _Отказ = Истина Тогда
					Возврат ОтветСервер(_Ошибка, Истина);
				КонецЕсли;
				_ответ.Enterprise.Добавить(Новый Структура("businessEntityGuid, Объекты", _ЭлементЗапроса.businessEntityGuid, _список));
				
			ИначеЕсли _ЭлементЗапроса.Свойство("guid") И ЗначениеЗаполнено(_ЭлементЗапроса.guid) Тогда
				_список = Новый Массив;
				_ссылка = ВетисDictionaryСлой1с.Enterprise(_ЭлементЗапроса.guid);
				_список.Добавить(ПолучитьСтруктуруОбъекта(_ссылка));
				_ответ.Enterprise.Добавить(Новый Структура("guid, Объекты", _ЭлементЗапроса.guid, _список));
				
			Иначе
				_отбор = ВетисDictionary_2_0.Enterprise();
				Если _ЭлементЗапроса.Свойство("name") И ЗначениеЗаполнено(_ЭлементЗапроса.name) Тогда
					_отбор.name = _ЭлементЗапроса.name;
				КонецЕсли;
				Если _ЭлементЗапроса.Свойство("number") И ЗначениеЗаполнено(_ЭлементЗапроса.number) Тогда
					_отбор.numberList = ВетисDictionary_2_0.EnterpriseNumberList();
					_отбор.numberList.enterpriseNumber.Добавить(_ЭлементЗапроса.number);
				КонецЕсли;
				_список = Новый Массив;
				_enterprise = Неопределено;
				_параметры = Неопределено;
				_макс = 1000;
				Пока ВетисEnterpriseService_2_0.GetRussianEnterpriseListNext(_отбор, _enterprise, _параметры) Цикл
					_список.Добавить(ПолучитьСтруктуруОбъекта(ВетисDictionaryСлой1с.Enterprise(_enterprise)));
					_макс = _макс - 1;
				КонецЦикла;
				_ответ.Enterprise.Добавить(Новый Структура("name, number, Объекты", _отбор.name, _отбор.number, _ЭлементЗапроса.guid, _список));
				
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли _Запрос.Свойство("Country") Тогда
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	_Таблица.Наименование КАК name,
		|	_Таблица.guid
		|ИЗ
		|	Справочник.ВетисCountry КАК _Таблица
		|ГДЕ
		|	ИСТИНА
		|	И НЕ _Таблица.ПометкаУдаления
		|//1	И _Таблица.Наименование подобно ""%<имя>%""
		|	И ИСТИНА
		|
		|УПОРЯДОЧИТЬ ПО
		|	Наименование");
		
		Если ЗначениеЗаполнено(_Запрос.Country) Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "//1", "");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "<имя>", _Запрос.Country);
		КонецЕсли;
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		_ответ.Вставить("Country", Новый Массив);
		
		Пока Выборка.Следующий() Цикл
			_ответ.Country.Добавить(Новый Структура("name,guid", Выборка.name, Выборка.guid));
		КонецЦикла;
		
	ИначеЕсли _Запрос.Свойство("Region") Тогда
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	_Таблица.Наименование КАК name,
		|	_Таблица.guid,
		|	_Таблица.Country.Наименование КАК CountryName,
		|	_Таблица.Country.guid КАК CountryGuid
		|ИЗ
		|	Справочник.ВетисRegion КАК _Таблица
		|ГДЕ
		|	ИСТИНА
		|	И НЕ _Таблица.ПометкаУдаления
		|//1	И _Таблица.Наименование подобно ""%<имя>%""
		|	И ИСТИНА
		|
		|УПОРЯДОЧИТЬ ПО
		|	Наименование");
		
		Если ЗначениеЗаполнено(_Запрос.Region) Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "//1", "");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "<имя>", _Запрос.Region);
		КонецЕсли;
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		_ответ.Вставить("Region", Новый Массив);
		
		Пока Выборка.Следующий() Цикл
			_Объект = Новый Структура;
			_Объект.Вставить("name", Выборка.name);
			_Объект.Вставить("guid", Выборка.guid);
			_Объект.Вставить("Country", Новый Структура("name,guid", Выборка.CountryName, Выборка.CountryGuid));
			_ответ.Region.Добавить(_Объект);
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ОтветСервер(_Сообщение, ,, _ответ);
	
КонецФункции


Функция ОтветСервер(пСообщение, пОтказ = Ложь, пГотово = Ложь, пОтвет = Неопределено)
	
	_Ответ = Новый Структура("Готово,Отказ,Сообщение,Ответ", пГотово, пОтказ, пСообщение, пОтвет);
	
	_Ответ = Новый ХранилищеЗначения(_Ответ, Новый СжатиеДанных(9));
	
	Возврат Сериализовать(_Ответ);
	
КонецФункции


Функция Сериализовать(пОбъект) Экспорт
	
	_ЗаписьXML = Новый ЗаписьXML;
	_ЗаписьXML.УстановитьСтроку("UTF-8");
	
	ЗаписатьXML(_ЗаписьXML, пОбъект);
	
	Возврат _ЗаписьXML.Закрыть();
	
КонецФункции

Функция Десериализовать(пТекст) Экспорт
	
	_Чтение = Новый ЧтениеXML;
	
	_Чтение.УстановитьСтроку(пТекст);
	
	_Результат = ПрочитатьXML(_Чтение);
	
	_Чтение.Закрыть();
	
	Возврат _Результат;
	
КонецФункции

Функция ПолучитьСтруктуруОбъекта(пОбъект, пВыгруженные = Неопределено, пПодробно = Истина, пПодробноПоСсылке = Истина)
	
	Возврат ВетисОбщегоНазначения.ПолучитьСтруктуруОбъектаДляОбмена(пОбъект, пВыгруженные, пПодробно, пПодробноПоСсылке)
	
КонецФункции
