
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КлючСтроки = Параметры.КлючСтроки;
	Количество = Параметры.Количество;
	КоличествоМест = Параметры.КоличествоМест;
	ProductItem = Параметры.ProductItem;
	SubProduct = Параметры.SubProduct;
	ХозяйствующийСубъект = Параметры.ХозяйствующийСубъект;
	Предприятие = Параметры.Предприятие;
	
	Для каждого _ПараметрыПартииСтрока Из Параметры.ПартииДок Цикл
		Если _ПараметрыПартииСтрока.КлючСвязи = КлючСтроки Тогда
			Если _ПараметрыПартииСтрока.Отправлена Тогда
				_ПартииСтрока = ПартииОтправленные.Добавить();
				_ПартииСтрока.Количество = _ПараметрыПартииСтрока.Количество;
				_ПартииСтрока.КоличествоМест = _ПараметрыПартииСтрока.КоличествоМест;
			Иначе
				_ПартииСтрока = ПартииВыбранные.Добавить();
				_ПартииСтрока.Представление = _ПараметрыПартииСтрока.Представление;
			КонецЕсли;
		Иначе
			// используется для вычисления остатка партий
			_ПартииСтрока = ПартииВыбранныеДругие.Добавить();
		КонецЕсли;
		_ПартииСтрока.guid = _ПараметрыПартииСтрока.guid;
		Если НЕ _ПараметрыПартииСтрока.Отправлена Тогда
			_ПартииСтрока.Количество = _ПараметрыПартииСтрока.Количество;
			_ПартииСтрока.КоличествоМест = _ПараметрыПартииСтрока.КоличествоМест;
		КонецЕсли;
	КонецЦикла;
	
	_тз = ПартииОтправленные.Выгрузить();
	_тз.Свернуть("guid", "Количество,КоличествоМест");
	ПартииОтправленные.Загрузить(_тз);
	
	_тз = ПартииВыбранныеДругие.Выгрузить();
	_тз.Свернуть("guid", "Количество,КоличествоМест");
	ПартииВыбранныеДругие.Загрузить(_тз);
	
	_НомерСтроки = 1;
	Для каждого _ПартииСтрока Из ПартииВыбранные Цикл
		_ПартииСтрока.НомерСтроки = _НомерСтроки;
		_НомерСтроки = _НомерСтроки + 1;
	КонецЦикла;
	
	КоличествоОтправленоИтог = ПартииОтправленные.Итог("Количество");
	КоличествоМестОтправленоИтог = ПартииОтправленные.Итог("КоличествоМест");
	
	ЗаполнитьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьИтог();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если НЕ ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		ПоказатьВопрос(Новый ОписаниеОповещения("ПередЗакрытиемОбработкаОповещения", ЭтаФорма), "Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемОбработкаОповещения(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Да Тогда
		Модифицированность = Ложь;
		Закрыть(СформироватьОтвет());
	Иначе
		//оставляем открытой
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаГотово(Команда)
	
	Модифицированность = Ложь;
	
	Закрыть(СформироватьОтвет());
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнить(Команда)
	
	ЗаполнитьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаРаспределитьПартии(Количеств)
	
	РаспределитьПартии();
	
	ЗаполнитьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПартииПереместитьВниз(Команда)
	
	_ТекущиеДанные = Элементы.ПартииСписок.ТекущиеДанные;
	
	Если _ТекущиеДанные.Использовать Тогда
		_Строки = ПартииВыбранные.НайтиСтроки(Новый Структура("guid", _ТекущиеДанные.guid));
		Если _Строки.Количество() = 0 Тогда
			Возврат;
		ИначеЕсли ПартииВыбранные.Индекс(_Строки[0]) < ПартииВыбранные.Количество() - 1 Тогда
			ПартииВыбранные.Сдвинуть(ПартииВыбранные.Индекс(_Строки[0]), 1);
			ПеренумероватьВыбранные();
			ЗаполнитьНаСервере();
			Элементы.ПартииСписок.ТекущаяСтрока = ПартииСписок.НайтиСтроки(Новый Структура("guid", _ТекущиеДанные.guid))[0].ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПартииПереместитьВверх(Команда)
	
	_ТекущиеДанные = Элементы.ПартииСписок.ТекущиеДанные;
	
	Если _ТекущиеДанные.Использовать Тогда
		_Строки = ПартииВыбранные.НайтиСтроки(Новый Структура("guid", _ТекущиеДанные.guid));
		Если _Строки.Количество() = 0 Тогда
			Возврат;
		ИначеЕсли ПартииВыбранные.Индекс(_Строки[0]) > 0 Тогда
			ПартииВыбранные.Сдвинуть(ПартииВыбранные.Индекс(_Строки[0]), -1);
			ПеренумероватьВыбранные();
			ЗаполнитьНаСервере();
			Элементы.ПартииСписок.ТекущаяСтрока = ПартииСписок.НайтиСтроки(Новый Структура("guid", _ТекущиеДанные.guid))[0].ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры


&НаКлиенте
Процедура ПартииСписокИспользоватьПриИзменении(Элемент)
	
	_ТекущиеДанные = Элементы.ПартииСписок.ТекущиеДанные;
	
	_ТекущиеДанные.Использовать = _ТекущиеДанные.Использовать
		И ЗначениеЗаполнено(_ТекущиеДанные.guid);
	
	Если _ТекущиеДанные.Использовать Тогда
		_ПартииСтрока = ПартииВыбранные.Добавить();
		ЗаполнитьЗначенияСвойств(_ПартииСтрока, _ТекущиеДанные);
	Иначе
		Для каждого _ПартииСтрока Из ПартииВыбранные.НайтиСтроки(Новый Структура("guid", _ТекущиеДанные.guid)) Цикл
			ПартииВыбранные.Удалить(_ПартииСтрока);
		КонецЦикла;
	КонецЕсли;
	
	Модифицированность = Истина;
	
	ПеренумероватьВыбранные();
	
	ОбновитьИтог();
	
КонецПроцедуры

&НаКлиенте
Процедура ПартииСписокКоличествоПриИзменении(Элемент)
	
	_ТекущиеДанные = Элементы.ПартииСписок.ТекущиеДанные;
	
	_ТекущиеДанные.Использовать = _ТекущиеДанные.Количество > 0;
	
	Если _ТекущиеДанные.Использовать Тогда
		Если _ТекущиеДанные.Количество < 0 Тогда
			_ТекущиеДанные.Количество = 0;
		ИначеЕсли _ТекущиеДанные.Количество > _ТекущиеДанные.КоличествоПартии Тогда
			_ТекущиеДанные.Количество = _ТекущиеДанные.КоличествоПартии;
		КонецЕсли;
		_Коэффициент = ?(_ТекущиеДанные.КоличествоПартии = 0, 0, _ТекущиеДанные.КоличествоМестПартии / _ТекущиеДанные.КоличествоПартии);
		_ТекущиеДанные.КоличествоМест = Окр(_ТекущиеДанные.Количество * _Коэффициент + 0.49999);
		_ПартииСтроки = ПартииВыбранные.НайтиСтроки(Новый Структура("guid", _ТекущиеДанные.guid));
		Если _ПартииСтроки.Количество() = 0 Тогда
			_ПартииСтрока = ПартииВыбранные.Добавить();
			ЗаполнитьЗначенияСвойств(_ПартииСтрока, _ТекущиеДанные);
		Иначе
			_ПартииСтрока = _ПартииСтроки[0];
			_ПартииСтрока.Количество = _ТекущиеДанные.Количество;
			_ПартииСтрока.КоличествоМест = _ТекущиеДанные.КоличествоМест;
		КонецЕсли;
	Иначе
		Для каждого _ПартииСтрока Из ПартииВыбранные.НайтиСтроки(Новый Структура("guid", _ТекущиеДанные.guid)) Цикл
			ПартииВыбранные.Удалить(_ПартииСтрока);
		КонецЦикла;
	КонецЕсли;
	
	Модифицированность = Истина;
	
	ПеренумероватьВыбранные();
	
	ОбновитьИтог();
	
КонецПроцедуры

&НаКлиенте
Процедура ПартииСписокКоличествоМестПриИзменении(Элемент)
	
	//считается автоматически через соотношение
	ПартииСписокКоличествоПриИзменении(Элемент);
	
КонецПроцедуры


&НаКлиенте
Процедура РаспределитьПартии()
	
	_Количество = Количество - ПартииОтправленные.Итог("Количество");
	
	_Структура = Новый Структура("guid");
	
	Для каждого _ПартииСтрока Из ПартииВыбранные Цикл
		
		_Структура.guid = _ПартииСтрока.guid;
		
		Для каждого _ПартииСписокСтрока Из ПартииСписок.НайтиСтроки(_Структура) Цикл
			Если _Количество <= 0 Тогда
				_ПартииСтрока.Количество = 0;
				_Количество = ?(_Количество > 0, _Количество, 0);
			ИначеЕсли _Количество > _ПартииСписокСтрока.КоличествоПартии Тогда
				_ПартииСтрока.Количество = _ПартииСписокСтрока.КоличествоПартии;
				_Количество = ?(_Количество > _ПартииСписокСтрока.КоличествоПартии, _Количество - _ПартииСписокСтрока.КоличествоПартии, 0);
			Иначе
				_ПартииСтрока.Количество = _Количество;
				_Количество = 0;
			КонецЕсли;
			
			_Коэффициент = ?(_ПартииСписокСтрока.КоличествоПартии = 0, 0, _ПартииСписокСтрока.КоличествоМестПартии / _ПартииСписокСтрока.КоличествоПартии);
			
			_ПартииСтрока.КоличествоМест = Окр(_ПартииСтрока.Количество * _Коэффициент + 0.49999);
			
		КонецЦикла;
		
	КонецЦикла;
	
	Для каждого _ПартииСтрока Из ПартииВыбранные.НайтиСтроки(Новый Структура("Количество", 0)) Цикл
		ПартииВыбранные.Удалить(_ПартииСтрока);
	КонецЦикла;
	
	Модифицированность = Истина;
	
	ЗаполнитьНаСервере();
	
	ОбновитьИтог();
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренумероватьВыбранные()
	
	_НомерСтроки = 1;
	Для каждого _Строка Из ПартииВыбранные Цикл
		_Строка.НомерСтроки = _НомерСтроки;
		_НомерСтроки = _НомерСтроки + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИтог()
	
	КоличествоИтог = ПартииВыбранные.Итог("Количество");
	КоличествоМестИтог = ПартииВыбранные.Итог("КоличествоМест");
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьНаСервере()
	
	ПартииСписок.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(_Таблица.guid КАК СТРОКА(36)) КАК guid,
	|	ВЫРАЗИТЬ(_Таблица.Представление КАК СТРОКА) КАК Представление,
	|	ВЫРАЗИТЬ(_Таблица.НомерСтроки КАК ЧИСЛО) КАК НомерСтроки,
	|	ВЫРАЗИТЬ(_Таблица.Количество КАК ЧИСЛО) КАК Количество,
	|	ВЫРАЗИТЬ(_Таблица.КоличествоМест КАК ЧИСЛО) КАК КоличествоМест
	|ПОМЕСТИТЬ ВПартииВыбранные
	|ИЗ
	|	&ПартииВыбранные КАК _Таблица
	|ГДЕ
	|	ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(_Таблица.guid КАК СТРОКА(36)) КАК guid,
	|	ВЫРАЗИТЬ(_Таблица.Количество КАК ЧИСЛО) КАК Количество,
	|	ВЫРАЗИТЬ(_Таблица.КоличествоМест КАК ЧИСЛО) КАК КоличествоМест
	|ПОМЕСТИТЬ ВПартииОтправленные
	|ИЗ
	|	&ПартииОтправленные КАК _Таблица
	|ГДЕ
	|	ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(_Таблица.guid КАК СТРОКА(36)) КАК guid,
	|	ВЫРАЗИТЬ(_Таблица.Количество КАК ЧИСЛО) КАК Количество,
	|	ВЫРАЗИТЬ(_Таблица.КоличествоМест КАК ЧИСЛО) КАК КоличествоМест
	|ПОМЕСТИТЬ ВПартииВыбранныеДругие
	|ИЗ
	|	&ПартииВыбранныеДругие КАК _Таблица
	|ГДЕ
	|	ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	_Партии.guid,
	|	_Партии.entryNumber,
	|	_Партии.updateDate,
	|	_Партии.volume - ЕСТЬNULL(_ВыбранныеДругие.Количество, 0) КАК Количество,
	|	_Партии.packingAmount - ЕСТЬNULL(_ВыбранныеДругие.КоличествоМест, 0) КАК КоличествоМест,
	|	_Партии.SubProduct,
	|	_Партии.ProductItem,
	|	_Партии.Unit КАК ЕдиницаИзмерения,
	|	_Партии.PackingForm КАК Упаковка
	|ПОМЕСТИТЬ ВПартииОстаток
	|ИЗ
	|	РегистрСведений.ВетисStockEntryList КАК _Партии
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВПартииВыбранныеДругие КАК _ВыбранныеДругие
	|		ПО _Партии.guid = _ВыбранныеДругие.guid
	|ГДЕ
	|	ИСТИНА
	|	И _Партии.volume > 0
	|//о1	И _ProductItem.Ссылка = &ProductItem
	|//о2	И _SubProduct.Ссылка = &SubProduct
	|	И _Партии.Enterprise = &Предприятие
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА _Выбранные.Количество ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Использовать,
	|	ЕСТЬNULL(_Выбранные.НомерСтроки, 999999) КАК НомерСтроки,
	| ЕСТЬNULL(_Партии.guid, _Выбранные.guid) КАК guid,
	| _Партии.guid КАК guidПартии,
	| ЕСТЬNULL(_Выбранные.Представление, """") КАК Представление,
	| ЕСТЬNULL(_Партии.updateDate, ДатаВремя(1,1,1)) КАК updateDate,
	| ЕСТЬNULL(_Партии.entryNumber, """") КАК entryNumber,
	|	_Партии.SubProduct,
	|	_Партии.ProductItem,
	| ЕСТЬNULL(_Выбранные.Количество, 0) КАК Количество,
	| ЕСТЬNULL(_Выбранные.КоличествоМест, 0) КАК КоличествоМест,
	|	ЕСТЬNULL(_Отправленные.Количество,0) КАК КоличествоОтправлено,
	|	ЕСТЬNULL(_Отправленные.КоличествоМест,0) КАК КоличествоМестОтправлено,
	|	ЕСТЬNULL(_Партии.Количество, 0) КАК КоличествоПартии,
	|	ЕСТЬNULL(_Партии.КоличествоМест, 0) КАК КоличествоМестПартии
	|ИЗ
	|	ВПартииОстаток КАК _Партии
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВПартииВыбранные КАК _Выбранные
	|		ПО _Партии.guid = _Выбранные.guid
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВПартииОтправленные КАК _Отправленные
	|		ПО ЕСТЬNULL(_Партии.guid, _Выбранные.guid) = _Отправленные.guid
	|ГДЕ
	|	ИСТИНА
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	| updateDate, //сначала старые
	|	_Партии.Количество";
	
	Запрос.УстановитьПараметр("ХозяйствующийСубъект", ХозяйствующийСубъект);
	Запрос.УстановитьПараметр("Предприятие", Предприятие);
	Запрос.УстановитьПараметр("ProductItem", ProductItem);
	Запрос.УстановитьПараметр("SubProduct", SubProduct);
	
	Запрос.УстановитьПараметр("ПартииВыбранные", ПартииВыбранные.Выгрузить());
	Запрос.УстановитьПараметр("ПартииОтправленные", ПартииОтправленные.Выгрузить());
	Запрос.УстановитьПараметр("ПартииВыбранныеДругие", ПартииВыбранныеДругие.Выгрузить());
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "//о2", "");
	
	//сделать: отбор по номенклатуре
	//Если ЗначениеЗаполнено(_ТекущиеДанные.ProductItem) Тогда
	//	Запрос.Текст = СтрЗаменить(Запрос.Текст, "//о1", "");
	//ИначеЕсли ЗначениеЗаполнено(_ТекущиеДанные.SubProduct) Тогда
	//	Запрос.Текст = СтрЗаменить(Запрос.Текст, "//о2", "");
	//Иначе
	//	Возврат;
	//КонецЕсли;
	
	_Результат = Запрос.Выполнить();
	_Выборка = _Результат.Выбрать();
	
	Пока _Выборка.Следующий() Цикл
		
		//если партии нет в остатках
		Если _Выборка.guidПартии = NULL Тогда
			//и если она не отправлена не отображаем эту строку
			Если НЕ _Выборка.КоличествоОтправлено >= 0 Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		_СтрокаПартииСписок = ПартииСписок.Добавить();
		
		ЗаполнитьЗначенияСвойств(_СтрокаПартииСписок, _Выборка);
		
		//сделать: заменить представление на страну, дату выработки, срок годности
		Если ЗначениеЗаполнено(_Выборка.entryNumber) Тогда
			_СтрокаПартииСписок.Представление = _Выборка.entryNumber + " / " + Формат(_Выборка.updateDate, "ДЛФ=D");
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция СформироватьОтвет()
	
	_результат = Новый Массив;
	
	_ПартииВыбранные = ПартииВыбранные.Выгрузить();
	
	_колонки = "";
	Для каждого _колонка Из _ПартииВыбранные.Колонки Цикл
		_колонки = _колонки + ?(_колонки="","",",") + _колонка.Имя;
	КонецЦикла;
	
	Для каждого _ПартииСтрока Из _ПартииВыбранные Цикл
		_результат.Добавить(Новый Структура(_колонки));
		ЗаполнитьЗначенияСвойств(_результат[_результат.ВГраница()], _ПартииСтрока);
	КонецЦикла;
	
	Возврат _результат;
	
КонецФункции

