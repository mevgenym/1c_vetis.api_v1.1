
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаЗаполнитьИзСервиса(Команда)
	
	Перем _Ошибка, _Отказ;
	
	ЗаполнитьИзСервиса(_Отказ, _Ошибка);
	
	Если _Отказ = Истина Тогда
		Сообщить(_Ошибка);
	Иначе
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаДобавитьВСервисе(Команда)
	
	Перем _Отказ, _Ошибка;
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Сообщить("Новый элемент необходимо записать");
		Возврат;
	КонецЕсли;
	
	ModifyProducerStock("Добавить", _Отказ, _Ошибка);
	
	Если _Отказ = Истина Тогда
		Сообщить(_Ошибка);
		Возврат;
	КонецЕсли;
	
	Прочитать();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаИзменитьВСервисе(Команда)
	
	Перем _Отказ, _Ошибка;
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Сообщить("Новый элемент необходимо записать");
		Возврат;
	КонецЕсли;
	
	ModifyProducerStock("Изменить", _Отказ, _Ошибка);
	
	Если _Отказ = Истина Тогда
		Сообщить(_Ошибка);
		Возврат;
	КонецЕсли;
	
	Прочитать();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУдалитьВСервисе(Команда)
	
	Перем _Отказ, _Ошибка;
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Сообщить("Новый элемент необходимо записать");
		Возврат;
	КонецЕсли;
	
	ModifyProducerStock("Удалить", _Отказ, _Ошибка);
	
	Если _Отказ = Истина Тогда
		Сообщить(_Ошибка);
		Возврат;
	КонецЕсли;
	
	Прочитать();
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьИзСервиса(пОтказ, пОшибка)
	
	Если Ветис.Версия_2_0() Тогда
		
		Если ПустаяСтрока(Объект.guid) Тогда
			пОтказ = Истина;
			пОшибка = "Номенклатура не сопоставлена";
			Возврат;
		КонецЕсли;
		
		_ProductItem = ВетисProductService_2_0.GetProductItemByGuid(Объект.guid, пОтказ, пОшибка);
		
		Если пОтказ = Истина Тогда
			Возврат;
		КонецЕсли;
		
	Иначе
		
		Если ПустаяСтрока(Объект.guid) Тогда
			пОтказ = Истина;
			пОшибка = "Номенклатура не сопоставлена";
			Возврат;
		КонецЕсли;
		
		_ProductItem = ВетисProductService.GetProductItemByGuid(Объект.guid, пОтказ, пОшибка);
		
		Если пОтказ = Истина Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	last       = _ProductItem.last;
	active     = _ProductItem.active;
	status     = _ProductItem.status;
	createDate = _ProductItem.createDate;
	updateDate = _ProductItem.updateDate;
	
	_Объект = РеквизитФормыВЗначение("Объект");
	
	_Объект.Заполнить(_ProductItem);
	
	ЗначениеВРеквизитФормы(_Объект, "Объект");
	
КонецПроцедуры

&НаСервере
Процедура ModifyProducerStock(ТипОперации, пОтказ = Ложь, пОшибка = "")
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат
	КонецЕсли;
	
	Если ТипОперации = "Добавить" Тогда
		_Type = ВетисКонстанты.RegisterModificationType_CREATE();
	ИначеЕсли ТипОперации = "Изменить" Тогда
		_Type = ВетисКонстанты.RegisterModificationType_UPDATE();
	ИначеЕсли ТипОперации = "Удалить" Тогда
		_Type = ВетисКонстанты.RegisterModificationType_DELETE();
	КонецЕсли;
	
	_список = Новый Массив;
	_список.Добавить(Объект.Ссылка);
	
	_response = ВетисMercuryApplicationsСлой1с.ModifyProducerStock(_список, _Type, пОтказ, пОшибка);
	
	Если НЕ пОтказ = Истина Тогда
		Для каждого _productItem Из _Response.productItem Цикл
			Если _productItem.last Тогда
				last       = _ProductItem.last;
				active     = _ProductItem.active;
				status     = _ProductItem.status;
				createDate = _ProductItem.createDate;
				updateDate = _ProductItem.updateDate;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры
