
//Импорт: Ветис
//Импорт: ВетисСтроковыеФункции

Процедура Добавить(пТекст, пОперация, пНаправление = Неопределено, пEnterprise = Неопределено, пBusinessEntity = Неопределено, пОбъект = Неопределено, пДлительность = Неопределено, applicationId = Неопределено) Экспорт
	
	_ШаблонСообщения = "ВетисЖурналОпераций.Добавить: Параметр ""%1"" должен иметь тип %2";
	_ТекстСообщения = "";
	
	Если Ложь Тогда
	ИначеЕсли НЕ пНаправление = Неопределено И НЕ ТипЗнч(пНаправление) = Тип("Строка") Тогда
		_ТекстСообщения = ВетисСтроковыеФункции._СтрШаблон(_ШаблонСообщения, "Направление", "Строка");
	ИначеЕсли НЕ пEnterprise = Неопределено И НЕ ТипЗнч(пEnterprise) = Тип("СправочникСсылка.ВетисEnterprise") Тогда
		_ТекстСообщения = ВетисСтроковыеФункции._СтрШаблон(_ШаблонСообщения, "Enterprise", "СправочникСсылка.ВетисEnterprise");
	ИначеЕсли НЕ пBusinessEntity = Неопределено И НЕ ТипЗнч(пBusinessEntity) = Тип("СправочникСсылка.ВетисBusinessEntity") Тогда
		_ТекстСообщения = ВетисСтроковыеФункции._СтрШаблон(_ШаблонСообщения, "BusinessEntity", "СправочникСсылка.ВетисBusinessEntity");
	КонецЕсли;
	
	Если НЕ _ТекстСообщения = "" Тогда
		ВетисОбщегоНазначения.ВывестиСообщение(_ТекстСообщения);
		ВызватьИсключение _ТекстСообщения;
	КонецЕсли;
	
	Если applicationId = Неопределено Тогда
		_applicationId = Новый УникальныйИдентификатор;
	ИначеЕсли ТипЗнч(applicationId) = Тип("Строка") Тогда
		Попытка
			_applicationId = Новый УникальныйИдентификатор(applicationId);
		Исключение
			ВызватьИсключение ВетисСтроковыеФункции._СтрШаблон(_ШаблонСообщения, "УникальныйИдентификатор", "УникальныйИдентификатор или Строка");
		КонецПопытки;
	ИначеЕсли ТипЗнч(applicationId) = Тип("УникальныйИдентификатор") Тогда
		_applicationId = applicationId;
	Иначе
		ВызватьИсключение ВетисСтроковыеФункции._СтрШаблон(_ШаблонСообщения, "УникальныйИдентификатор", "УникальныйИдентификатор или Строка");
	КонецЕсли;
	
	_Период = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
	МенеджерЗаписи = РегистрыСведений.ВетисЖурналОпераций.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.УникальныйИдентификатор = Новый УникальныйИдентификатор;
	МенеджерЗаписи.Период        = ТекущаяДатаСеанса();
	МенеджерЗаписи.Миллисекунды  = _Период % 1000;
	МенеджерЗаписи.Длительность  = пДлительность;
	МенеджерЗаписи.Представление = Лев(пТекст, 100);
	МенеджерЗаписи.Хранилище     = Новый ХранилищеЗначения(пТекст, Новый СжатиеДанных(9));
	МенеджерЗаписи.Пользователь  = Ветис.ТекущийПользователь();
	МенеджерЗаписи.Версия        = Ветис.Версия();
	МенеджерЗаписи.BusinessEntity= пBusinessEntity;
	МенеджерЗаписи.Enterprise    = пEnterprise;
	МенеджерЗаписи.Объект        = пОбъект;
	МенеджерЗаписи.Направление   = Перечисления.ВетисНаправлениеОперации[пНаправление];
	МенеджерЗаписи.applicationId = _applicationId;
	МенеджерЗаписи.Операция      = Ветис.ОперацияПоИмени(пОперация);
	
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

Процедура Очистить() Экспорт
	
	нз = РегистрыСведений.ВетисЖурналОпераций.СоздатьНаборЗаписей();
	нз.Записать();
	
КонецПроцедуры
