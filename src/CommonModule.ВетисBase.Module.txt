
// тип, описывающий параметры запрашиваемого у сервиса списка объектов
Функция ListOptions(Count = Неопределено, Offset = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисBase_2_0.ListOptions(Count, Offset);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисBase_2_0.ListOptions(Count, Offset);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисBase_1_4.ListOptions(Count, Offset);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

// тип, описывающий дату и время
// преобразует дату 1с в xd и обратно
Функция ComplexDate(Object, Hour = Ложь) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисBase_1_4.ComplexDate(Object, Hour);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

//Тип, описывающий интервал дат. 
//Параметры:
// beginDate - Начальная дата интервала xs:dateTime
// endDate - Конечная дата интервала xs:dateTime
Функция DateInterval(BeginDate = Неопределено, EndDate = Неопределено) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисBase_2_0.DateInterval(BeginDate, EndDate);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисBase_2_0.DateInterval(BeginDate, EndDate);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисBase_1_4.DateInterval(BeginDate, EndDate);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

// тип, описывающий тип операции на изменение реестра
Функция RegisterModificationType(Type) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисBase_2_0.RegisterModificationType(Type);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисBase_2_0.RegisterModificationType(Type);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисBase_1_4.RegisterModificationType(Type);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции


Функция Создать(Name, Factory = Неопределено) Экспорт
	
	Возврат ВетисОбщегоНазначения.Создать(Name, URI(), Factory);
	
КонецФункции

Функция ServiceURI() Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисBase_2_0.ServiceURI();
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисBase_2_0.ServiceURI();
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисBase_1_4.ServiceURI();
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

Функция URI() Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисBase_2_0.URI();
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисBase_2_0.URI();
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисBase_1_4.URI();
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

