
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НастроитьУсловноеОформление();
	
	Элементы.uuid.Видимость = Ветис.Настройки_ПоказыватьGuid();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаАннулировать(Команда)
	
	_ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если _ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	_Причина = "";
	
	//Если НЕ ВвестиСтроку(_Причина, "Причина аннулирования " + _ТекущиеДанные.Ссылка) Тогда
	//	Возврат;
	//КонецЕсли;
	
	//ВетисMercuryVetdocumentСлой1с.Аннулировать(_ТекущиеДанные.Ссылка, _Причина);
	
	Элементы.Список.Обновить();
	
КонецПроцедуры


&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	_ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если _ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ФормаАннулировать.Доступность =  ЗначениеЗаполнено(_ТекущиеДанные.uuid)
		И _ТекущиеДанные.Тип = ПредопределенноеЗначение("Перечисление.ВетисVetDocumentType.Транспортный")
		И _ТекущиеДанные.Статус = ПредопределенноеЗначение("Перечисление.ВетисVetDocumentStatus.Оформлен");
	
КонецПроцедуры


&НаСервере
Процедура НастроитьУсловноеОформление()
	
	НастроитьУсловноеОформлениеДобавить(Новый Цвет(255, 255, 153), "Оформлен", "Транспортный");
	НастроитьУсловноеОформлениеДобавить(Новый Цвет(204, 255, 255), "Оформлен", "Возвратный");
	НастроитьУсловноеОформлениеДобавить(WebЦвета.Розовый, "Аннулирован");
	НастроитьУсловноеОформлениеДобавить(Новый Цвет(204, 255, 204), "Погашен");
	
КонецПроцедуры

&НаСервере
Процедура НастроитьУсловноеОформлениеДобавить(пЦвет, пСтатус = Неопределено, пТип = Неопределено)
	
	_уо = УсловноеОформление.Элементы.Добавить();
	
	_уо.Использование = Истина;
	
	_уо.Оформление.УстановитьЗначениеПараметра("ЦветФона", пЦвет);
	
	Если НЕ пСтатус = Неопределено Тогда
		_отбор = _уо.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		_отбор.Использование = Истина;
		_отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.Статус");
		_отбор.ПравоеЗначение = Перечисления.ВетисVetDocumentStatus[пСтатус];
	КонецЕсли;
	
	Если НЕ пТип = Неопределено Тогда
		_отбор = _уо.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		_отбор.Использование = Истина;
		_отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.Тип");
		_отбор.ПравоеЗначение = Перечисления.ВетисVetDocumentType[пТип];
	КонецЕсли;
	
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "Дата");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "Номер");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "ДатаВСД");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "НомерВСД");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "Отправитель");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "ОтправительПредприятие");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "Получатель");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "ПолучательПредприятие");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "ProductItemName");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "ДатаВыработки");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "СрокГодности");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "СтранаПроисхождения");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "Производитель");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "Количество");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "Тип");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "uuid");
	
КонецПроцедуры

Процедура НастроитьУсловноеОформлениеДобавитьПоле(пУО, пИмяПоля)
	
	_поле = пУО.Поля.Элементы.Добавить();
	_поле.Использование = Истина;
	_поле.Поле = Новый ПолеКомпоновкиДанных(пИмяПоля);
	
КонецПроцедуры
