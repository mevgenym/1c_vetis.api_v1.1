
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Расшифровка = ТекущийОбъект.Хранилище.Получить();
	
	Если ПустаяСтрока(Расшифровка) Тогда
		Расшифровка = ТекущийОбъект.Представление;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	applicationId = Запись.applicationId;
	
	Если ЗначениеЗаполнено(Запись.applicationId) Тогда
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	_Таблица.Направление, _Таблица.Представление,
		|	_Таблица.Хранилище
		|ИЗ
		|	РегистрСведений.ВетисЖурналОпераций КАК _Таблица
		|ГДЕ
		|	ИСТИНА
		|	И _Таблица.applicationId = &applicationId");
		
		Запрос.УстановитьПараметр("applicationId", Запись.applicationId);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Если Выборка.Направление = Перечисления.ВетисНаправлениеОперации.Запрос Тогда
				Расшифровка = Выборка.Хранилище.Получить();
				Если ПустаяСтрока(Расшифровка) Тогда
					Расшифровка = Выборка.Представление;
				КонецЕсли;
			ИначеЕсли Выборка.Направление = Перечисления.ВетисНаправлениеОперации.Ответ Тогда
				РасшифровкаОтвет = Выборка.Хранилище.Получить();
				Если ПустаяСтрока(РасшифровкаОтвет) Тогда
					РасшифровкаОтвет = Выборка.Представление;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаВыполнить(Команда)
	
	Перем _отказ, _Ошибка;
	
	РасшифровкаТест = "";
	
	_Ответ = КомандаВыполнитьНаСервере(Расшифровка, Запись.BusinessEntity, _отказ, _Ошибка);
	
	Если _отказ = Истина Тогда
		Сообщить(_Ошибка);
	Иначе
		РасшифровкаТест = _Ответ;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция КомандаВыполнитьНаСервере(пТекстЗапроса, issuerId, пОтказ, пОшибка)
	
	//_Ответ = Ветис.ОтправитьЗапрос(пТекстЗапроса, issuerId);
	_Ответ = Ветис.ВыполнитьТекстЗапроса(пТекстЗапроса, issuerId);
	
	пОтказ = _Ответ.Отказ;
	
	пОшибка = _Ответ.ТекстОшибки;
	
	Возврат _Ответ.ТекстОтвета;
	
КонецФункции

&НаКлиенте
Процедура applicationId1ПриИзменении(Элемент)
	
	Запись.applicationId = Новый УникальныйИдентификатор(applicationId);
	
	Записать();
	
КонецПроцедуры
