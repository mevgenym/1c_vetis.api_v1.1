
// Тип, описывающий товарно-транспортную накладную.
Функция Waybill() Экспорт
	
	_Объект = Создать("Waybill");
	
	Возврат _Объект;
	
КонецФункции

Функция TransportInfo(transportType, transportNumber) Экспорт
	
	_Объект = Создать("TransportInfo");
	
	_Объект.transportType   = transportType;  //Тип транспортного средства.
	_Объект.transportNumber = transportNumber;//Номера транспортного средства.
	
	Возврат _Объект;
	
КонецФункции

Функция TransportNumber() Экспорт
	
	_Объект = Создать("TransportNumber");
	
	Возврат _Объект;
	
КонецФункции

#Область transportType
// Тип, описывающий тип транспорта.

Функция TransportTypeОписание(value) Экспорт
	
	Если      value = 1 ИЛИ value = "1" Тогда
		Возврат "Автомобильный";
	ИначеЕсли value = 2 ИЛИ value = "2" Тогда
		Возврат "Железнодорожный";
	ИначеЕсли value = 3 ИЛИ value = "3" Тогда
		Возврат "Авиатранспортный";
	ИначеЕсли value = 4 ИЛИ value = "4" Тогда
		Возврат "Морской (контейнер)";
	ИначеЕсли value = 5 ИЛИ value = "5" Тогда
		Возврат "Морской (трюм)";
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция TransportTypeСписок() Экспорт
	
	_Список = Новый СписокЗначений();
	
	Для _Индекс = 1 По 5 Цикл
		_Список.Добавить(_Индекс, TransportTypeОписание(_Индекс));
	КонецЦикла;
	
	Возврат _Список;
	
КонецФункции

#КонецОбласти

#Область TransportationStorageType
// Тип, описывающий cпособ хранения при перевозке.

Функция TransportationStorageType(value) Экспорт
	
	Если      value = 1 Тогда
		Возврат ВетисКонстанты.TransportationStorageType_FROZEN();
	ИначеЕсли value = 2 Тогда
		Возврат ВетисКонстанты.TransportationStorageType_CHILLED();
	ИначеЕсли value = 3 Тогда
		Возврат ВетисКонстанты.TransportationStorageType_COOLED();
	ИначеЕсли value = 4 Тогда
		Возврат ВетисКонстанты.TransportationStorageType_VENTILATED();
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция TransportationStorageTypeОписание(value) Экспорт
	
	Если      value = ВетисКонстанты.TransportationStorageType_FROZEN()  ИЛИ value = 1 Тогда
		Возврат "Замороженные";
	ИначеЕсли value = ВетисКонстанты.TransportationStorageType_CHILLED() ИЛИ value = 2 Тогда
		Возврат "Охлажденные";
	ИначеЕсли value = ВетисКонстанты.TransportationStorageType_COOLED()  ИЛИ value = 3 Тогда
		Возврат "Охлаждаемые";
	ИначеЕсли value = ВетисКонстанты.TransportationStorageType_VENTILATED() ИЛИ value = 4 Тогда
		Возврат "Вентилируемые";
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция TransportationStorageTypeСписок() Экспорт
	
	_Список = Новый СписокЗначений();
	
	Для _Индекс = 1 По 4 Цикл
		_Список.Добавить(TransportationStorageType(_Индекс), TransportationStorageTypeОписание(_Индекс));
	КонецЦикла;
	
	Возврат _Список;
	
КонецФункции

#КонецОбласти

#Область WaybillType
// Тип, описывающий тип товарно-транспортной накладной.

Функция WaybillTypeОписание(value, ПоУмолчанию = Неопределено) Экспорт
	
	Если      value = 1 ИЛИ value = "1" Тогда
		Возврат "Товарно-транспортная накладная";
	ИначеЕсли value = 2 ИЛИ value = "2" Тогда
		Возврат "Коносамент";
	ИначеЕсли value = 3 ИЛИ value = "3" Тогда
		Возврат "CMR";
	ИначеЕсли value = 4 ИЛИ value = "4" Тогда
		Возврат "Авианакладная";
	Иначе
		Возврат ПоУмолчанию;
	КонецЕсли;
	
КонецФункции

Функция WaybillTypeСписок() Экспорт
	
	_Список = Новый СписокЗначений();
	
	Для _Индекс = 1 По 4 Цикл
		_Список.Добавить(_Индекс, WaybillTypeОписание(_Индекс));
	КонецЦикла;
	
	Возврат _Список;
	
КонецФункции

#КонецОбласти


Функция Создать(пИмя, пФабрика = Неопределено) Экспорт
	
	Возврат ВетисОбщегоНазначения.Создать(пИмя, URI(), пФабрика);
	
КонецФункции

Функция URI() Экспорт
	
	Возврат "http://api.vetrf.ru/schema/cdm/argus/shipment";
	
КонецФункции

