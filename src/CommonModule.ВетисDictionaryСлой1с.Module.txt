
Функция AnimalDisease(value, ПоУмолчанию = Неопределено) Экспорт
	
	Если value = Неопределено Тогда
		Возврат Неопределено;
	ИначеЕсли ТипЗнч(value) = Тип("СправочникСсылка.ВетисAnimalDisease") Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(value, ПоУмолчанию);
	Иначе
		_ЭтоОбъект = ТипЗнч(value) = Тип("ОбъектXDTO") ИЛИ ТипЗнч(value) = Тип("Структура");
		_guid = ?(_ЭтоОбъект, value.guid, value);
		Если ПустаяСтрока(_guid) Тогда
			Возврат ПоУмолчанию;
		КонецЕсли;
		_Значение = Ветис.Соответствие_ПолучитьСсылку(_guid, "Справочник.ВетисAnimalDisease", Неопределено);
		Если _Значение = Неопределено Тогда
			//создаем автоматически
			Если _ЭтоОбъект И НЕ ПустаяСтрока(value.name) Тогда
				//по справочнику не ищем, считаем что если нет соответствия, то нет и в справочнике
				//но по хорошему надо искать
				//_Элемент = Справочники.ВетисAnimalDisease.НайтиПоНаименованию(value.name);
				_Элемент = Справочники.ВетисAnimalDisease.СоздатьЭлемент();
				_Элемент.Наименование = value.name;
				Попытка
					_Элемент.Записать();
					Ветис.Соответствие_Добавить(_Элемент.Ссылка, value.guid, value.name);
					ВетисОбщегоНазначения.ВывестиСообщение("+ " + СокрЛП(value.name), "Ветис.AnimalDisease");
					Возврат _Элемент.Ссылка;
				Исключение
					ВетисОбщегоНазначения.ВывестиСообщениеОбОшибке(ИнформацияОбОшибке(), "Ветис.AnimalDisease");
					Возврат ПоУмолчанию;
				КонецПопытки;
			Иначе
				Возврат ПоУмолчанию;
			КонецЕсли;
		Иначе
			Возврат _Значение;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция BusinessEntity(value, ПоУмолчанию = Неопределено) Экспорт
	
	Возврат conv(value, "ВетисBusinessEntity", "ВетисEnterpriseService_2_0", "GetBusinessEntityByGuid", "GetBusinessEntityByUuid", ПоУмолчанию);
	
КонецФункции

Функция District(value, ПоУмолчанию = Неопределено) Экспорт
	
	Возврат conv(value, "ВетисDistrict", "ВетисIkarService_2_0", "GetDistrictByGuid", "GetDistrictByUuid", ПоУмолчанию);
	
КонецФункции

Функция Country(value, ПоУмолчанию = Неопределено) Экспорт
	
	Возврат conv(value, "ВетисCountry", "ВетисIkarService_2_0", "GetCountryByGuid", "GetCountryByUuid", ПоУмолчанию);
	
КонецФункции

Функция Enterprise(value, ПоУмолчанию = Неопределено) Экспорт
	
	Возврат conv(value, "ВетисEnterprise", "ВетисEnterpriseService_2_0", "GetEnterpriseByGuid", "GetEnterpriseByUuid", ПоУмолчанию);
	
КонецФункции

Функция EnterpriseActivity(value, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(value) = Тип("СправочникСсылка.ВетисEnterpriseActivity") Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(value, ПоУмолчанию);
	ИначеЕсли ТипЗнч(value) = Тип("ОбъектXDTO") Тогда
		Возврат Ветис.Соответствие_ПолучитьСсылку(value, "Справочник.ВетисEnterpriseActivity", ПоУмолчанию);
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(value, "Справочник.ВетисEnterpriseActivity", ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция IncorporationForm(value, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(value) = Тип("СправочникСсылка.ВетисIncorporationForm") Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(value, ПоУмолчанию);
	ИначеЕсли ТипЗнч(value) = Тип("ОбъектXDTO") Тогда
		Возврат Ветис.Соответствие_ПолучитьСсылку(value, "Справочник.ВетисIncorporationForm", ПоУмолчанию);
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(value, "Справочник.ВетисIncorporationForm", ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция Locality(value, ПоУмолчанию = Неопределено) Экспорт
	
	//так не получится, потому что нет операции GetLocalityByGuid
	//Возврат conv(value, "ВетисLocality", "ВетисIkarService_2_0", "GetLocalityByGuid", "GetLocalityByUuid", ПоУмолчанию);
	
	Если ТипЗнч(value) = Тип("СправочникСсылка.ВетисLocality") Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(value, ПоУмолчанию);
	ИначеЕсли ТипЗнч(value) = Тип("ОбъектXDTO") Тогда
		Возврат Ветис.Соответствие_ПолучитьСсылку(value, "Справочник.ВетисLocality", ПоУмолчанию);
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(value, "Справочник.ВетисLocality", ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция Package(value, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(value) = Тип("СправочникСсылка.ВетисPackingForm") Тогда
		//вызывать надо PackingType
		Возврат Ветис.Соответствие_ПолучитьGuid(value, ПоУмолчанию);
	ИначеЕсли ТипЗнч(value) = Тип("ОбъектXDTO") Тогда //packingType
		Возврат Ветис.Соответствие_ПолучитьСсылку(value.PackingType, "Справочник.ВетисPackingForm", ПоУмолчанию);
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(value, "Справочник.ВетисPackingForm", ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция PackageList(value, пУровень = Неопределено, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(value) = Тип("СправочникСсылка.ВетисPackingForm") Тогда
		//вызывать надо PackingType
		Возврат Ветис.Соответствие_ПолучитьGuid(value, ПоУмолчанию);
	ИначеЕсли ТипЗнч(value) = Тип("ОбъектXDTO") Тогда
		Если НЕ value.Свойства().Получить("package") = Неопределено
		И ТипЗнч(value.package) = Тип("СписокXDTO")
		И value.package.Количество() > 0 Тогда
			Если пУровень = Неопределено Тогда
				//берем последний
				Возврат value.package[value.package.Количество()-1];
			Иначе
				Для каждого _package Из value.package Цикл
					Если _package.level = пУровень Тогда
						Возврат _package;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		Иначе
			Возврат ВетисDictionary_2_0.Package();
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция PackingType(value, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(value) = Тип("СправочникСсылка.ВетисPackingForm") Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(value, ПоУмолчанию);
	ИначеЕсли ТипЗнч(value) = Тип("ОбъектXDTO") Тогда
		Если НЕ ПустаяСтрока(value.globalID) Тогда
			_Значение = Справочники.ВетисPackingForm.НайтиПоРеквизиту("globalID", value.globalID);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(_Значение) И НЕ ПустаяСтрока(value.guid) Тогда
			Возврат Ветис.Соответствие_ПолучитьСсылку(value, "Справочник.ВетисPackingForm", ПоУмолчанию);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(_Значение)  Тогда
			Возврат _Значение;
		Иначе
			Возврат ПоУмолчанию;
		КонецЕсли;
		
	Иначе
		Если СтрДлина(value) = 2 Тогда //считаем что это globalID
			_Значение = Справочники.ВетисPackingForm.НайтиПоРеквизиту("globalID", value);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(_Значение) И НЕ ПустаяСтрока(value) Тогда
			Возврат Ветис.Соответствие_ПолучитьСсылку(value, "Справочник.ВетисPackingForm", ПоУмолчанию);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(_Значение)  Тогда
			Возврат _Значение;
		Иначе
			Возврат ПоУмолчанию;
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

Функция Producer(value, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(value) = Тип("СправочникСсылка.ВетисEnterprise") Тогда
		Возврат Enterprise(value, ПоУмолчанию);
	ИначеЕсли ТипЗнч(value) = Тип("СписокXDTO") Тогда
		_список = Новый Массив;
		Для каждого _Значение Из value Цикл
			_список.Добавить(Producer(_Значение));
		КонецЦикла;
		Возврат _список;
	ИначеЕсли ТипЗнч(value) = Тип("ОбъектXDTO") Тогда
		Если НЕ value.Свойства().Получить("guid") = Неопределено Тогда
			Возврат Enterprise(value.guid, ПоУмолчанию);
		ИначеЕсли НЕ value.Свойства().Получить("enterprise") = Неопределено Тогда
			Возврат Enterprise(value.enterprise, ПоУмолчанию);
		ИначеЕсли НЕ value.Свойства().Получить("producer") = Неопределено И ТипЗнч(value.producer) = Тип("СписокXDTO") И value.producer.Количество() > 0 Тогда
			Возврат Enterprise(value.producer[0].enterprise.guid, ПоУмолчанию);
		КонецЕсли;
	Иначе
		Возврат Enterprise(value, ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция Product(value, ПоУмолчанию = Неопределено) Экспорт
	
	Возврат conv(value, "ВетисProduct", "ВетисProductService_2_0", "GetProductByGuid", "GetProductByUuid", ПоУмолчанию);
	
КонецФункции

Функция ProductMarks(value, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(value) = Тип("Структура") Тогда
		Возврат ВетисDictionary_2_0.ProductMarks(value.Значение, ProductMarkingClass(value.Класс));
	ИначеЕсли ТипЗнч(value) = Тип("СписокXDTO") Тогда
		Если value.Количество() = 0 Тогда
			Возврат Новый Структура("content,class");
		Иначе
			Для каждого _Строка Из value Цикл
				Возврат Новый Структура("content,class",_Строка.__content, ProductMarkingClass(_Строка.class));
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция Purpose(value, ПоУмолчанию = Неопределено) Экспорт
	
	Возврат conv(value, "ВетисPurpose", "ВетисDictionaryService_2_0", "GetPurposeByGuid", "GetPurposeByUuid", ПоУмолчанию);
	
КонецФункции

Функция ProductItem(value, ПоУмолчанию = Неопределено) Экспорт
	
	Возврат conv(value, "ВетисProductItem", "ВетисProductService_2_0", "GetProductItemByGuid", "GetProductItemByUuid", ПоУмолчанию);
	
КонецФункции

Функция ProductItemProducing(value, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(value) = Тип("СправочникСсылка.ВетисEnterprise") Тогда
		Возврат Enterprise(value, ПоУмолчанию);
	ИначеЕсли ТипЗнч(value) = Тип("СписокXDTO") Тогда
		Для каждого _Значение Из value Цикл
			Возврат ProductItemProducing(_Значение);
		КонецЦикла;
	Иначе
		Возврат Enterprise(value, ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция Region(value, ПоУмолчанию = Неопределено) Экспорт
	
	Возврат conv(value, "ВетисRegion", "ВетисIkarService_2_0", "GetRegionByGuid", "GetRegionByUuid", ПоУмолчанию);
	
КонецФункции

Функция RegionalizationCondition(value, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(value) = Тип("СправочникСсылка.ВетисRegionalizationCondition") Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(value, ПоУмолчанию);
	ИначеЕсли ТипЗнч(value) = Тип("ОбъектXDTO") Тогда
		Возврат Ветис.Соответствие_ПолучитьСсылку(value, "Справочник.ВетисRegionalizationCondition", ПоУмолчанию);
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(value, "Справочник.ВетисRegionalizationCondition", ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция SubProduct(value, ПоУмолчанию = Неопределено) Экспорт
	
	Возврат conv(value, "ВетисSubProduct", "ВетисProductService_2_0", "GetSubProductByGuid", "GetSubProductByUuid", ПоУмолчанию);
	
КонецФункции

Функция Unit(value, ПоУмолчанию = Неопределено) Экспорт
	
	Возврат conv(value, "ВетисUnit", "ВетисDictionaryService_2_0", "GetUnitByGuid", "GetUnitByUuid", ПоУмолчанию);
	
КонецФункции


Функция BusinessEntityType(value, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисBusinessEntityType") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисBusinessEntityType.ЮрЛицо") Тогда
			Возврат ВетисКонстанты.BusinessEntityType_JURIDICAL();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисBusinessEntityType.ФизЛицо") Тогда
			Возврат ВетисКонстанты.BusinessEntityType_PHYSICAL();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисBusinessEntityType.ИП") Тогда
			Возврат ВетисКонстанты.BusinessEntityType_SELF_EMPLOYED();
		Иначе
			Возврат ПоУмолчанию;
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.BusinessEntityType_JURIDICAL() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисBusinessEntityType.ЮрЛицо");
		ИначеЕсли value = ВетисКонстанты.BusinessEntityType_PHYSICAL() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисBusinessEntityType.ФизЛицо");
		ИначеЕсли value = ВетисКонстанты.BusinessEntityType_SELF_EMPLOYED() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисBusinessEntityType.ИП");
		Иначе
			Возврат ПоУмолчанию;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция DocumentNature(value) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисDocumentNature") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисDocumentNature.ELECTRONIC") Тогда
			Возврат ВетисКонстанты.DocumentNature_ELECTRONIC();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисDocumentNature.PAPER") Тогда
			Возврат ВетисКонстанты.DocumentNature_PAPER();
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.DocumentNature_ELECTRONIC() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentNature.ELECTRONIC");
		ИначеЕсли value = ВетисКонстанты.DocumentNature_PAPER() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentNature.PAPER");
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция DocumentType(value) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисDocumentType") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисDocumentType.ТовароТранспортнаяНакладная") Тогда
			Возврат ВетисКонстанты.DocumentType_ТоварноТранспортнаяНакладная();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисDocumentType.Коносамент") Тогда
			Возврат ВетисКонстанты.DocumentType_Коносамент();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисDocumentType.CMR") Тогда
			Возврат ВетисКонстанты.DocumentType_CMR();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисDocumentType.Авианакладная") Тогда
			Возврат ВетисКонстанты.DocumentType_Авианакладная();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисDocumentType.ТранспортнаяНакладная") Тогда
			Возврат ВетисКонстанты.DocumentType_ТранспортнаяНакладная();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисDocumentType.ТОРГ12") Тогда
			Возврат ВетисКонстанты.DocumentType_ТОРГ12();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисDocumentType.ВетеринарноеРазрешениеНаИмпортПродукцииНаТерриториюТС") Тогда
			Возврат ВетисКонстанты.DocumentType_ВетеринарноеРазрешениеНаИмпортПродукцииНаТерриториюТС();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисDocumentType.РазрешениеВетеринарногоУправленияСубъектаСтраныТСНаВвозПродукции") Тогда
			Возврат ВетисКонстанты.DocumentType_РазрешениеВетеринарногоУправленияСубъектаСтраныТСНаВвозПродукции();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисDocumentType.АктОтбораПробыНаИсследование") Тогда
			Возврат ВетисКонстанты.DocumentType_АктОтбораПробыНаИсследование();
		Иначе
			Возврат ВетисКонстанты.DocumentType_ТоварноТранспортнаяНакладная();
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.DocumentType_ТоварноТранспортнаяНакладная() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentType.ТовароТранспортнаяНакладная");
		ИначеЕсли value = ВетисКонстанты.DocumentType_Коносамент() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentType.Коносамент");
		ИначеЕсли value = ВетисКонстанты.DocumentType_CMR() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentType.CMR");
		ИначеЕсли value = ВетисКонстанты.DocumentType_Авианакладная() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentType.Авианакладная");
		ИначеЕсли value = ВетисКонстанты.DocumentType_ТранспортнаяНакладная() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentType.ТранспортнаяНакладная");
		ИначеЕсли value = ВетисКонстанты.DocumentType_ТОРГ12() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentType.ТОРГ12");
		ИначеЕсли value = ВетисКонстанты.DocumentType_ВетеринарноеРазрешениеНаИмпортПродукцииНаТерриториюТС() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentType.ВетеринарноеРазрешениеНаИмпортПродукцииНаТерриториюТС");
		ИначеЕсли value = ВетисКонстанты.DocumentType_РазрешениеВетеринарногоУправленияСубъектаСтраныТСНаВвозПродукции() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentType.РазрешениеВетеринарногоУправленияСубъектаСтраныТСНаВвозПродукции");
		ИначеЕсли value = ВетисКонстанты.DocumentType_АктОтбораПробыНаИсследование() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentType.АктОтбораПробыНаИсследование");
		Иначе
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentType.ТовароТранспортнаяНакладная");
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция ProductType(value, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(value) = Тип("СправочникСсылка.ВетисProductType") Тогда
		Если      value = ПредопределенноеЗначение("Справочник.ВетисProductType.МясоИМясопродукты") Тогда
			Возврат ВетисКонстанты.ProductType_МясоИМясопродукты();
		ИначеЕсли value = ПредопределенноеЗначение("Справочник.ВетисProductType.КормаИКормовыеДобавки") Тогда
			Возврат ВетисКонстанты.ProductType_КормаИКормовыеДобавки();
		ИначеЕсли value = ПредопределенноеЗначение("Справочник.ВетисProductType.ЖивыеЖивотные") Тогда
			Возврат ВетисКонстанты.ProductType_ЖивыеЖивотные();
		ИначеЕсли value = ПредопределенноеЗначение("Справочник.ВетисProductType.ЛекарственныеСредства") Тогда
			Возврат ВетисКонстанты.ProductType_ЛекарственныеСредства();
		ИначеЕсли value = ПредопределенноеЗначение("Справочник.ВетисProductType.ПищевыеПродукты") Тогда
			Возврат ВетисКонстанты.ProductType_ПищевыеПродукты();
		ИначеЕсли value = ПредопределенноеЗначение("Справочник.ВетисProductType.НепищевыеПродуктыИДругое") Тогда
			Возврат ВетисКонстанты.ProductType_НепищевыеПродуктыИДругое();
		ИначеЕсли value = ПредопределенноеЗначение("Справочник.ВетисProductType.РыбаИМорепродукты") Тогда
			Возврат ВетисКонстанты.ProductType_РыбаИМорепродукты();
		ИначеЕсли value = ПредопределенноеЗначение("Справочник.ВетисProductType.ПродукцияНеТребующаяРазрешения") Тогда
			Возврат ВетисКонстанты.ProductType_ПродукцияНеТребующаяРазрешения();
		Иначе
			Возврат ПоУмолчанию;
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.ProductType_МясоИМясопродукты() Тогда
			Возврат ПредопределенноеЗначение("Справочник.ВетисProductType.МясоИМясопродукты");
		ИначеЕсли value = ВетисКонстанты.ProductType_КормаИКормовыеДобавки() Тогда
			Возврат ПредопределенноеЗначение("Справочник.ВетисProductType.КормаИКормовыеДобавки");
		ИначеЕсли value = ВетисКонстанты.ProductType_ЖивыеЖивотные() Тогда
			Возврат ПредопределенноеЗначение("Справочник.ВетисProductType.ЖивыеЖивотные");
		ИначеЕсли value = ВетисКонстанты.ProductType_ЛекарственныеСредства() Тогда
			Возврат ПредопределенноеЗначение("Справочник.ВетисProductType.ЛекарственныеСредства");
		ИначеЕсли value = ВетисКонстанты.ProductType_ПищевыеПродукты() Тогда
			Возврат ПредопределенноеЗначение("Справочник.ВетисProductType.ПищевыеПродукты");
		ИначеЕсли value = ВетисКонстанты.ProductType_НепищевыеПродуктыИДругое() Тогда
			Возврат ПредопределенноеЗначение("Справочник.ВетисProductType.НепищевыеПродуктыИДругое");
		ИначеЕсли value = ВетисКонстанты.ProductType_РыбаИМорепродукты() Тогда
			Возврат ПредопределенноеЗначение("Справочник.ВетисProductType.РыбаИМорепродукты");
		ИначеЕсли value = ВетисКонстанты.ProductType_ПродукцияНеТребующаяРазрешения() Тогда
			Возврат ПредопределенноеЗначение("Справочник.ВетисProductType.ПродукцияНеТребующаяРазрешения");
		Иначе
			Возврат ПоУмолчанию;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция TransportType(value) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисTransportType") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисTransportType.Автомобильный") Тогда
			Возврат ВетисКонстанты.TransportType_Автомобильный();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисTransportType.Железнодорожный") Тогда
			Возврат ВетисКонстанты.TransportType_Железнодорожный();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисTransportType.Авиатранспорт") Тогда
			Возврат ВетисКонстанты.TransportType_Авиатранспортный();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисTransportType.МорскойКонтейнер") Тогда
			Возврат ВетисКонстанты.TransportType_МорскойКонтейнер();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисTransportType.МорскойТрюм") Тогда
			Возврат ВетисКонстанты.TransportType_МорскойТрюм();
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.TransportType_Автомобильный() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportType.Автомобильный");
		ИначеЕсли value = ВетисКонстанты.TransportType_Железнодорожный() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportType.Железнодорожный");
		ИначеЕсли value = ВетисКонстанты.TransportType_Авиатранспортный() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportType.Авиатранспорт");
		ИначеЕсли value = ВетисКонстанты.TransportType_МорскойКонтейнер() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportType.МорскойКонтейнер");
		ИначеЕсли value = ВетисКонстанты.TransportType_МорскойТрюм() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportType.МорскойТрюм");
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция TransportationStorageType(value) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисTransportStorageType") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисTransportStorageType.Замороженные") Тогда
			Возврат ВетисКонстанты.TransportationStorageType_FROZEN();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисTransportStorageType.Охлажденные") Тогда
			Возврат ВетисКонстанты.TransportationStorageType_CHILLED();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисTransportStorageType.Охлаждаемые") Тогда
			Возврат ВетисКонстанты.TransportationStorageType_COOLED();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисTransportStorageType.Вентилируемые") Тогда
			Возврат ВетисКонстанты.TransportationStorageType_VENTILATED();
		Иначе
			Возврат ВетисКонстанты.TransportationStorageType_FROZEN();
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.TransportationStorageType_FROZEN() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportStorageType.Замороженные");
		ИначеЕсли value = ВетисКонстанты.TransportationStorageType_CHILLED() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportStorageType.Охлажденные");
		ИначеЕсли value = ВетисКонстанты.TransportationStorageType_COOLED() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportStorageType.Охлаждаемые");
		ИначеЕсли value = ВетисКонстанты.TransportationStorageType_VENTILATED() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportStorageType.Вентилируемые");
		Иначе
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportStorageType.Замороженные");
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция RegionalizationDecision(value) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисRegionalizationDecision") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисRegionalizationDecision.Разрешено") Тогда
			Возврат ВетисКонстанты.RegionalizationDecision_Разрешено();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисRegionalizationDecision.РазрешеноУсловно") Тогда
			Возврат ВетисКонстанты.RegionalizationDecision_РазрешеноУсловно();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисRegionalizationDecision.Запрещено") Тогда
			Возврат ВетисКонстанты.RegionalizationDecision_Запрещено();
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.RegionalizationDecision_Разрешено() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисRegionalizationDecision.Разрешено");
		ИначеЕсли value = ВетисКонстанты.RegionalizationDecision_РазрешеноУсловно() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисRegionalizationDecision.РазрешеноУсловно");
		ИначеЕсли value = ВетисКонстанты.RegionalizationDecision_Запрещено() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисRegionalizationDecision.Запрещено");
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция ResearchResult(value) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисResearchResult") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисResearchResult.UNKNOWN") Тогда
			Возврат ВетисКонстанты.ResearchResult_UNKNOWN();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисResearchResult.POSITIVE") Тогда
			Возврат ВетисКонстанты.ResearchResult_POSITIVE();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисResearchResult.NEGATIVE") Тогда
			Возврат ВетисКонстанты.ResearchResult_NEGATIVE();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисResearchResult.UNFULFILLED") Тогда
			Возврат ВетисКонстанты.ResearchResult_UNFULFILLED();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисResearchResult.VSERAW") Тогда
			Возврат ВетисКонстанты.ResearchResult_VSERAW();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисResearchResult.VSEFULL") Тогда
			Возврат ВетисКонстанты.ResearchResult_VSEFULL();
		Иначе
			Возврат ВетисКонстанты.ResearchResult_UNKNOWN();
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.ResearchResult_UNKNOWN() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисResearchResult.UNKNOWN");
		ИначеЕсли value = ВетисКонстанты.ResearchResult_POSITIVE() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисResearchResult.POSITIVE");
		ИначеЕсли value = ВетисКонстанты.ResearchResult_NEGATIVE() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисResearchResult.NEGATIVE");
		ИначеЕсли value = ВетисКонстанты.ResearchResult_UNFULFILLED() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисResearchResult.UNFULFILLED");
		ИначеЕсли value = ВетисКонстанты.ResearchResult_VSERAW() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисResearchResult.VSERAW");
		ИначеЕсли value = ВетисКонстанты.ResearchResult_VSEFULL() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисResearchResult.VSEFULL");
		Иначе
			Возврат ПредопределенноеЗначение("Перечисление.ВетисResearchResult.UNKNOWN");
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция PackageLevelType(value = Неопределено) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисPackageLevelType") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Внутренний") Тогда
			Возврат ВетисКонстанты.PackageLevelType_Внутренний();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Потребительский") Тогда
			Возврат ВетисКонстанты.PackageLevelType_Потребительский();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Промежуточный") Тогда
			Возврат ВетисКонстанты.PackageLevelType_Промежуточный();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Торговый") Тогда
			Возврат ВетисКонстанты.PackageLevelType_Торговый();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Дополнительный") Тогда
			Возврат ВетисКонстанты.PackageLevelType_Дополнительный();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Транспортный") Тогда
			Возврат ВетисКонстанты.PackageLevelType_Транспортный();
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.PackageLevelType_Внутренний() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Внутренний");
		ИначеЕсли value = ВетисКонстанты.PackageLevelType_Потребительский() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Потребительский");
		ИначеЕсли value = ВетисКонстанты.PackageLevelType_Промежуточный() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Промежуточный");
		ИначеЕсли value = ВетисКонстанты.PackageLevelType_Торговый() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Торговый");
		ИначеЕсли value = ВетисКонстанты.PackageLevelType_Дополнительный() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Дополнительный");
		ИначеЕсли value = ВетисКонстанты.PackageLevelType_Транспортный() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Транспортный");
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция ProductMarkingClass(value = Неопределено) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисProductMarkingClass") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисProductMarkingClass.UNDEFINED") Тогда
			Возврат ВетисКонстанты.ProductMarkingClass_UNDEFINED();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductMarkingClass.BN") Тогда
			Возврат ВетисКонстанты.ProductMarkingClass_BN();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductMarkingClass.SSCC") Тогда
			Возврат ВетисКонстанты.ProductMarkingClass_SSCC();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductMarkingClass.EAN8") Тогда
			Возврат ВетисКонстанты.ProductMarkingClass_EAN8();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductMarkingClass.EAN13") Тогда
			Возврат ВетисКонстанты.ProductMarkingClass_EAN13();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductMarkingClass.EAN128") Тогда
			Возврат ВетисКонстанты.ProductMarkingClass_EAN128();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductMarkingClass.BNDLID") Тогда
			Возврат ВетисКонстанты.ProductMarkingClass_BNDLID();
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.ProductMarkingClass_UNDEFINED() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductMarkingClass.UNDEFINED");
		ИначеЕсли value = ВетисКонстанты.ProductMarkingClass_BN() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductMarkingClass.BN");
		ИначеЕсли value = ВетисКонстанты.ProductMarkingClass_SSCC() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductMarkingClass.SSCC");
		ИначеЕсли value = ВетисКонстанты.ProductMarkingClass_EAN8() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductMarkingClass.EAN8");
		ИначеЕсли value = ВетисКонстанты.ProductMarkingClass_EAN13() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductMarkingClass.EAN13");
		ИначеЕсли value = ВетисКонстанты.ProductMarkingClass_EAN128() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductMarkingClass.EAN128");
		ИначеЕсли value = ВетисКонстанты.ProductMarkingClass_BNDLID() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductMarkingClass.BNDLID");
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция EnterpriseRole(value) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисEnterpriseRole") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисEnterpriseRole.UNKNOWN") Тогда
			Возврат ВетисКонстанты.EnterpriseRole_UNKNOWN();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисEnterpriseRole.PRODUCER") Тогда
			Возврат ВетисКонстанты.EnterpriseRole_PRODUCER();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисEnterpriseRole.SLAUGHTER_HOUSE") Тогда
			Возврат ВетисКонстанты.EnterpriseRole_SLAUGHTER_HOUSE();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисEnterpriseRole.CUTTING_PLANT") Тогда
			Возврат ВетисКонстанты.EnterpriseRole_CUTTING_PLANT();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисEnterpriseRole.COLD_STORE") Тогда
			Возврат ВетисКонстанты.EnterpriseRole_COLD_STORE();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисEnterpriseRole.PACKAGING_PLANT") Тогда
			Возврат ВетисКонстанты.EnterpriseRole_PACKAGING_PLANT();
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.EnterpriseRole_UNKNOWN() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисEnterpriseRole.UNKNOWN");
		ИначеЕсли value = ВетисКонстанты.EnterpriseRole_PRODUCER() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисEnterpriseRole.PRODUCER");
		ИначеЕсли value = ВетисКонстанты.EnterpriseRole_SLAUGHTER_HOUSE() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисEnterpriseRole.SLAUGHTER_HOUSE");
		ИначеЕсли value = ВетисКонстанты.EnterpriseRole_CUTTING_PLANT() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисEnterpriseRole.CUTTING_PLANT");
		ИначеЕсли value = ВетисКонстанты.EnterpriseRole_COLD_STORE() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисEnterpriseRole.COLD_STORE");
		ИначеЕсли value = ВетисКонстанты.EnterpriseRole_PACKAGING_PLANT() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисEnterpriseRole.PACKAGING_PLANT");
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция EnterpriseType(value) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисEnterpriseType") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.Предприятие") Тогда
			Возврат ВетисКонстанты.EnterpriseType_Предприятие();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.Рынок") Тогда
			Возврат ВетисКонстанты.EnterpriseType_Рынок();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.СББЖ") Тогда
			Возврат ВетисКонстанты.EnterpriseType_СББЖ();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.Судно") Тогда
			Возврат ВетисКонстанты.EnterpriseType_Судно();
		Иначе
			Возврат 0;
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.EnterpriseType_Предприятие() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.Предприятие");
		ИначеЕсли value = ВетисКонстанты.EnterpriseType_Рынок() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.Рынок");
		ИначеЕсли value = ВетисКонстанты.EnterpriseType_СББЖ() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.СББЖ");
		ИначеЕсли value = ВетисКонстанты.EnterpriseType_Судно() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.Судно");
		Иначе
			Возврат ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.ПустаяСсылка");
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция ReferenceType(value) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисReferenceType") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисReferenceType.ComplementaryDocument") Тогда
			Возврат ВетисКонстанты.ReferenceType_ComplementaryDocument();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисReferenceType.PrecedingDocument") Тогда
			Возврат ВетисКонстанты.ReferenceType_PrecedingDocument();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисReferenceType.SubsequentFollowingDocument") Тогда
			Возврат ВетисКонстанты.ReferenceType_SubsequentFollowingDocument();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисReferenceType.ReplacedDocument") Тогда
			Возврат ВетисКонстанты.ReferenceType_ReplacedDocument();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисReferenceType.RelatedDocument") Тогда
			Возврат ВетисКонстанты.ReferenceType_RelatedDocument();
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.ReferenceType_ComplementaryDocument() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисReferenceType.ComplementaryDocument");
		ИначеЕсли value = ВетисКонстанты.ReferenceType_PrecedingDocument() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисReferenceType.PrecedingDocument");
		ИначеЕсли value = ВетисКонстанты.ReferenceType_SubsequentFollowingDocument() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисReferenceType.SubsequentFollowingDocument");
		ИначеЕсли value = ВетисКонстанты.ReferenceType_ReplacedDocument() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисReferenceType.ReplacedDocument");
		ИначеЕсли value = ВетисКонстанты.ReferenceType_RelatedDocument() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисReferenceType.RelatedDocument");
		Иначе
			Возврат "";
		КонецЕсли;
	КонецЕсли;
	
КонецФункции


Функция conv(value, пТаблица, пИмяМодуля, пИмяОперации, пИмяОперацииВерсии, ПоУмолчанию = Неопределено)
	
	Если value = Неопределено Тогда
		Возврат ПоУмолчанию;
	ИначеЕсли ТипЗнч(value) = Тип("СправочникСсылка."+пТаблица) Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(value, ПоУмолчанию);
	Иначе
		Если ТипЗнч(value) = Тип("ОбъектXDTO") Тогда
			Если НЕ value.Свойства().Получить("guid") = Неопределено И ЗначениеЗаполнено(value.guid) Тогда
				_guid = value.guid;
			ИначеЕсли НЕ value.Свойства().Получить("uuid") = Неопределено И ЗначениеЗаполнено(value.uuid) Тогда
				_объект = Вычислить(пИмяМодуля+"."+пИмяОперацииВерсии+"(value.uuid)");
				_Значение = Ветис.Соответствие_ПолучитьСсылку(_объект, "Справочник."+пТаблица, Неопределено);
				Возврат _Значение;
			Иначе
				Возврат ПоУмолчанию;
			КонецЕсли;
		ИначеЕсли ТипЗнч(value) = Тип("Структура") Тогда
			Если value.Свойство("guid") И ЗначениеЗаполнено(value.guid) Тогда
				_guid = value.guid;
			ИначеЕсли value.Свойство("uuid") И ЗначениеЗаполнено(value.uuid) Тогда
				_объект = Вычислить(пИмяМодуля+"."+пИмяОперацииВерсии+"(value.uuid)");
				_Значение = Ветис.Соответствие_ПолучитьСсылку(_объект, "Справочник."+пТаблица, Неопределено);
				Возврат _Значение;
			Иначе
				Возврат ПоУмолчанию;
			КонецЕсли;
		Иначе
			_guid = value;
		КонецЕсли;
		Если ПустаяСтрока(_guid) Тогда
			Возврат ПоУмолчанию;
		КонецЕсли;
		_Значение = Ветис.Соответствие_ПолучитьСсылку(_guid, "Справочник."+пТаблица, Неопределено);
		Если _Значение = Неопределено Тогда
			_объект = Вычислить(пИмяМодуля+"."+пИмяОперации+"(_guid)");
			_Значение = Ветис.Соответствие_ПолучитьСсылку(_объект, "Справочник."+пТаблица, Неопределено);
			Если _Значение = Неопределено Тогда
				Возврат ПоУмолчанию;
			Иначе
				Возврат _Значение;
			КонецЕсли;
		Иначе
			Возврат _Значение;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции
