
// предназначена для получения последней в истории записи хозяйствующего субъекта
Функция GetBusinessEntityByGuid(guid, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ветис.Настройки_ОберткаHttp() Тогда
		Возврат ВетисRegistry_2_0.getBusinessEntityByGuid(guid, пОтказ, пОшибка);
	КонецЕсли;
	
	Попытка
		Возврат Прокси().GetBusinessEntityByGuid(guid);
	Исключение
		пОтказ = Истина;
		пОшибка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВетисОбщегоНазначения.ВывестиСообщениеОбОшибке(ИнформацияОбОшибке(), "GetBusinessEntityByGuid");
		ВызватьИсключение;
	КонецПопытки;
	
КонецФункции

// поиск ХС по ИНН (этой операции нет в сервисе)
Функция GetBusinessEntityByINN(inn, пОтказ = Ложь, пОшибка = "") Экспорт
	
	_Отбор = Новый Структура("inn", inn);
	
	_параметры = Неопределено;
	
	_ответ = Новый Массив;
	
	_businessEntity = Неопределено;
	
	Пока GetBusinessEntityListNext(_Отбор, _businessEntity, _параметры, пОтказ, пОшибка) Цикл
		
		_ответ.Добавить(_businessEntity);
		
	КонецЦикла;
	
	Возврат _ответ;
	
КонецФункции

// предназначена для получения последней в истории записи предприятия
Функция GetEnterpriseByGuid(guid, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ветис.Настройки_ОберткаHttp() Тогда
		Возврат ВетисRegistry_2_0.GetEnterpriseByGuid(guid, пОтказ, пОшибка);
	КонецЕсли;
	
	Попытка
		Возврат Прокси().GetEnterpriseByGuid(guid);
	Исключение
		пОтказ = Истина;
		пОшибка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВетисОбщегоНазначения.ВывестиСообщениеОбОшибке(ИнформацияОбОшибке(), "GetEnterpriseByGuid");
		ВызватьИсключение;
	КонецПопытки;
	
КонецФункции

Функция GetEnterpriseByUuid(uuid, пОтказ = Ложь, пОшибка = "") Экспорт
	
	//Если Ветис.Настройки_ОберткаHttp() Тогда
	//	Возврат ВетисRegistry_2_0.GetEnterpriseByUuid(guid, пОтказ, пОшибка);
	//КонецЕсли;
	
	Попытка
		Возврат Прокси().GetEnterpriseByUuid(uuid);
	Исключение
		пОтказ = Истина;
		пОшибка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВетисОбщегоНазначения.ВывестиСообщениеОбОшибке(ИнформацияОбОшибке(), "GetEnterpriseByGuid");
		ВызватьИсключение;
	КонецПопытки;
	
КонецФункции


// Предназначена для выборки хозяйствующих субъектов из реестра Россельхознадзора.
// Используется самостоятельно в цикле Пока.
// Параметры:
//  filtr - Структура - отбор
//  Item - элемент списка, возвращаемый параметр
//  пПараметры - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetBusinessEntityListNext(filter = Неопределено, Item, пПараметры, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ветис.Настройки_ОберткаHttp() Тогда
		Возврат ВетисRegistry_2_0.getBusinessEntityListNext(filter, Item, пПараметры, пОтказ, пОшибка);
	КонецЕсли;
	
	Если Ветис.ВыборкаСпискаЭтоНачало(пПараметры) Тогда
		Ветис.ВыборкаСпискаИнициализация(ИмяСервиса(), "GetBusinessEntityList", "businessEntity", "", пПараметры, 
			?(filter = Неопределено, ВетисDictionary_2_0.BusinessEntity(), ВетисDictionary_2_0.BusinessEntity(filter)));
	КонецЕсли;
	
	Возврат Ветис.ВыборкаСпискаСледующий(Item, пПараметры, пОтказ, пОшибка);
	
КонецФункции

// Предназначена для выборки предприятий, зарегистрированных на территории Российской Федерации.
// Используется самостоятельно в цикле Пока.
// Параметры:
//  filter - Структура - отбор
//   UUID - Уникальный идентификатор версии записи предприятия в реестре Россельхознадзора. bs:UUID
//   GUID - Уникальный глобальный идентификатор в реестре Россельхознадзора. bs:UUID
//   name - Название предприятия. bs:String255
//   address - Адрес предприятия. ikar:Address
//    region - Регион Российской Федерации. ikar:Region	0..1
//    district - Район региона Российской Федерации. При поиске по району указывать регион не обязательно. ikar:District
//    locality - Населённый пункт регионального подчинения. По населённым пунктам районного подчинения поиск не осуществляется; При поиске обязательно также указывать регион. ikar:Locality
//  Item - элемент списка, возвращаемый параметр
//  пПараметры - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetRussianEnterpriseListNext(filter = Неопределено, Item, пПараметры, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ветис.Настройки_ОберткаHttp() Тогда
		Возврат ВетисRegistry_2_0.GetRussianEnterpriseListNext(filter, Item, пПараметры, пОтказ, пОшибка);
	КонецЕсли;
	
	Если Ветис.ВыборкаСпискаЭтоНачало(пПараметры) Тогда
		Если filter = Неопределено Тогда
			_filter = ВетисDictionary_2_0.Enterprise();
		ИначеЕсли ТипЗнч(filter) = Тип("Структура") Тогда
			_filter = ВетисDictionary_2_0.Enterprise(filter);
		Иначе
			_filter = filter;
		КонецЕсли;
		Ветис.ВыборкаСпискаИнициализация(ИмяСервиса(), "GetRussianEnterpriseList", "enterprise", "", пПараметры, _filter);
	КонецЕсли;
	
	Возврат Ветис.ВыборкаСпискаСледующий(Item, пПараметры, пОтказ, пОшибка);
	
КонецФункции


// Предназначена для получения изменений в списке российских предприятий за указанный период времени
// Используется самостоятельно в цикле Пока.
// Параметры:
//  beginDate - Начальная дата интервала xs:dateTime
//  endDate - Конечная дата интервала xs:dateTime
//  Item - элемент списка, возвращаемый параметр
//  пПараметры - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetBusinessEntityChangesListNext(beginDate, endDate = Неопределено, Item, пПараметры, пОтказ = Ложь, пОшибка = "") Экспорт
	
	//Если Ветис.Настройки_ОберткаHttp() Тогда
	//	Возврат ВетисRegistry_2_0.getBusinessEntityChangesListNext(beginDate, endDate, Item, пПараметры, пОтказ, пОшибка);
	//КонецЕсли;
	
	Если Ветис.ВыборкаСпискаЭтоНачало(пПараметры) Тогда
		Ветис.ВыборкаСпискаИнициализация(ИмяСервиса(), "GetBusinessEntityChangesList", "businessEntity", "", пПараметры, 
			ВетисBase_2_0.DateInterval(beginDate, endDate));
	КонецЕсли;
	
	Возврат Ветис.ВыборкаСпискаСледующий(Item, пПараметры, пОтказ, пОшибка);
	
КонецФункции

// Предназначена для получения изменений в списке российских предприятий за указанный период времени
// Используется самостоятельно в цикле Пока.
// Параметры:
//  beginDate - Начальная дата интервала xs:dateTime
//  endDate - Конечная дата интервала xs:dateTime
//  Item - элемент списка, возвращаемый параметр
//  пПараметры - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetRussianEnterpriseChangesListNext(beginDate, endDate = Неопределено, Item, пПараметры, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ветис.Настройки_ОберткаHttp() Тогда
		Возврат ВетисRegistry_2_0.getRussianEnterpriseChangesListNext(beginDate, endDate, Item, пПараметры, пОтказ, пОшибка);
	КонецЕсли;
	
	Если Ветис.ВыборкаСпискаЭтоНачало(пПараметры) Тогда
		Ветис.ВыборкаСпискаИнициализация(ИмяСервиса(), "GetRussianEnterpriseChangesList", "enterprise", "", пПараметры, 
			ВетисBase_2_0.DateInterval(beginDate, endDate));
	КонецЕсли;
	
	Возврат Ветис.ВыборкаСпискаСледующий(Item, пПараметры, пОтказ, пОшибка);
	
КонецФункции


//Запрос на получение списка предприятий, связанных с указанным ХС.
//Используется самостоятельно в цикле Пока.
//Параметры:
// businessEntityGuid - guid ХС
// Item - элемент списка, возвращаемый параметр
// пПараметры - для внутреннего использования, начальное значение - Неопределено
//Возврат:
// Булево - Ложь значит список пройден весь
Функция GetActivityLocationListNext(businessEntityGuid, Item, пПараметры, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ветис.Настройки_ОберткаHttp() Тогда
		Возврат ВетисRegistry_2_0.getActivityLocationListNext(businessEntityGuid, Item, пПараметры, пОтказ, пОшибка);
	КонецЕсли;
	
	Если Ветис.ВыборкаСпискаЭтоНачало(пПараметры) Тогда
		Ветис.ВыборкаСпискаИнициализация(ИмяСервиса(), "GetActivityLocationList", "location", "enterprise", пПараметры,
			ВетисDictionary_2_0.BusinessEntity(businessEntityGuid));
	КонецЕсли;
	
	Возврат Ветис.ВыборкаСпискаСледующий(Item, пПараметры, пОтказ, пОшибка);
	
КонецФункции

//Запрос на получение пары ХС-площадка по глобальному идентификатору GLN
//Параметры:
// globalID - Глобальный идентификатор (GLN), по которому проводится поиск записи dt:GLNType
//Возврат:
// businessMember - dt:businessMember
Функция GetBusinessMemberByGLN(globalID, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Попытка
		Возврат Прокси().GetBusinessMemberByGLN(globalID);
	Исключение
		пОтказ = Истина;
		пОшибка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВетисОбщегоНазначения.ВывестиСообщениеОбОшибке(ИнформацияОбОшибке(), "GetBusinessMemberByGLN");
		ВызватьИсключение;
	КонецПопытки;
	
КонецФункции


Функция ИмяСервиса() Экспорт
	
	Возврат Перечисления.ВетисСервис.EnterpriseService;
	
КонецФункции

Функция Прокси()
	
	Возврат ВетисПовтИсп.Прокси(ИмяСервиса());
	
КонецФункции
