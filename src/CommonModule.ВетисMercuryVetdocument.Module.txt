
// Тип, описывающий cколько времени животные находились на территории ТС.
Функция AnimalSpentPeriod(value) Экспорт
	
	Если      value = 1 Тогда
		Возврат ВетисКонстанты.AnimalSpentPeriod_FROM_BIRTH();
	ИначеЕсли value = 2 Тогда
		Возврат ВетисКонстанты.AnimalSpentPeriod_NOT_LESS_SIX_MONTHS();
	ИначеЕсли value = 3 Тогда
		Возврат ВетисКонстанты.AnimalSpentPeriod_IN_MONTHS();
	ИначеЕсли value = 4 Тогда
		Возврат ВетисКонстанты.AnimalSpentPeriod_ZERO();
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Тип, описывающий партию груза.
Функция Batch() Экспорт
	
	_Объект = Создать("Batch");
	
	Возврат _Объект;
	
КонецФункции

// Тип, описывающий транспортную партию груза.
Функция Consignment() Экспорт
	
	_Объект = Создать("Consignment");
	
	//_Объект.id = "";// Идентификатор, определяющий consignment в запросе. Должен быть указан, если запрос содержит несколько элементов consignment.
	
	//_Объект.partOf = "";// Ссылка на consignment в разделе delivery запроса. Должен быть указан, если запрос содержит несколько элементов consignment.
	
	// http://vetrf.ru/vetrf-forum/posts/list/315/6855.page#39747
	// Этот атрибут был заявлен на перспективу.
	// В дальнейшем планируется добавить возможность гашения нескольких партий товара.
	// На данный момент использование или неиспользование этого атрибута ошибочным не является.
	
	Возврат _Объект;
	
КонецФункции

// Тип, описывающий контроль поставки (документарный, ветеринарный).
Функция ConsignmentDocumentList(waybill, VetDocument) Экспорт
	
	_Объект = Создать("ConsignmentDocumentList");
	
	ВетисОбщегоНазначения.УстановитьЗначение(_Объект, waybill, "waybill");
	ВетисОбщегоНазначения.УстановитьЗначение(_Объект, VetDocument, "vetCertificate");
	
	Возврат _Объект;
	
КонецФункции

// Тип, описывающий поставку.
// Параметры:
//  consignor - ent:BusinessMember - Сведения об отправителе.
//  consignee - ent:BusinessMember - Сведения о получателе.
//  consignment - vetd:Consignment - Фактические сведения о входящей партии или группе животных.
//  accompanyingForms - vetd:ConsignmentDocumentList - Сопроводительные документы.
Функция Delivery(consignor, consignee, consignment, accompanyingForms) Экспорт
	
	_Объект = Создать("Delivery");
	
	ВетисОбщегоНазначения.УстановитьЗначение(_Объект, Ветис.ВремяСервиса(), "deliveryDate");// xs:dateTime
	ВетисОбщегоНазначения.УстановитьЗначение(_Объект, consignor, "consignor");
	ВетисОбщегоНазначения.УстановитьЗначение(_Объект, consignee, "consignee");
	ВетисОбщегоНазначения.УстановитьЗначение(_Объект, accompanyingForms, "accompanyingForms");
	ВетисОбщегоНазначения.УстановитьЗначение(_Объект, consignment, "consignment");
	
	Возврат _Объект;
	
	// http://vetrf.ru/vetrf-forum/posts/list/825/6855.page#41188
	// В случае если вы передаете в запросе несколько объектов consignment ("..Request/delivery/consignment")
	// и несколько объектов vetCertificate ("..Request/delivery/accompanyingForms/vetCertificate")
	// то связь между ними должна быть установлена путем указания атрибутов "id" - у элемента consignment
	// и "for" - для элемента vetCertificate.
	// 
	// В случае если вы передаете в запросе несколько объектов consignment и один объект vetCertificate,
	// то атрибуты id и for могут быть не указаны,
	// но в этом случае информация из единственного элемента vetCertificate будет распространяться на все ВСД,
	// оформляемые в этом запросе.
	//
	// http://vetrf.ru/vetrf-forum/posts/list/825/6855.page#41192
	// Возможно, что неверно указали значения для атрибутов id и for.
	// Их типы ID и IDREF, соответственно, и должны начинаться с "_" или буквенного символа.
	
КонецФункции

// Обобщенные сведения о результате приема партии продукции.
// Параметры:
//  presence - argc:DocumentNature - Природа ВСД (электронный или бумажный)
//  docInspection - vetd:DeliveryInspection - Соответствуют ли сведения о партии, указанной в ВСД, фактическим
//  vetInspection - vetd:DeliveryInspection - Осуществлен ли контроль груза гос.ветврачом на соответствие требованиям.
//  decision - vetd:DeliveryDecision - Принятое решение о приёме входной партии.
Функция DeliveryFactList(presence, docInspection, vetInspection, decision) Экспорт
	
	_Объект = Создать("DeliveryFactList");
	
	ВетисОбщегоНазначения.УстановитьЗначение(_Объект, presence, "vetCertificatePresence");
	ВетисОбщегоНазначения.УстановитьЗначение(_Объект, docInspection, "docInspection");
	ВетисОбщегоНазначения.УстановитьЗначение(_Объект, vetInspection, "vetInspection");
	ВетисОбщегоНазначения.УстановитьЗначение(_Объект, decision, "decision");
	
	Возврат _Объект;
	
КонецФункции

// Тип, описывающий контроль поставки (документарный, ветеринарный).
// Параметры:
// 	result - vetd:DeliveryInspectionResult - Результат контроля.
//  responsible - argc:User - Ответственный за контроль.
Функция DeliveryInspection(result, responsible = Неопределено) Экспорт
	
	_Объект = Создать("DeliveryInspection");
	
	ВетисОбщегоНазначения.УстановитьЗначение(_Объект, result, "result");
	ВетисОбщегоНазначения.УстановитьЗначение(_Объект, responsible, "responsible", , ВетисArgusCommon.User(ВетисПовтИсп.ТекущийПользователь_Логин()));
	
	Возврат _Объект;
	
КонецФункции

//Тип, описывающий причину несоответствия в акте.
//Параметры:
// name - Название причины. - bs:String255
Функция DiscrepancyReason(name) Экспорт
	
	_Объект = Создать("DiscrepancyReason");
	
	_Объект.name = name;
	
	Возврат _Объект;
	
КонецФункции

//Тип, описывающий сведения об акте несоответствия.
//Параметры:
// issueSeries - Серия документа. bs:String255
// issueNumber - Номер документа. bs:String255
// issueDate - Дата документа. xs:date
// reason - Причина несоответствия. xs:string
// description - Детальное описание. xs:string
Функция DiscrepancyReport(issueSeries = Неопределено, issueNumber = Неопределено, issueDate = Неопределено, reason = Неопределено, description = Неопределено) Экспорт
	
	_Объект = Создать("DiscrepancyReport");
	
	ВетисОбщегоНазначения.УстановитьЗначение(_Объект, issueSeries, "issueSeries");
	ВетисОбщегоНазначения.УстановитьЗначение(_Объект, issueNumber, "issueNumber");
	ВетисОбщегоНазначения.УстановитьЗначение(_Объект, issueDate, "issueDate");//xs:date
	ВетисОбщегоНазначения.УстановитьЗначение(_Объект, DiscrepancyReason(reason), "reason");
	ВетисОбщегоНазначения.УстановитьЗначение(_Объект, description, "description");
	
	Возврат _Объект;
	
КонецФункции

// Тип, описывающий дату производства, либо дату окончания срока годности продукции.
// Может указываться единичной датой, интервалом, либо строкой.
Функция GoodsDate(firstDate, secondDate = Неопределено, пЧас = Ложь) Экспорт
	
	_Объект = Создать("GoodsDate");
	
	_Объект.firstDate = ВетисBase.ComplexDate(firstDate, пЧас);
	
	Если НЕ secondDate = Неопределено И ЗначениеЗаполнено(secondDate) Тогда
		_Объект.secondDate = ВетисBase.ComplexDate(secondDate, пЧас);
	КонецЕсли;
	
	Возврат _Объект;
	
КонецФункции

//Создает объект, который содержит сведения об объединяемых складских записях журнала продукции
//Параметры:
// sourceStockEntry - Массив - vetd:StockEntry - Позиции в складском журнале системы Меркурий, не менее двух.
//                    Указанные позиции будут объединены в одну. Представляют собой идентификатор версии записи (uuid) в ИС Меркурий.
//	Указанная версия записи складского журнала продукции в ИС Меркурий должна быть актуальной, неаннулированной и неудалённой.
//	Объединяемые записи журнала должны быть в статусе "создана" или "отправлена".
//	Объединяемые записи журнала должны быть в журнале входной продукции, для вырабатываемой продукции функция объединения отсутствует.
//	Хозяйствующий субъект - владелец продукции в объединяемых записях должен совпадать.
//	Объединяемые записи журнала продукции должны относится к одному типу продукции (первый уровень справочника продукции).
//	Объединяемые записи журнала продукции должны относится к одной продукции (второй уровень справочника продукции).
//	В объединяемых записях журнала продукции указанная ед. измерения должна относится к одной группе единиц измерения.
//	Объединяемые записи журнала продукции должны относится к одной стране происхождения.
//	Запрещено объединение записи журнала входной и вырабатываемой продукции.
//	Запрещено объединение записей журнала относящихся к скоропортящейся и не скоропортящейся продукции.
//	Запрещено объединение записей журнала относящихся к качественной и некачественной продукции;
//
Функция MergeStockEntriesOperation(sourceStockEntry) Экспорт
	
	_Объект = Создать("MergeStockEntriesOperation");
	
	ВетисОбщегоНазначения.УстановитьЗначение(_Объект, sourceStockEntry, "sourceStockEntry", "ВетисMercuryVetdocument.StockEntry");
	
	Возврат _Объект;
	
КонецФункции

Функция ProductMarking(content) Экспорт
	
	_Объект = Создать("ProductMarking");
	
	_Объект.class = ВетисКонстанты.ProductMarkingClass_UNDEFINED();//пока только UNDEFINED
	
	_Объект.__content = content;
	
	Возврат _Объект;
	
КонецФункции

Функция ProductMarkingList(content) Экспорт
	
	_Объект = Создать("ProductMarkingList");
	
	ВетисОбщегоНазначения.УстановитьЗначение(_Объект, content, "productMarking", "ВетисMercuryVetdocument.ProductMarking");
	
	Возврат _Объект;
	
КонецФункции

//Тип, описывающий операцию оформления результатов инвентаризации.
//Параметры:
// resultingList - Одна или несколько записей складского журнала продукции, полученная, либо измененная в результате инвентаризации. vetd:StockEntryList 0..1
Функция StockDiscrepancy(stockEntry) Экспорт
	
	_Объект = Создать("StockDiscrepancy");
	
	//ВетисОбщегоНазначения.УстановитьЗначение(_Объект, resultingList, "resultingList");
	
	//_Объект.count = _Объект.resultingList.Количество();
	//_Объект.offset = 0;
	//_Объект.total = 0;
	ВетисОбщегоНазначения.УстановитьЗначение(_Объект, StockEntryList(stockEntry), "resultingList");
	
	Возврат _Объект;
	
КонецФункции

// Тип, описывающий cведения о записи журнала продукции.
Функция StockEntry(guid = Неопределено) Экспорт
	
	_Объект = Создать("StockEntry");
	
	ВетисОбщегоНазначения.УстановитьЗначение(_Объект, guid);
	
	Возврат _Объект;
	
КонецФункции

Функция StockEntryList(stockEntry = Неопределено) Экспорт
	
	_Объект = Создать("StockEntryList");
	
	ВетисОбщегоНазначения.УстановитьЗначение(_Объект, stockEntry, "stockEntry");
	
	_Объект.count = _Объект.stockEntry.Количество();
	_Объект.offset = 0;
	_Объект.total = 0;
	
	Возврат _Объект;
	
КонецФункции

// Тип, описывающий ветеринарно-сопроводительный документ (ВСД).
// Параметры:
//  uuid - Идентификатор ВСД
Функция VetDocument(uuid = Неопределено) Экспорт
	
	_Объект = Создать("VetDocument");
	
	ВетисОбщегоНазначения.УстановитьЗначение(_Объект, uuid, "uuid");
	
	Возврат _Объект;
	
КонецФункции

//Причина аннулирования ветеринарного сертификата. 
Функция WithdrawReason(пЗначение) Экспорт
	
	Возврат Строка(пЗначение);
	
КонецФункции


// Тип, описывающий контроль поставки (документарный, ветеринарный).
Функция DeliveryDecision(value) Экспорт
	
	Если      value = 1 Тогда
		Возврат ВетисКонстанты.DeliveryDecision_ACCEPT_ALL();
	ИначеЕсли value = 2 Тогда
		Возврат ВетисКонстанты.DeliveryDecision_PARTIALLY();
	ИначеЕсли value = 3 Тогда
		Возврат ВетисКонстанты.DeliveryDecision_RETURN_ALL();
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Тип, описывающий результат контроля поставки.
Функция DeliveryInspectionResult(value) Экспорт
	
	Если      value = 1 Тогда
		Возврат ВетисКонстанты.DeliveryInspectionResult_CORRESPONDS();
	ИначеЕсли value = 2 Тогда
		Возврат ВетисКонстанты.DeliveryInspectionResult_MISMATCH();
	ИначеЕсли value = 3 Тогда
		Возврат ВетисКонстанты.DeliveryInspectionResult_UNSUPERVISED();
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Тип, описывающий форму ветеринарно-сопроводительного докумнета (ВСД).
Функция VetDocumentForm(value) Экспорт
	
	Если      value = 1 Тогда
		Возврат ВетисКонстанты.VetDocumentForm_CERTCU1();
	ИначеЕсли value = 2 Тогда
		Возврат ВетисКонстанты.VetDocumentForm_LIC1();
	ИначеЕсли value = 3 Тогда
		Возврат ВетисКонстанты.VetDocumentForm_CERTCU2();
	ИначеЕсли value = 4 Тогда
		Возврат ВетисКонстанты.VetDocumentForm_LIC2();
	ИначеЕсли value = 5 Тогда
		Возврат ВетисКонстанты.VetDocumentForm_CERTCU3();
	ИначеЕсли value = 6 Тогда
		Возврат ВетисКонстанты.VetDocumentForm_LIC3();
	ИначеЕсли value = 7 Тогда
		Возврат ВетисКонстанты.VetDocumentForm_NOTE4();
	ИначеЕсли value = 8 Тогда
		Возврат ВетисКонстанты.VetDocumentForm_CERT5I();
	ИначеЕсли value = 9 Тогда
		Возврат ВетисКонстанты.VetDocumentForm_CERT61();
	ИначеЕсли value = 10 Тогда
		Возврат ВетисКонстанты.VetDocumentForm_CERT62();
	ИначеЕсли value = 11 Тогда
		Возврат ВетисКонстанты.VetDocumentForm_CERT63();
	ИначеЕсли value = 12 Тогда
		Возврат ВетисКонстанты.VetDocumentForm_PRODUCTIVE();
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Тип, описывающий статус ветеринарно-сопроводительного докумнета (ВСД).
Функция VetDocumentStatus(value) Экспорт
	
	Если      value = 1 Тогда
		Возврат ВетисКонстанты.VetDocumentStatus_CONFIRMED();
	ИначеЕсли value = 2 Тогда
		Возврат ВетисКонстанты.VetDocumentStatus_WITHDRAWN();
	ИначеЕсли value = 3 Тогда
		Возврат ВетисКонстанты.VetDocumentStatus_UTILIZED();
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Тип, описывающий тип ветеринарно-сопроводительного документа (ВСД).
// Типы сертификатов в документации перечислены как для запросов, так и для ответов сервиса.
// В запросе на список ветеринарных сертификатов можно указать только входящие или исходящие.
// В ответе сервиса придут транспортные и возвратные сертификаты.
// То есть в запросе можно указать направление отправки сертификата (от предприятия или на предприятие),
// а в ответе придет информация о том какие из них были транспортными, а какие были оформлены как возвратными.
Функция VetDocumentType(value) Экспорт
	
	Если      value = 1 Тогда
		Возврат ВетисКонстанты.VetDocumentType_INCOMING();
	ИначеЕсли value = 2 Тогда
		Возврат ВетисКонстанты.VetDocumentType_OUTGOING();
	ИначеЕсли value = 3 Тогда
		Возврат ВетисКонстанты.VetDocumentType_PRODUCTIVE();
	ИначеЕсли value = 4 Тогда
		Возврат ВетисКонстанты.VetDocumentType_RETURNABLE();
	ИначеЕсли value = 5 Тогда
		Возврат ВетисКонстанты.VetDocumentType_TRANSPORT();
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции


Функция Создать(пИмя, пФабрика = Неопределено) Экспорт
	
	Возврат ВетисОбщегоНазначения.Создать(пИмя, URI(), пФабрика);
	
КонецФункции

Функция URI() Экспорт
	
	Возврат "http://api.vetrf.ru/schema/cdm/mercury/vet-document";
	
КонецФункции

