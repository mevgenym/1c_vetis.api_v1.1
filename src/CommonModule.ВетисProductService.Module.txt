
// Предназначена для получения записи продукции
Функция GetProductByGuid(guid) Экспорт
	
	Попытка
		Возврат Прокси().GetProductByGuid(guid);
	Исключение
		ВетисОбщегоНазначения.ВывестиСообщениеОбОшибке(ИнформацияОбОшибке(), "GetProductByGuid");
		ВызватьИсключение;
	КонецПопытки;
	
КонецФункции

// Предназначена для получения записи о виде продукции
Функция GetSubProductByGuid(guid) Экспорт
	
	Попытка
		Возврат Прокси().GetSubProductByGuid(guid);
	Исключение
		ВетисОбщегоНазначения.ВывестиСообщениеОбОшибке(ИнформацияОбОшибке(), "GetSubProductByGuid");
		ВызватьИсключение;
	КонецПопытки;
	
КонецФункции

//Предназначена для получения записи о номенклатуре производителя по её глобальному идентификатору.
//Глобальный идентификатор присваивается номенклатуре при занесении её в список с помощью метода ModifyProducerStockListOperation.
Функция GetProductItemByGuid(guid) Экспорт
	
	Попытка
		Возврат Прокси().GetProductItemByGuid(guid);
	Исключение
		ВетисОбщегоНазначения.ВывестиСообщениеОбОшибке(ИнформацияОбОшибке(), "GetProductItemByGuid");
		ВызватьИсключение;
	КонецПопытки;
	
КонецФункции


// Предназначена для Выборки продукции по указанному типу.
// Используется самостоятельно в цикле Пока.
// Параметры:
//  productType - тип продукта
//  Item - элемент списка, возвращаемый параметр
//  пПараметры - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetProductByTypeListNext(productType, Item, пПараметры, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ветис.ВыборкаСпискаЭтоНачало(пПараметры) Тогда
		Ветис.ВыборкаСпискаИнициализация(ИмяСервиса(), "GetProductByTypeList", "product", "", пПараметры, productType);
	КонецЕсли;
	
	Возврат Ветис.ВыборкаСпискаСледующий(Item, пПараметры, пОтказ, пОшибка);
	
КонецФункции

// Предназначена для выборки видов продукции, отфильтрованного по указанному продукту.
// Используется самостоятельно в цикле Пока.
// Параметры:
//  productGuid - ссылка на продукт
//  Item - элемент списка, возвращаемый параметр
//  пПараметры - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetSubProductByProductListNext(productGuid, Item, пПараметры, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ветис.ВыборкаСпискаЭтоНачало(пПараметры) Тогда
		Ветис.ВыборкаСпискаИнициализация(ИмяСервиса(), "GetSubProductByProductList", "subProduct", "", пПараметры, productGuid);
	КонецЕсли;
	
	Возврат Ветис.ВыборкаСпискаСледующий(Item, пПараметры, пОтказ, пОшибка);
	
КонецФункции

// Предназначена для выборки наименований продукции отфильтрованных по указанному продукту
// по номенклатуре определенного предприятия-производителя.
// Используется самостоятельно в цикле Пока.
// Параметры:
//  subProductGuid - глобальный идентификатор вида продукции, для которого нужно получить номенклатуру
//  enterpriseGuid - глобальный идентификатор предприятия, на котором производится или хранится продукция
//  Item - элемент списка, возвращаемый параметр
//  пПараметры - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetProductItemListNext(subProductGuid, enterpriseGuid, Item, пПараметры, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ветис.ВыборкаСпискаЭтоНачало(пПараметры) Тогда
		Ветис.ВыборкаСпискаИнициализация(ИмяСервиса(), "GetProductItemList", "productItem", "", пПараметры, subProductGuid, enterpriseGuid);
	КонецЕсли;
	
	Возврат Ветис.ВыборкаСпискаСледующий(Item, пПараметры, пОтказ, пОшибка);
	
КонецФункции


// Предназначена для получения списка изменённой продукции
// Используется самостоятельно в цикле Пока.
// Параметры:
//  beginDate - Начальная дата интервала xs:dateTime
//  endDate - Конечная дата интервала xs:dateTime
//  Item - элемент списка, возвращаемый параметр
//  пПараметры - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetProductChangesListNext(beginDate, endDate = Неопределено, Item, пПараметры, пОтказ = Ложь, пОшибка = "") Экспорт
	
	//Если Ветис.Настройки_ОберткаHttp() Тогда
	//	Возврат ВетисRegistry_2_0.getProductChangesListNext(beginDate, endDate, product, пПараметры, пОтказ, пОшибка);
	//КонецЕсли;
	
	Если Ветис.ВыборкаСпискаЭтоНачало(пПараметры) Тогда
		Ветис.ВыборкаСпискаИнициализация(ИмяСервиса(), "GetProductChangesList", "product", "", пПараметры,
			ВетисBase_2_0.DateInterval(beginDate, endDate));
	КонецЕсли;
	
	Возврат Ветис.ВыборкаСпискаСледующий(Item, пПараметры, пОтказ, пОшибка);
	
КонецФункции

// Предназначена для получения списка изменённых видов продукции
// Используется самостоятельно в цикле Пока.
// Параметры:
//  beginDate - Начальная дата интервала xs:dateTime
//  endDate - Конечная дата интервала xs:dateTime
//  Item - элемент списка, возвращаемый параметр
//  пПараметры - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetSubProductChangesListNext(beginDate, endDate = Неопределено, Item, пПараметры, пОтказ = Ложь, пОшибка = "") Экспорт
	
	//Если Ветис.Настройки_ОберткаHttp() Тогда
	//	Возврат ВетисRegistry_2_0.getSubProductChangesListNext(beginDate, endDate, subProduct, пПараметры, пОтказ, пОшибка);
	//КонецЕсли;
	
	Если Ветис.ВыборкаСпискаЭтоНачало(пПараметры) Тогда
		Ветис.ВыборкаСпискаИнициализация(ИмяСервиса(), "GetSubProductChangesList", "subProduct", "", пПараметры,
			ВетисBase_2_0.DateInterval(beginDate, endDate));
	КонецЕсли;
	
	Возврат Ветис.ВыборкаСпискаСледующий(Item, пПараметры, пОтказ, пОшибка);
	
КонецФункции

// Предназначена для получения изменений в списке наименований продукции для номенклатуры предприятия-производителя
// Используется самостоятельно в цикле Пока.
// Параметры:
//  enterpriseGuid - Идентификатор предприятия, на котором производится или хранится продукция bs:UUID
//  beginDate - Начальная дата интервала xs:dateTime
//  endDate - Конечная дата интервала xs:dateTime
//  Item - элемент списка, возвращаемый параметр
//  пПараметры - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetProductItemChangesListNext(enterpriseGuid, beginDate, endDate = Неопределено, Item, пПараметры, пОтказ = Ложь, пОшибка = "") Экспорт
	
	//Если Ветис.Настройки_ОберткаHttp() Тогда
	//	Возврат ВетисRegistry_2_0.getProductItemChangesListNext(enterpriseGuid, beginDate, endDate, productItem, пПараметры, пОтказ, пОшибка);
	//КонецЕсли;
	
	Если Ветис.ВыборкаСпискаЭтоНачало(пПараметры) Тогда
		Ветис.ВыборкаСпискаИнициализация(ИмяСервиса(), "GetProductItemChangesList", "productItem", "", пПараметры,
			ВетисBase_2_0.DateInterval(beginDate, endDate), enterpriseGuid);
	КонецЕсли;
	
	Возврат Ветис.ВыборкаСпискаСледующий(Item, пПараметры, пОтказ, пОшибка);
	
КонецФункции


Функция ИмяСервиса() Экспорт
	
	Возврат Перечисления.ВетисСервис.ProductService;
	
КонецФункции

Функция Прокси()
	
	Возврат ВетисПовтИсп.Прокси(ИмяСервиса());
	
КонецФункции
