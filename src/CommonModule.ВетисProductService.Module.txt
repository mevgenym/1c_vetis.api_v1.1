
// Предназначена для получения записи продукции
Функция GetProductByGuid(guid, пОтказ = Ложь, пОшибка = "", пВызватьИсключение = Ложь) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисProductService_2_0.GetProductByGuid(guid, пОтказ, пОшибка, пВызватьИсключение);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисProductService_2_0.GetProductByGuid(guid, пОтказ, пОшибка, пВызватьИсключение);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисProductService_1_4.GetProductByGuid(guid, пОтказ, пОшибка, пВызватьИсключение);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

// Предназначена для получения записи о виде продукции
Функция GetSubProductByGuid(guid, пОтказ = Ложь, пОшибка = "", пВызватьИсключение = Ложь) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисProductService_2_0.GetSubProductByGuid(guid, пОтказ, пОшибка, пВызватьИсключение);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисProductService_2_0.GetSubProductByGuid(guid, пОтказ, пОшибка, пВызватьИсключение);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисProductService_1_4.GetSubProductByGuid(guid, пОтказ, пОшибка, пВызватьИсключение);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

// Предназначена для получения записи о номенклатуре производителя по её глобальному идентификатору.
Функция GetProductItemByGuid(guid, пОтказ = Ложь, пОшибка = "", пВызватьИсключение = Ложь) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисProductService_2_0.GetProductItemByGuid(guid, пОтказ, пОшибка, пВызватьИсключение);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисProductService_2_0.GetProductItemByGuid(guid, пОтказ, пОшибка, пВызватьИсключение);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисProductService_1_4.GetProductItemByGuid(guid, пОтказ, пОшибка, пВызватьИсключение);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

Функция GetProductItemByUuid(uuid, пОтказ = Ложь, пОшибка = "", пВызватьИсключение = Ложь) Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисProductService_2_0.GetProductItemByUuid(uuid, пОтказ, пОшибка, пВызватьИсключение);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисProductService_2_0.GetProductItemByUuid(uuid, пОтказ, пОшибка, пВызватьИсключение);
	//ИначеЕсли Ветис.Версия_1_4() Тогда
	//	Возврат ВетисProductService_1_4.GetProductItemByUuid(uuid, пОтказ, пОшибка, пВызватьИсключение);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции


// Предназначена для Выборки продукции по указанному типу.
// Используется самостоятельно в цикле Пока.
// Параметры:
//  productType - тип продукта
//  Item - элемент списка, возвращаемый параметр
//  Params - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetProductByTypeListNext(productType, Item, Params, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисProductService_2_0.GetProductByTypeListNext(productType, Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисProductService_2_0.GetProductByTypeListNext(productType, Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисProductService_1_4.GetProductByTypeListNext(productType, Item, Params, пОтказ, пОшибка);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

// Предназначена для выборки видов продукции, отфильтрованного по указанному продукту.
// Используется самостоятельно в цикле Пока.
// Параметры:
//  productGuid - ссылка на продукт
//  Item - элемент списка, возвращаемый параметр
//  Params - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetSubProductByProductListNext(productGuid, Item, Params, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисProductService_2_0.GetSubProductByProductListNext(productGuid, Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисProductService_2_0.GetSubProductByProductListNext(productGuid, Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисProductService_1_4.GetSubProductByProductListNext(productGuid, Item, Params, пОтказ, пОшибка);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

// Предназначена для выборки наименований продукции отфильтрованных по указанному продукту
// по номенклатуре определенного предприятия-производителя.
// Используется самостоятельно в цикле Пока.
// Параметры:
//  subProductGuid - глобальный идентификатор вида продукции, для которого нужно получить номенклатуру
//  enterpriseGuid - глобальный идентификатор предприятия, на котором производится или хранится продукция
//  Item - элемент списка, возвращаемый параметр
//  Params - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetProductItemListNext(subProductGuid, enterpriseGuid, Item, Params, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисProductService_2_0.GetProductItemListNext(subProductGuid, enterpriseGuid, Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисProductService_2_0.GetProductItemListNext(subProductGuid, enterpriseGuid, Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисProductService_1_4.GetProductItemListNext(subProductGuid, enterpriseGuid, Item, Params, пОтказ, пОшибка);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции


// Предназначена для получения списка изменённой продукции
// Используется самостоятельно в цикле Пока.
// Параметры:
//  beginDate - Начальная дата интервала xs:dateTime
//  endDate - Конечная дата интервала xs:dateTime
//  Item - элемент списка, возвращаемый параметр
//  Params - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetProductChangesListNext(beginDate, endDate = Неопределено, Item, Params, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисProductService_2_0.GetProductChangesListNext(beginDate, endDate, Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисProductService_2_0.GetProductChangesListNext(beginDate, endDate, Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисProductService_1_4.GetProductChangesListNext(beginDate, endDate, Item, Params, пОтказ, пОшибка);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

// Предназначена для получения списка изменённых видов продукции
// Используется самостоятельно в цикле Пока.
// Параметры:
//  beginDate - Начальная дата интервала xs:dateTime
//  endDate - Конечная дата интервала xs:dateTime
//  Item - элемент списка, возвращаемый параметр
//  Params - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetSubProductChangesListNext(beginDate, endDate = Неопределено, Item, Params, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисProductService_2_0.GetSubProductChangesListNext(beginDate, endDate, Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисProductService_2_0.GetSubProductChangesListNext(beginDate, endDate, Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисProductService_1_4.GetSubProductChangesListNext(beginDate, endDate, Item, Params, пОтказ, пОшибка);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции

// Предназначена для получения изменений в списке наименований продукции для номенклатуры предприятия-производителя
// Используется самостоятельно в цикле Пока.
// Параметры:
//  enterpriseGuid - Идентификатор предприятия, на котором производится или хранится продукция bs:UUID
//  beginDate - Начальная дата интервала xs:dateTime
//  endDate - Конечная дата интервала xs:dateTime
//  Item - элемент списка, возвращаемый параметр
//  Params - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetProductItemChangesListNext(enterpriseGuid, beginDate, endDate = Неопределено, Item, Params, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат ВетисProductService_2_0.GetProductItemChangesListNext(enterpriseGuid, beginDate, endDate, Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат ВетисProductService_2_0.GetProductItemChangesListNext(enterpriseGuid, beginDate, endDate, Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Возврат ВетисProductService_1_4.GetProductItemChangesListNext(enterpriseGuid, beginDate, endDate, Item, Params, пОтказ, пОшибка);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции


Функция ИмяСервиса() Экспорт
	
	Возврат Перечисления.ВетисСервис.ProductService;
	
КонецФункции

Функция Прокси()
	
	Возврат ВетисПовтИсп.Прокси(ИмяСервиса());
	
КонецФункции
