
// Предназначена для получения записи продукции
Функция GetProductByGuid(guid, пОтказ = Ложь, пОшибка = "", пВызватьИсключение = Ложь) Экспорт
	
	Попытка
		Возврат Прокси().GetProductByGuid(guid);
	Исключение
		пОтказ = Истина;
		пОшибка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВетисОбщегоНазначения.ВывестиСообщениеОбОшибке(ИнформацияОбОшибке(), "GetProductByGuid");
		Если пВызватьИсключение = Истина Тогда ВызватьИсключение; КонецЕсли;
	КонецПопытки;
	
КонецФункции

// Предназначена для получения записи о виде продукции
Функция GetSubProductByGuid(guid, пОтказ = Ложь, пОшибка = "", пВызватьИсключение = Ложь) Экспорт
	
	Попытка
		Возврат Прокси().GetSubProductByGuid(guid);
	Исключение
		пОтказ = Истина;
		пОшибка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВетисОбщегоНазначения.ВывестиСообщениеОбОшибке(ИнформацияОбОшибке(), "GetSubProductByGuid");
		Если пВызватьИсключение = Истина Тогда ВызватьИсключение; КонецЕсли;
	КонецПопытки;
	
КонецФункции

// Предназначена для получения записи о номенклатуре производителя по её глобальному идентификатору.
Функция GetProductItemByGuid(guid, пОтказ = Ложь, пОшибка = "", пВызватьИсключение = Истина) Экспорт
	
	Если Ветис.Настройки_ОберткаHttp() Тогда
		Возврат ВетисRegistry.getProductItemByGuid(guid, пОтказ, пОшибка);
	КонецЕсли;
	
	Попытка
		Возврат Прокси().GetProductItemByGuid(guid);
	Исключение
		пОтказ = Истина;
		пОшибка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВетисОбщегоНазначения.ВывестиСообщениеОбОшибке(ИнформацияОбОшибке(), "GetProductItemByGuid");
		Если пВызватьИсключение = Истина Тогда ВызватьИсключение; КонецЕсли;
	КонецПопытки;
	
КонецФункции

Функция GetProductItemByUuid(uuid, пОтказ = Ложь, пОшибка = "", пВызватьИсключение = Истина) Экспорт
	
	//Если Ветис.Настройки_ОберткаHttp() Тогда
	//	Возврат ВетисRegistry_2_0.getProductItemByUuid(uuid, пОтказ, пОшибка);
	//КонецЕсли;
	
	Попытка
		Возврат Прокси().GetProductItemByUuid(uuid);
	Исключение
		пОтказ = Истина;
		пОшибка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВетисОбщегоНазначения.ВывестиСообщениеОбОшибке(ИнформацияОбОшибке(), "GetProductItemByUuid");
		Если пВызватьИсключение = Истина Тогда ВызватьИсключение; КонецЕсли;
	КонецПопытки;
	
КонецФункции


// Предназначена для Выборки продукции по указанному типу.
// Используется самостоятельно в цикле Пока.
// Параметры:
//  productType - тип продукта
//  Item - элемент списка, возвращаемый параметр
//  Params - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetProductByTypeListNext(productType, Item, Params, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ветис.GetListItFirst(Params) Тогда
		Ветис.GetRefListInit(ИмяСервиса(), "GetProductByTypeList", "product", "", Params,	productType);
	КонецЕсли;
	
	Возврат Ветис.GetRefListNext(Item, Params, пОтказ, пОшибка);
	
КонецФункции

// Предназначена для выборки видов продукции, отфильтрованного по указанному продукту.
// Используется самостоятельно в цикле Пока.
// Параметры:
//  productGuid - ссылка на продукт
//  Item - элемент списка, возвращаемый параметр
//  Params - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetSubProductByProductListNext(productGuid, Item, Params, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ветис.GetListItFirst(Params) Тогда
		Ветис.GetRefListInit(ИмяСервиса(), "GetSubProductByProductList", "subProduct", "", Params, productGuid);
	КонецЕсли;
	
	Возврат Ветис.GetRefListNext(Item, Params, пОтказ, пОшибка);
	
КонецФункции

// Предназначена для выборки наименований продукции отфильтрованных по указанному продукту
// по номенклатуре определенного предприятия-производителя.
// Используется самостоятельно в цикле Пока.
// Параметры:
//  subProductGuid - глобальный идентификатор вида продукции, для которого нужно получить номенклатуру
//  enterpriseGuid - глобальный идентификатор предприятия, на котором производится или хранится продукция
//  Item - элемент списка, возвращаемый параметр
//  Params - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetProductItemListNext(Item, Params, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Перем productType, product, subProduct, businessEntity, producer, globalId, enterprise, subProductGuid, enterpriseGuid;
	
	Params = ?(Params = Неопределено, Новый Структура, Params);
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Params.Свойство("productType", productType);
		Params.Свойство("product", product);
		Params.Свойство("subProduct", subProduct);
		Params.Свойство("businessEntity", businessEntity);
		Params.Свойство("producer", producer);
		Params.Свойство("globalId", globalId);
		Возврат GetProductItemListNext_2_1(productType, product, subProduct, businessEntity, producer, globalId, Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Params.Свойство("productType", productType);
		Params.Свойство("product", product);
		Params.Свойство("subProduct", subProduct);
		Params.Свойство("businessEntity", businessEntity);
		Params.Свойство("enterprise", enterprise);
		Возврат GetProductItemListNext_2_0(productType, product, subProduct, businessEntity, enterprise, Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Params.Свойство("subProductGuid", subProductGuid);
		Params.Свойство("enterpriseGuid", enterpriseGuid);
		Возврат GetProductItemListNext_1_4(subProductGuid, enterpriseGuid, Item, Params, пОтказ, пОшибка);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции
Функция GetProductItemListNext_2_1(productType, product, subProduct, businessEntity, producer, globalId, Item, Params, пОтказ = Ложь, пОшибка = "")
	
	Params = ?(Params = Неопределено, Новый Структура, Params);
	
	//Если Ветис.Настройки_ОберткаHttp() ИЛИ Params.Свойство("ОберткаHttp") Тогда
	//КонецЕсли;
	
	Если Ветис.GetListItFirst(Params) Тогда
		Ветис.GetRefListInit(ИмяСервиса(), "GetProductItemList", "productItem", "", Params,
			productType, product, subProduct, businessEntity, producer, globalId);
	КонецЕсли;
	
	Возврат Ветис.GetRefListNext(Item, Params, пОтказ, пОшибка);
	
КонецФункции
Функция GetProductItemListNext_2_0(productType, product, subProduct, businessEntity, enterprise, Item, Params, пОтказ = Ложь, пОшибка = "")
	
	Params = ?(Params = Неопределено, Новый Структура, Params);
	
	Если Ветис.Настройки_ОберткаHttp() ИЛИ Params.Свойство("ОберткаHttp") Тогда
		Возврат ВетисRegistry.getProductItemListNext(productType, product, subProduct, businessEntity, enterprise, Item, Params, пОтказ, пОшибка);
	КонецЕсли;
	
	Если Ветис.GetListItFirst(Params) Тогда
		Ветис.GetRefListInit(ИмяСервиса(), "GetProductItemList", "productItem", "", Params,
			productType, product, subProduct, businessEntity, enterprise);
	КонецЕсли;
	
	Возврат Ветис.GetRefListNext(Item, Params, пОтказ, пОшибка);
	
КонецФункции
Функция GetProductItemListNext_1_4(subProductGuid, enterpriseGuid, Item, Params, пОтказ = Ложь, пОшибка = "")
	
	Если Ветис.GetListItFirst(Params) Тогда
		Ветис.GetRefListInit(ИмяСервиса(), "GetProductItemList", "productItem", "", Params, subProductGuid, enterpriseGuid);
	КонецЕсли;
	
	Возврат Ветис.GetRefListNext(Item, Params, пОтказ, пОшибка);
	
КонецФункции


// Предназначена для получения списка изменённой продукции
// Используется самостоятельно в цикле Пока.
// Параметры:
//  beginDate - Начальная дата интервала xs:dateTime
//  endDate - Конечная дата интервала xs:dateTime
//  Item - элемент списка, возвращаемый параметр
//  Params - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetProductChangesListNext(beginDate, endDate = Неопределено, Item, Params, пОтказ = Ложь, пОшибка = "") Экспорт
	
	//Если Ветис.Настройки_ОберткаHttp() Тогда
	//	Возврат ВетисRegistry_2_0.getProductChangesListNext(beginDate, endDate, product, Params, пОтказ, пОшибка);
	//КонецЕсли;
	
	Если Ветис.GetListItFirst(Params) Тогда
		Ветис.GetRefListInit(ИмяСервиса(), "GetProductChangesList", "product", "", Params,
			ВетисBase.DateInterval(beginDate, endDate));
	КонецЕсли;
	
	Возврат Ветис.GetRefListNext(Item, Params, пОтказ, пОшибка);
	
КонецФункции

// Предназначена для получения списка изменённых видов продукции
// Используется самостоятельно в цикле Пока.
// Параметры:
//  beginDate - Начальная дата интервала xs:dateTime
//  endDate - Конечная дата интервала xs:dateTime
//  Item - элемент списка, возвращаемый параметр
//  Params - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetSubProductChangesListNext(beginDate, endDate = Неопределено, Item, Params, пОтказ = Ложь, пОшибка = "") Экспорт
	
	//Если Ветис.Настройки_ОберткаHttp() Тогда
	//	Возврат ВетисRegistry_2_0.getSubProductChangesListNext(beginDate, endDate, subProduct, Params, пОтказ, пОшибка);
	//КонецЕсли;
	
	Если Ветис.GetListItFirst(Params) Тогда
		Ветис.GetRefListInit(ИмяСервиса(), "GetSubProductChangesList", "subProduct", "", Params,
			ВетисBase.DateInterval(beginDate, endDate));
	КонецЕсли;
	
	Возврат Ветис.GetRefListNext(Item, Params, пОтказ, пОшибка);
	
КонецФункции

// Предназначена для получения изменений в списке наименований продукции для номенклатуры предприятия-производителя
// Используется самостоятельно в цикле Пока.
// Параметры:
//  enterpriseGuid - Идентификатор предприятия, на котором производится или хранится продукция bs:UUID
//  beginDate - Начальная дата интервала xs:dateTime
//  endDate - Конечная дата интервала xs:dateTime
//  Item - элемент списка, возвращаемый параметр
//  Params - для внутреннего использования, начальное значение - Неопределено
// Возвращаемое значение:
//	Булево - Ложь значит список пройден весь
Функция GetProductItemChangesListNext(beginDate, endDate = Неопределено, Item, Params, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Перем businessEntity, enterprise, enterpriseGuid;
	
	Params = ?(Params = Неопределено, Новый Структура, Params);
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Params.Свойство("businessEntity", businessEntity);
		Params.Свойство("enterprise", enterprise);
		Возврат GetProductItemChangesListNext_2_0(businessEntity, enterprise, beginDate, endDate, Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Params.Свойство("businessEntity", businessEntity);
		Params.Свойство("enterprise", enterprise);
		Возврат GetProductItemChangesListNext_2_0(businessEntity, enterprise, beginDate, endDate, Item, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_1_4() Тогда
		Params.Свойство("enterpriseGuid", enterpriseGuid);
		Возврат GetProductItemChangesListNext_1_4(enterpriseGuid, beginDate, endDate, Item, Params, пОтказ, пОшибка);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции
Функция GetProductItemChangesListNext_2_0(businessEntity, enterprise, beginDate, endDate = Неопределено, Item, Params, пОтказ = Ложь, пОшибка = "")
	
	Params = ?(Params = Неопределено, Новый Структура, Params);
	
	Если Ветис.Настройки_ОберткаHttp() ИЛИ Params.Свойство("ОберткаHttp") Тогда
		Возврат ВетисRegistry.getProductItemChangesListNext(businessEntity, enterprise, beginDate, endDate, Item, Params, пОтказ, пОшибка);
	КонецЕсли;
	
	Если Ветис.GetListItFirst(Params) Тогда
		Ветис.GetRefListInit(ИмяСервиса(), "GetProductItemChangesList", "productItem", "", Params,
			ВетисBase.DateInterval(beginDate, endDate), businessEntity, enterprise);
	КонецЕсли;
	
	Возврат Ветис.GetRefListNext(Item, Params, пОтказ, пОшибка);
	
КонецФункции
Функция GetProductItemChangesListNext_1_4(enterpriseGuid, beginDate, endDate = Неопределено, Item, Params, пОтказ = Ложь, пОшибка = "")
	
	//Если Ветис.Настройки_ОберткаHttp() Тогда
	//	Возврат ВетисRegistry_2_0.getProductItemChangesListNext(enterpriseGuid, beginDate, endDate, productItem, Params, пОтказ, пОшибка);
	//КонецЕсли;
	
	Если Ветис.GetListItFirst(Params) Тогда
		Ветис.GetRefListInit(ИмяСервиса(), "GetProductItemChangesList", "productItem", "", Params,
			ВетисBase.DateInterval(beginDate, endDate), enterpriseGuid);
	КонецЕсли;
	
	Возврат Ветис.GetRefListNext(Item, Params, пОтказ, пОшибка);
	
КонецФункции


Функция ИмяСервиса() Экспорт
	
	Возврат Перечисления.ВетисСервис.ProductService;
	
КонецФункции

Функция Прокси()
	
	Возврат ВетисПовтИсп.Прокси(ИмяСервиса());
	
КонецФункции
