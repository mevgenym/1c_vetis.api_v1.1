
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НастроитьУсловноеОформление();
	
	Если Параметры.Свойство("Исходящие") Тогда
		Элементы.Отправитель.Видимость = Ложь;
		Элементы.ОтправительПредприятие.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("Входящие") Тогда
		Элементы.Получатель.Видимость = Ложь;
		Элементы.ПолучательПредприятие.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("Проведен") Тогда
		ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(Список.Отбор, "Проведен", Параметры.Проведен);
	КонецЕсли;
	
	Если Параметры.Свойство("Отправитель") Тогда
		ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(Список.Отбор, "Отправитель", Параметры.Отправитель);
	КонецЕсли;
	
	Если Параметры.Свойство("Получатель") Тогда
		ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(Список.Отбор, "Получатель", Параметры.Получатель);
	КонецЕсли;
	
	Если Параметры.Свойство("ОтправительПредприятие") Тогда
		ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(Список.Отбор, "ОтправительПредприятие", Параметры.ОтправительПредприятие);
	КонецЕсли;
	
	Если Параметры.Свойство("ПолучательПредприятие") Тогда
		ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(Список.Отбор, "ПолучательПредприятие", Параметры.ПолучательПредприятие);
	КонецЕсли;
	
	Если Параметры.Свойство("Статус") Тогда
		Если ТипЗнч(Параметры.Статус) = Тип("СписокЗначений") Тогда
			ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(Список.Отбор, "Статус", Параметры.Статус, "ВСписке");
		Иначе
			ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(Список.Отбор, "Статус", Параметры.Статус);
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("Тип") Тогда
		Если ТипЗнч(Параметры.Статус) = Тип("СписокЗначений") Тогда
			ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(Список.Отбор, "Тип", Параметры.Тип, "ВСписке");
		Иначе
			ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(Список.Отбор, "Тип", Параметры.Тип);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	
	
КонецПроцедуры


&НаСервере
Процедура НастроитьУсловноеОформление()
	
	НастроитьУсловноеОформлениеДобавить(Новый Цвет(255, 255, 153), "Оформлен", "Транспортный");
	НастроитьУсловноеОформлениеДобавить(Новый Цвет(204, 255, 255), "Оформлен", "Возвратный");
	НастроитьУсловноеОформлениеДобавить(WebЦвета.Розовый, "Аннулирован");
	НастроитьУсловноеОформлениеДобавить(Новый Цвет(204, 255, 204), "Погашен");
	
КонецПроцедуры

&НаСервере
Процедура НастроитьУсловноеОформлениеДобавить(пЦвет, пСтатус = Неопределено, пТип = Неопределено)
	
	_уо = УсловноеОформление.Элементы.Добавить();
	
	_уо.Использование = Истина;
	
	_уо.Оформление.УстановитьЗначениеПараметра("ЦветФона", пЦвет);
	
	Если НЕ пСтатус = Неопределено Тогда
		_отбор = _уо.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		_отбор.Использование = Истина;
		_отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.Статус");
		_отбор.ПравоеЗначение = Перечисления.ВетисVetDocumentStatus[пСтатус];
	КонецЕсли;
	
	Если НЕ пТип = Неопределено Тогда
		_отбор = _уо.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		_отбор.Использование = Истина;
		_отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.Тип");
		_отбор.ПравоеЗначение = Перечисления.ВетисVetDocumentType[пТип];
	КонецЕсли;
	
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "Дата");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "Номер");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "ДатаВСД");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "НомерВСД");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "Отправитель");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "ОтправительПредприятие");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "Получатель");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "ПолучательПредприятие");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "SubProduct");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "ProductItem");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "Количество");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "uuid");
	
КонецПроцедуры

Процедура НастроитьУсловноеОформлениеДобавитьПоле(пУО, пИмяПоля)
	
	_поле = пУО.Поля.Элементы.Добавить();
	_поле.Использование = Истина;
	_поле.Поле = Новый ПолеКомпоновкиДанных(пИмяПоля);
	
КонецПроцедуры
