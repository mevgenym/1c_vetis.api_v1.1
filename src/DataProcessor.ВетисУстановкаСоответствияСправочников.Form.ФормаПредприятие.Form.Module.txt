
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Guid") Тогда
		Guid = Параметры.Guid;
	КонецЕсли;
	
	Если Параметры.Свойство("Предприятие") Тогда
		Объект.Предприятие = Параметры.Предприятие;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Guid) И НЕ ЗначениеЗаполнено(Объект.Предприятие) Тогда
		Объект.Предприятие = Ветис.Соответствие_ПолучитьСсылку(Guid, "Справочник.ВетисEnterprise");
		ЕстьСвязь = ЗначениеЗаполнено(Объект.Предприятие);
	ИначеЕсли НЕ ЗначениеЗаполнено(Guid) И ЗначениеЗаполнено(Объект.Предприятие) Тогда
		Guid = Ветис.Соответствие_ПолучитьGuid(Объект.Предприятие);
		ЕстьСвязь = ЗначениеЗаполнено(Guid);
	Иначе
		ЕстьСвязь = Guid = Ветис.Соответствие_ПолучитьGuid(Объект.Предприятие);
	КонецЕсли;
	
	Элементы.ДекорацияСвязь.Картинка = ?(ЕстьСвязь, БиблиотекаКартинок.ВетисЕстьСвязь, БиблиотекаКартинок.ВетисНетСвязи);
	
	КомандаНайтиПоGuidСервер();
	
	Если НЕ ЗначениеЗаполнено(Объект.Предприятие) И ЗначениеЗаполнено(Наименование) Тогда
		Объект.Предприятие = Справочники.ВетисEnterprise.НайтиПоНаименованию(Наименование);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаГотово(Команда)
	
	Если ЕстьСвязь = Ложь Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("СоздатьСвязьОбработкаОповещения", ЭтаФорма), "Создать связь?", РежимДиалогаВопрос.ДаНетОтмена);
	Иначе
		Закрыть(Объект.Предприятие);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСвязьОбработкаОповещения(пРезультат, пПараметры) Экспорт
	
	Если пРезультат = КодВозвратаДиалога.Да Тогда
		
		ВетисВызовСервера.Соответствие_Добавить(Объект.Предприятие, Guid, Наименование);
		
		Закрыть(Объект.Предприятие);
		
	ИначеЕсли пРезультат = КодВозвратаДиалога.Нет Тогда
		
		Закрыть(Объект.Предприятие);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаНайти(Команда)
	
	КомандаНайтиПоGuidСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаДобавить(Команда)
	
	_оо = Новый ОписаниеОповещения("КомандаДобавитьОбработкаОповещения", ЭтаФорма);
	
	_форма = ОткрытьФорму("Справочник.ВетисEnterprise.ФормаОбъекта",,,,,,_оо);
	
	ЗаполнитьЗначенияСвойств(_форма.Объект, ЭтаФорма,,"ВидыДеятельности,НомераПредприятия");
	
	Для каждого _ФормаСтрока Из НомераПредприятия Цикл
		_ОбъектСтрока = _форма.Объект.НомераПредприятия.Добавить();
		_ОбъектСтрока.Номер = _ФормаСтрока.Номер;
	КонецЦикла;
	
	Для каждого _ФормаСтрока Из ВидыДеятельности Цикл
		_ОбъектСтрока = _форма.Объект.ВидыДеятельности.Добавить();
		_ОбъектСтрока.Наименование = _ФормаСтрока.Наименование;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаДобавитьОбработкаОповещения(пРезультат, пПараметры) Экспорт
	
	Если НЕ пРезультат = Неопределено Тогда
		
		Объект.Предприятие = пРезультат;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияЕстьСвязь1Нажатие(Элемент)
	
	ЕстьСвязь = НЕ ЕстьСвязь;
	
	Если ЕстьСвязь Тогда
		ВетисВызовСервера.Соответствие_Добавить(Объект.Предприятие, Guid, Наименование);
	Иначе
		ВетисВызовСервера.Соответствие_УдалитьУС(Объект.Предприятие);
	КонецЕсли;
	
	Элементы.ДекорацияСвязь.Картинка = ?(ЕстьСвязь, БиблиотекаКартинок.ВетисЕстьСвязь, БиблиотекаКартинок.ВетисНетСвязи);
	
КонецПроцедуры


&НаКлиенте
Процедура GuidПриИзменении(Элемент)
	
	ЕстьСвязь = Guid = ВетисВызовСервера.Соответствие_ПолучитьGuid(Объект.Предприятие);
	
	Элементы.ДекорацияСвязь.Картинка = ?(ЕстьСвязь, БиблиотекаКартинок.ВетисЕстьСвязь, БиблиотекаКартинок.ВетисНетСвязи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредприятиеПриИзменении(Элемент)
	
	ЕстьСвязь = Guid = ВетисВызовСервера.Соответствие_ПолучитьGuid(Объект.Предприятие);
	
	Элементы.ДекорацияСвязь.Картинка = ?(ЕстьСвязь, БиблиотекаКартинок.ВетисЕстьСвязь, БиблиотекаКартинок.ВетисНетСвязи);
	
КонецПроцедуры


&НаСервере
Процедура КомандаНайтиПоGuidСервер()
	
	Если ЗначениеЗаполнено(Guid) Тогда
		
		_Версия20 = Ветис.Версия_2_0();
		
		_enterprise = ?(_Версия20, ВетисEnterpriseService_2_0, ВетисEnterpriseService).GetEnterpriseByGuid(Guid);
		
		Элементы.ГруппаПредупреждение.Видимость = _enterprise = Неопределено;
		Элементы.ГруппаРеквизиты.Видимость = НЕ _enterprise = Неопределено;
		
	КонецЕсли;
	
	Если НЕ _enterprise = Неопределено Тогда
		Наименование = _enterprise.Name;
		
		Тип =  ?(_Версия20, ВетисDictionaryСлой1с, ВетисCerberusEnterpriseСлой1с).EnterpriseType(_enterprise.type);
		
		Собственник = ?(_Версия20, ВетисDictionaryСлой1с, ВетисCerberusEnterpriseСлой1с).BusinessEntity(_enterprise.owner);
		
		Если НЕ _enterprise.address = Неопределено Тогда
			Страна = ?(_Версия20, ВетисDictionaryСлой1с, ВетисIkarСлой1с).Country(_enterprise.address.country);
			Регион = ?(_Версия20, ВетисDictionaryСлой1с, ВетисIkarСлой1с).Region(_enterprise.address.region);
			Район = ?(_Версия20, ВетисDictionaryСлой1с, ВетисIkarСлой1с).District(_enterprise.address.district);
			НаселенныйПункт = ?(_Версия20, ВетисDictionaryСлой1с, ВетисIkarСлой1с).Locality(_enterprise.address.locality);
			АдресПредставление = _enterprise.address.addressView;
		КонецЕсли;
		
		НомераПредприятия.Очистить();
		Если НЕ _enterprise.numberList = Неопределено Тогда
			Для каждого _enterpriseNumber Из _enterprise.numberList.enterpriseNumber Цикл
				_строка = НомераПредприятия.Добавить();
				_строка.Номер = _enterpriseNumber;
			КонецЦикла;
		КонецЕсли;
		
		ВидыДеятельности.Очистить();
		Если НЕ _enterprise.activityList = Неопределено Тогда
			Для каждого _activity Из _enterprise.activityList.activity Цикл
				_строка = ВидыДеятельности.Добавить();
				_строка.Наименование = _activity.name;
			КонецЦикла;
		КонецЕсли;
	Иначе
		Наименование = "";
		Тип =  Неопределено;
		Собственник = Неопределено;
		Страна = Неопределено;
		Регион = Неопределено;
		Район = Неопределено;
		НаселенныйПункт = Неопределено;
		АдресПредставление = Неопределено;
		НомераПредприятия.Очистить();
		ВидыДеятельности.Очистить();
	КонецЕсли;
	
КонецПроцедуры
