
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОтправительСвязь = Истина;
	
	ПолучательСвязь = Истина;
	
	Элементы.ГруппаДокументОснование.Видимость = Ветис.Настройки_Интеграция();
	
	ОбновитьСтатусы();
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимостьКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Параметр = ЭтаФорма.ИмяФормы Тогда
		//
	ИначеЕсли ИмяСобытия = "ВетисНастройки" Тогда
		//Возникает ошибка: Отсутствует отображение для типа 'ДанныеФормыЭлементКоллекции'
		//УстановитьВидимость(ИмяСобытия);
	ИначеЕсли ИмяСобытия = "ВетисВерсия" Тогда
		//Возникает ошибка: Отсутствует отображение для типа 'ДанныеФормыЭлементКоллекции'
		//УстановитьВидимость(ИмяСобытия);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаОтправить(Команда)
	
	Перем _Отказ, _Ошибка;
	
	Если НЕ Объект.Проведен Тогда
		Предупреждение("Перед операцией документ необходимо провести");
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		Предупреждение("Перед операцией документ необходимо записать");
		Возврат;
	КонецЕсли;
	
	КомандаОтправитьНаСервере(_Отказ, _Ошибка);
	
	Если _Отказ = Истина Тогда
		Сообщить(_Ошибка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьПоДокументу(Команда)
	
	//заполнить по поступлению
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПодобратьВСД(Команда)
	
	ПодобратьВСДСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыбратьУсловияПеремещения(Команда)
	
	КомандаВыбратьУсловияПеремещенияНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура КомандаВыбратьУсловияПеремещенияНаСервере()
	
	//сделать: запрос на условия регионализации
	
КонецПроцедуры


&НаКлиенте
Процедура ОтправительПриИзменении(Элемент)
	
	Объект.ОтправительПредприятие = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправительПредприятиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ОтправительСвязь Тогда
		СтандартнаяОбработка = Ложь;
		Если ЗначениеЗаполнено(Объект.Отправитель) Тогда
			ОткрытьФорму("Справочник.ВетисEnterprise.ФормаВыбора", Новый Структура("BusinessEntity", Объект.Отправитель),,,,,Новый ОписаниеОповещения("ОтправительПредприятиеОбработкаОповещения",ЭтаФорма));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправительПредприятиеОбработкаОповещения(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		Модифицированность = Истина;
		Объект.ОтправительПредприятие = Результат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправительСвязьНажатие(Элемент)
	
	ОтправительСвязь = НЕ ОтправительСвязь;
	
	УстановитьВидимостьКлиент("ОтправительСвязь");
	
КонецПроцедуры


&НаКлиенте
Процедура ПолучательПриИзменении(Элемент)
	
	Объект.ПолучательПредприятие = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучательПредприятиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ПолучательСвязь Тогда
		СтандартнаяОбработка = Ложь;
		Если ЗначениеЗаполнено(Объект.Получатель) Тогда
			ОткрытьФорму("Справочник.ВетисEnterprise.ФормаВыбора", Новый Структура("BusinessEntity", Объект.Получатель),,,,,Новый ОписаниеОповещения("ПолучательПредприятиеОбработкаОповещения",ЭтаФорма));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучательПредприятиеОбработкаОповещения(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		Модифицированность = Истина;
		Объект.ПолучательПредприятие = Результат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучательСвязьНажатие(Элемент)
	
	ПолучательСвязь = НЕ ПолучательСвязь;
	
	УстановитьВидимостьКлиент("ПолучательСвязь");
	
КонецПроцедуры


&НаКлиенте
Процедура ТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	//Если Поле.Имя = "ТоварыВозвратныйВСД" Тогда
	//	//ОткрытьЗначение(Элементы.Товары.ТекущиеДанные.ВозвратныйВСД);
	//ИначеЕсли Поле.Имя = "ТоварыВСД" И ЗначениеЗаполнено(Элементы.Товары.ТекущиеДанные.guid) Тогда
	//	//ОткрытьЗначение(Элементы.Товары.ТекущиеДанные.ВСД);
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Копирование;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередУдалением(Элемент, Отказ)
	
	Если Элемент.ТекущиеДанные.Статус = ПредопределенноеЗначение("Перечисление.ВетисVetDocumentStatus.Погашен")
		ИЛИ Элемент.ТекущиеДанные.Статус = ПредопределенноеЗначение("Перечисление.ВетисVetDocumentStatus.Аннулирован")
		Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Для каждого _СтрокаУпаковка Из Объект.Упаковка.НайтиСтроки(Новый Структура("КлючСвязи", Элемент.ТекущиеДанные.КлючСтроки)) Цикл
		Для каждого _СтрокаМаркировка Из Объект.Маркировка.НайтиСтроки(Новый Структура("КлючСвязи", _СтрокаУпаковка.КлючСтроки)) Цикл
			Объект.Маркировка.Удалить(_СтрокаМаркировка);
		КонецЦикла;
		Объект.Упаковка.Удалить(_СтрокаУпаковка);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриАктивизацииСтроки(Элемент)
	
	_ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если _ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.Упаковка.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСвязи", _ТекущиеДанные.КлючСтроки);
	
	_СтрокиУпаковка = Объект.Упаковка.НайтиСтроки(Новый Структура("КлючСвязи", _ТекущиеДанные.КлючСтроки));
	Если _СтрокиУпаковка.Количество() > 0 Тогда
		Элементы.Упаковка.ТекущаяСтрока = _СтрокиУпаковка[0];
		Элементы.Маркировка.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСвязи", _СтрокиУпаковка[0].КлючСтроки);
	Иначе
		Элементы.Маркировка.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСвязи", 0);
	КонецЕсли;
	
	//Элементы.АктОписание.ПутьКДанным = "Объект.Товары["+Элементы.Товары.ТекущаяСтрока+"].АктОписание";
	
	Элементы.УпаковкаКоличествоВозврат.Видимость = _ТекущиеДанные.Возврат;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.КлючСтроки = ПолучитьКлючСтрокиТовары();
		Элементы.Упаковка.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСвязи", Элемент.ТекущиеДанные.КлючСтроки);
		Если НЕ Элементы.Упаковка.ТекущаяСтрока = Неопределено Тогда
			_ТекущиеДанные = Объект.Упаковка.НайтиПоИдентификатору(Элементы.Упаковка.ТекущаяСтрока);
			Если НЕ _ТекущиеДанные = Неопределено Тогда
				Элементы.Маркировка.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСвязи", _ТекущиеДанные.КлючСтроки);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыSubProductПриИзменении(Элемент)
	
	ЗаполнитьЗначенияСвойств(Элементы.Товары.ТекущиеДанные, ПолучитьProduct(Элементы.Товары.ТекущиеДанные.SubProduct));
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыProductItemПриИзменении(Элемент)
	
	ЗаполнитьЗначенияСвойств(Элементы.Товары.ТекущиеДанные, ПолучитьProduct(Элементы.Товары.ТекущиеДанные.ProductItem));
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьProduct(пСсылка)
	
	Если ТипЗнч(пСсылка) = Тип("СправочникСсылка.ВетисSubProduct") Тогда
		Возврат Новый Структура("ProductType,Product", пСсылка.ProductType, пСсылка.Product);
	ИначеЕсли ТипЗнч(пСсылка) = Тип("СправочникСсылка.ВетисProductItem") Тогда
		Возврат Новый Структура("ProductType,Product,SubProduct", пСсылка.ProductType, пСсылка.Product, пСсылка.SubProduct);
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ТоварыВСДПриИзменении(Элемент = Неопределено)
	
	Если НЕ ЗначениеЗаполнено(Элементы.Товары.ТекущиеДанные.ВСД) Тогда
		Возврат;
	КонецЕсли;
	
	ПодобратьВСДСервер(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущиеДанные.ВСД);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыВСДНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	_Статус = Новый СписокЗначений;
	_Статус.Добавить(ПредопределенноеЗначение("Перечисление.ВетисVetDocumentStatus.ПустаяСсылка"));
	_Статус.Добавить(ПредопределенноеЗначение("Перечисление.ВетисVetDocumentStatus.Оформлен"));
	
	_Тип = Новый СписокЗначений;
	_Тип.Добавить(ПредопределенноеЗначение("Перечисление.ВетисVetDocumentType.ПустаяСсылка"));
	//_Тип.Добавить(ПредопределенноеЗначение("Перечисление.ВетисVetDocumentType.Входящий"));
	_Тип.Добавить(ПредопределенноеЗначение("Перечисление.ВетисVetDocumentType.Транспортный"));
	
	_Параметры = Новый Структура("Ключ, Статус, Тип, Входящие, Исходящие", Элементы.Товары.ТекущиеДанные.ВСД, _Статус, _Тип);
	
	_Параметры.Вставить("Отправитель", Объект.Отправитель);
	_Параметры.Вставить("Получатель", Объект.Получатель);
	_Параметры.Вставить("ОтправительПредприятие", Объект.ОтправительПредприятие);
	_Параметры.Вставить("ПолучательПредприятие", Объект.ПолучательПредприятие);
	
	_оо = Новый ОписаниеОповещения("ТоварыВСДНачалоВыбораОбработкаОповещения", ЭтаФорма);
	
	ОткрытьФорму("Документ.ВетисВетеринарноСопроводительныйДокумент.ФормаВыбора", _Параметры,,,,, _оо);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыВСДНачалоВыбораОбработкаОповещения(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		
		Элементы.Товары.ТекущиеДанные.ВСД = Результат;
		
		//ТоварыВСДПриИзменении();
		
		ПодобратьВСДСервер(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущиеДанные.ВСД);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоВозвратПриИзменении(Элемент)
	
	//ПоказатьВопрос(Новый ОписаниеОповещения("ТоварыКоличествоВозвратОбработкаОповещения", ЭтаФорма), "Пересчитать количество принятого?", РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоВозвратОбработкаОповещения(пРезультат, пПараметры) Экспорт
	
	Если пРезультат = КодВозвратаДиалога.Да Тогда
		
		_ТекущиеДанные = Элементы.ТоварыВозврат.ТекущиеДанные;
		
		_ТекущиеДанные.Количество = _ТекущиеДанные.КоличествоВСД - _ТекущиеДанные.КоличествоВозврат;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоМестПриИзменении(Элемент)
	
	//только для одноуровневой упаковки
	
	_ТекущиеДанные = ?(ТекущийЭлемент = Элементы.Товары, Элементы.Товары.ТекущиеДанные, Элементы.ТоварыВозврат.ТекущиеДанные);
	
	_СтрокиУпаковка = Объект.Упаковка.НайтиСтроки(Новый Структура("КлючСвязи", _ТекущиеДанные.КлючСтроки));
	
	Если _СтрокиУпаковка.Количество() > 0 Тогда
		_СтрокаУпаковка = _СтрокиУпаковка[0];
		_СтрокиМаркировка = Объект.Маркировка.НайтиСтроки(Новый Структура("КлючСвязи", _СтрокаУпаковка.КлючСтроки));
		Если _СтрокиМаркировка.Количество() > 0 Тогда
			_СтрокиМаркировка[0].Маркировка = _ТекущиеДанные.Маркировка;
		КонецЕсли;
	Иначе
		_СтрокаУпаковка = Объект.Упаковка.Добавить();
		_СтрокаУпаковка.КлючСтроки = ПолучитьКлючСтрокиУпаковка();
		_СтрокаУпаковка.КлючСвязи = _ТекущиеДанные.КлючСтроки;
		_СтрокаУпаковка.Уровень = ВетисВызовСервера.Настройки_УровеньУпаковки();
		_СтрокаМаркировка = Объект.Маркировка.Добавить();
		_СтрокаМаркировка.КлючСвязи = _СтрокаУпаковка.КлючСтроки;
		_СтрокаМаркировка.Маркировка = _ТекущиеДанные.Маркировка;
		_СтрокаМаркировка.КлассМаркировки = ВетисВызовСервера.Настройки_КлассМаркировки();
	КонецЕсли;
	
	_СтрокаУпаковка.Количество = _ТекущиеДанные.КоличествоМест;
	_СтрокаУпаковка.КоличествоВозврат = _ТекущиеДанные.КоличествоМестВозврат;
	_СтрокаУпаковка.Упаковка = _ТекущиеДанные.Упаковка;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоМестВозвратПриИзменении(Элемент)
	
	ТоварыКоличествоМестПриИзменении(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыУпаковкаПриИзменении(Элемент)
	
	ТоварыКоличествоМестПриИзменении(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыМаркировкаПриИзменении(Элемент)
	
	ТоварыКоличествоМестПриИзменении(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНуженВозвратПриИзменении(Элемент)
	
	Если Элементы.Товары.ТекущиеДанные.Возврат Тогда
		ПоказатьВводЧисла(Новый ОписаниеОповещения("ТоварыНуженВозвратПриИзмененииОбработкаОповещения", ЭтаФорма), Элементы.Товары.ТекущиеДанные.Количество, "Укажите принятый объем", 15, 3);
	КонецЕсли;
	
	Элементы.УпаковкаКоличествоВозврат.Видимость = Элементы.Товары.ТекущиеДанные.Возврат;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНуженВозвратПриИзмененииОбработкаОповещения(пРезультат, пПараметры) Экспорт
	
	Если НЕ пРезультат = Неопределено Тогда
		
		_ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
		
		_ТекущиеДанные.Количество = пРезультат;
		
		_ТекущиеДанные.КоличествоВозврат = _ТекущиеДанные.КоличествоВСД - _ТекущиеДанные.Количество;
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура УпаковкаПриАктивизацииСтроки(Элемент)
	
	_ТекущиеДанные = Элементы.Упаковка.ТекущиеДанные;
	
	Если _ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.Маркировка.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСвязи", _ТекущиеДанные.КлючСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура УпаковкаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Элементы.Товары.ТекущиеДанные = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура УпаковкаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.КлючСвязи = Элементы.Товары.ТекущиеДанные.КлючСтроки;
		Элемент.ТекущиеДанные.КлючСтроки = ПолучитьКлючСтрокиУпаковка();
		Элементы.Маркировка.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСвязи", Элемент.ТекущиеДанные.КлючСтроки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УпаковкаПередУдалением(Элемент, Отказ)
	
	Для каждого _Строка Из Объект.Маркировка.НайтиСтроки(Новый Структура("КлючСвязи", Элемент.ТекущиеДанные.КлючСтроки)) Цикл
		Объект.Маркировка.Удалить(_Строка);
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура МаркировкаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Элементы.Упаковка.ТекущиеДанные = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура МаркировкаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	_ТекущиеДанные = Элементы.Упаковка.ТекущиеДанные;
	
	Если _ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.КлючСвязи = _ТекущиеДанные.КлючСтроки;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура СоставитьАктНесоответствияПриИзменении(Элемент)
	
	Элементы.ГруппаАктНесоответствияКолонка.Доступность = Объект.СоставитьАктНесоответствия;
	
КонецПроцедуры


&НаСервере
Процедура КомандаОтправитьНаСервере(пОтказ = Ложь, пОшибка = "")
	
	_структура = ВетисОбщегоНазначения.ПолучитьСтруктуруОбъекта(Объект.Ссылка);
	
	Для каждого _СтрокаТовары Из _структура.Товары Цикл
		_СтрокаТовары.Всд = ВетисОбщегоНазначения.ПолучитьСтруктуруОбъекта(_СтрокаТовары.Всд);
	КонецЦикла;
	
	ВетисMercuryApplicationsСлой1с.IncomingOperation(_структура, пОтказ, пОшибка);
	
	Если НЕ пОтказ = Истина Тогда
		Модифицированность = Истина;
		Для каждого _структураСтрокаТовары Из _структура.Товары Цикл
			_СтрокаТовары = Объект.Товары.Получить(_структураСтрокаТовары.НомерСтроки-1);
			_СтрокаТовары.Всд             = _структураСтрокаТовары.Всд.Ссылка;
			_СтрокаТовары.Статус          = _структураСтрокаТовары.Всд.Статус;
			_СтрокаТовары.ВозвратныйВСД   = _структураСтрокаТовары.ВозвратныйВСД.Ссылка;
			_СтрокаТовары.АктПричина      = _структураСтрокаТовары.АктПричина;
			_СтрокаТовары.АктОписание     = _структураСтрокаТовары.АктОписание;
			_СтрокаТовары.РезультатПриема = _структураСтрокаТовары.РезультатПриема;
			_СтрокаТовары.РезультатВетКонтроля = _структураСтрокаТовары.РезультатВетКонтроля;
			_СтрокаТовары.РешениеОПриеме  = _структураСтрокаТовары.РешениеОПриеме;
		КонецЦикла;
		Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПодобратьВСДСервер(пСтрокаСЖ = Неопределено, пВСД = Неопределено)
	
	Если пСтрокаСЖ = Неопределено Тогда
		Объект.Товары.Очистить();
		Объект.Упаковка.Очистить();
		Объект.Маркировка.Очистить();
	Иначе
		_ТоварыСтрока = Объект.Товары.НайтиПоИдентификатору(пСтрокаСЖ);
		Для каждого _УпаковкаСтрока Из Объект.Упаковка.НайтиСтроки(Новый Структура("КлючСвязи", _ТоварыСтрока.КлючСтроки)) Цикл
			Объект.Упаковка.Удалить(_УпаковкаСтрока);
			Для каждого _МаркировкаСтрока Из Объект.Маркировка.НайтиСтроки(Новый Структура("КлючСвязи", _УпаковкаСтрока.КлючСтроки)) Цикл
				Объект.Маркировка.Удалить(_МаркировкаСтрока);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	_Таблица.Ссылка,
	|	_Таблица.Статус,
	|	_Таблица.uuid,
	|	_Таблица.Товары.(
	|		Ссылка,
	|		ProductType,
	|		Product,
	|		SubProduct,
	|		ProductItem,
	|		ProductItemName,
	|		ЕдиницаИзмерения,
	|		Количество,
	|		Количество КАК КоличествоВСД,
	|		ДатаВыработкиНачало,
	|		ДатаВыработкиКонец,
	|		ДатаВыработкиСтрокой,
	|		СрокГодностиНачало,
	|		СрокГодностиКонец,
	|		СрокГодностиСтрокой,
	|		СтранаПроисхождения,
	|		Скоропортящаяся,
	|		НекачественныйГруз,
	|		Собственник
	|	),
	|	_Таблица.Упаковка.(
	|		Ссылка,
	|		НомерСтроки,
	|		КлючСтроки,
	|		Уровень,
	|		Упаковка,
	|		Количество,
	|		Количество КАК КоличествоВСД
	|	),
	|	_Таблица.Маркировка.(
	|		Ссылка,
	|		НомерСтроки,
	|		КлючСвязи,
	|		Маркировка,
	|		КлассМаркировки
	|	)
	|ИЗ
	|	Документ.ВетисВетеринарноСопроводительныйДокумент КАК _Таблица
	|ГДЕ
	|	ИСТИНА
	|	И _Таблица.Ссылка.Проведен
	|	И _Таблица.Ссылка.Статус В (ЗНАЧЕНИЕ(Перечисление.ВетисVetDocumentStatus.ПустаяСсылка), ЗНАЧЕНИЕ(Перечисление.ВетисVetDocumentStatus.Оформлен))
	|	И _Таблица.Ссылка.Тип В (ЗНАЧЕНИЕ(Перечисление.ВетисVetDocumentType.ПустаяСсылка), ЗНАЧЕНИЕ(Перечисление.ВетисVetDocumentType.Транспортный))
	|	И _Таблица.Ссылка.Отправитель = &Отправитель
	|	И _Таблица.Ссылка.ОтправительПредприятие = &ОтправительПредприятие
	|	И _Таблица.Ссылка.Получатель = &Получатель
	|	И _Таблица.Ссылка.ПолучательПредприятие = &ПолучательПредприятие
	|//1	И _Таблица.Ссылка = &Ссылка
	|	И ИСТИНА";
	
	Запрос.УстановитьПараметр("Ссылка", пВСД);
	Запрос.УстановитьПараметр("Отправитель", Объект.Отправитель);
	Запрос.УстановитьПараметр("Получатель", Объект.Получатель);
	Запрос.УстановитьПараметр("ОтправительПредприятие", Объект.ОтправительПредприятие);
	Запрос.УстановитьПараметр("ПолучательПредприятие", Объект.ПолучательПредприятие);
	
	Если НЕ пСтрокаСЖ = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//1", "");
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	_ОтборМаркировка = Новый Структура("КлючСвязи");
	Пока Выборка.Следующий() Цикл
		Если пСтрокаСЖ = Неопределено Тогда
			_ТоварыСтрока = Объект.Товары.Добавить();
		КонецЕсли;
		_ТоварыСтрока.КлючСтроки = _ТоварыСтрока.НомерСтроки;
		_ТоварыСтрока.ВСД = Выборка.Ссылка;
		_ТоварыСтрока.Статус = Выборка.Статус;
		_ВыборкаТовары = Выборка.Товары.Выбрать();
		_ВыборкаУпаковка = Выборка.Упаковка.Выбрать();
		_ВыборкаМаркировка = Выборка.Маркировка.Выбрать();
		Пока _ВыборкаТовары.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(_ТоварыСтрока, _ВыборкаТовары);
			Пока _ВыборкаУпаковка.Следующий() Цикл
				_УпаковкаСтрока = Объект.Упаковка.Добавить();
				ЗаполнитьЗначенияСвойств(_УпаковкаСтрока, _ВыборкаУпаковка);
				_УпаковкаСтрока.КлючСтроки = _УпаковкаСтрока.НомерСтроки;
				_УпаковкаСтрока.КлючСвязи = _ТоварыСтрока.КлючСтроки;
				_ОтборМаркировка.КлючСвязи = _ВыборкаУпаковка.КлючСтроки;
				_ВыборкаМаркировка.Сбросить();
				Пока _ВыборкаМаркировка.НайтиСледующий(_ОтборМаркировка) Цикл
					_МаркировкаСтрока = Объект.Маркировка.Добавить();
					ЗаполнитьЗначенияСвойств(_МаркировкаСтрока, _ВыборкаМаркировка);
					_МаркировкаСтрока.КлючСвязи = _УпаковкаСтрока.КлючСтроки;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Модифицированность = Истина;
	
КонецПроцедуры


&НаСервере
Процедура ОбновитьСтатусы()
	
	Для каждого _ТоварыСтрока Из Объект.Товары Цикл
		Если НЕ _ТоварыСтрока.Статус = _ТоварыСтрока.ВСД.Статус Тогда
			_ТоварыСтрока.Статус = _ТоварыСтрока.ВСД.Статус;
			Модифицированность = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьКлиент(пИмяСобытия = Неопределено)
	
	Если пИмяСобытия = "ОтправительСвязь" ИЛИ пИмяСобытия = Неопределено Тогда
		Элементы.ОтправительСвязь.Подсказка = ?(ОтправительСвязь, "с учетом связи", "без учета связи");
		Элементы.ОтправительСвязь.Картинка = ?(ОтправительСвязь, БиблиотекаКартинок.ВетисЕстьСвязь, БиблиотекаКартинок.ВетисНетСвязи);
	КонецЕсли;
	
	Если пИмяСобытия = "ПолучательСвязь" ИЛИ пИмяСобытия = Неопределено Тогда
		Элементы.ПолучательСвязь.Подсказка = ?(ПолучательСвязь, "с учетом связи", "без учета связи");
		Элементы.ПолучательСвязь.Картинка = ?(ПолучательСвязь, БиблиотекаКартинок.ВетисЕстьСвязь, БиблиотекаКартинок.ВетисНетСвязи);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимость(пИмяСобытия = Неопределено)
	
	Если пИмяСобытия = Неопределено ИЛИ пИмяСобытия = "ВетисНастройки" ИЛИ пИмяСобытия = "ВетисВерсия" Тогда
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьКлючСтрокиТовары()
	
	_список = Объект.Товары.Выгрузить().ВыгрузитьКолонку("КлючСтроки");
	
	Для _Индекс = 1 По 999 Цикл
		Если _список.Найти(_Индекс) = Неопределено Тогда
			Возврат _Индекс;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

&НаСервере
Функция ПолучитьКлючСтрокиУпаковка()
	
	_список = Объект.Упаковка.Выгрузить().ВыгрузитьКолонку("КлючСтроки");
	
	Для _Индекс = 1 По 999 Цикл
		Если _список.Найти(_Индекс) = Неопределено Тогда
			Возврат _Индекс;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции
