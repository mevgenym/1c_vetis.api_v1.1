
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	#Если МобильноеПриложениеСервер Тогда
		Элементы.ОтборПредприятие.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.ОтборХС.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.СписокВСДАннулировать.Видимость = Ложь;
		//Элементы.ГруппаОтборUuid.Видимость = Ложь;
	#КонецЕсли
	
	//СкладскойЖурналПоследние = Истина;
	
	НастроитьУсловноеОформление();
	
	Версия = Ветис.Версия();
	
	ОтборСписокВСДТип.Добавить(Перечисления.ВетисVetDocumentType.Транспортный,,Истина);
	ОтборСписокВСДТип.Добавить(Перечисления.ВетисVetDocumentType.Возвратный,,Истина);
	ОтборСписокВСДТип.Добавить(Перечисления.ВетисVetDocumentType.Производственный);
	//ОтборСписокВСДТип.Добавить(Перечисления.ВетисVetDocumentType.Входящий);
	//ОтборСписокВСДТип.Добавить(Перечисления.ВетисVetDocumentType.Исходящий);
	
	ОтборСписокВСДСтатус.Добавить(Перечисления.ВетисVetDocumentStatus.Оформлен,,Истина);
	ОтборСписокВСДСтатус.Добавить(Перечисления.ВетисVetDocumentStatus.Погашен);
	ОтборСписокВСДСтатус.Добавить(Перечисления.ВетисVetDocumentStatus.Аннулирован);
	
	ОтборСписокВходящиеПартииСтатус.Добавить(Перечисления.ВетисVetDocumentStatus.Оформлен,,Истина);
	ОтборСписокВходящиеПартииСтатус.Добавить(Перечисления.ВетисVetDocumentStatus.Погашен);
	ОтборСписокВходящиеПартииСтатус.Добавить(Перечисления.ВетисVetDocumentStatus.Аннулирован);
	
	ОтборСписокТранспортныеПартииСтатус.Добавить(Перечисления.ВетисVetDocumentStatus.Оформлен,,Истина);
	ОтборСписокТранспортныеПартииСтатус.Добавить(Перечисления.ВетисVetDocumentStatus.Погашен,,Истина);
	ОтборСписокТранспортныеПартииСтатус.Добавить(Перечисления.ВетисVetDocumentStatus.Аннулирован);
	
	Элементы.ГруппаСкладскойЖурнал.Видимость = Ветис.РазрешенаОтладка();
	
	ОтборХС = ВетисПовтИсп.Настройки_ОсновнойХС();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	//Ветис.ИнициализироватьНастройкиХС(ОтборХС);
	
	Если НЕ ЗначениеЗаполнено(ОтборХС) Тогда
		ОтборХС = ВетисПовтИсп.Настройки_ОсновнойХС();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		АвтоЗаголовок = Истина;
	#КонецЕсли
	
	Для каждого _Настройка Из СохраняемыеНастройки Цикл
		Если _Настройка.Представление = "ОтборСписокВСДСтатус" Тогда
			Для каждого _Элемент Из ОтборСписокВСДСтатус Цикл
				_Элемент.Пометка = НЕ _Настройка.Значение.Найти(_Элемент.Значение) = Неопределено;
			КонецЦикла;
		ИначеЕсли _Настройка.Представление = "ОтборСписокВходящиеПартииСтатус" Тогда
			Для каждого _Элемент Из ОтборСписокВходящиеПартииСтатус Цикл
				_Элемент.Пометка = НЕ _Настройка.Значение.Найти(_Элемент.Значение) = Неопределено;
			КонецЦикла;
		ИначеЕсли _Настройка.Представление = "ОтборСписокТранспортныеПартииСтатус" Тогда
			Для каждого _Элемент Из ОтборСписокТранспортныеПартииСтатус Цикл
				_Элемент.Пометка = НЕ _Настройка.Значение.Найти(_Элемент.Значение) = Неопределено;
			КонецЦикла;
		ИначеЕсли _Настройка.Представление = "ОтборСписокВСДТип" Тогда
			Для каждого _Элемент Из ОтборСписокВСДТип Цикл
				_Элемент.Пометка = НЕ _Настройка.Значение.Найти(_Элемент.Значение) = Неопределено;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	ВетисВызовСервера.ТекущийХС(ОтборХС);
	
	ВетисВызовСервера.ТекущееПредприятие(ОтборПредприятие);
	
	ОбновитьОтборы();
	
	УстановитьВидимостьКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Параметр = ЭтаФорма.ИмяФормы Тогда
		//
	ИначеЕсли ИмяСобытия = "ВетисНастройки" Тогда
		Версия = ВетисВызовСервера.Версия();
		//Отладка = ВетисВызовСервера.РазрешенаОтладка();
		Элементы.ГруппаСкладскойЖурнал.Видимость = ВетисВызовСервера.РазрешенаОтладка();
	ИначеЕсли ИмяСобытия = "ВетисВерсия" Тогда
		Версия = ВетисВызовСервера.Версия();
	ИначеЕсли ИмяСобытия = "ВетисОтладка" Тогда
		//
	ИначеЕсли ИмяСобытия = "ВетисТестовый" Тогда
		//
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	СохраняемыеНастройки.Очистить();
	
	СохраняемыеНастройки.Вставить(0, Новый Массив, "ОтборСписокВСДСтатус");
	Для каждого _Элемент Из ОтборСписокВСДСтатус Цикл
		Если _Элемент.Пометка Тогда
			СохраняемыеНастройки[0].Значение.Добавить(_Элемент.Значение);
		КонецЕсли;
	КонецЦикла;
	
	СохраняемыеНастройки.Вставить(0, Новый Массив, "ОтборСписокВходящиеПартииСтатус");
	Для каждого _Элемент Из ОтборСписокВходящиеПартииСтатус Цикл
		Если _Элемент.Пометка Тогда
			СохраняемыеНастройки[0].Значение.Добавить(_Элемент.Значение);
		КонецЕсли;
	КонецЦикла;
	
	СохраняемыеНастройки.Вставить(0, Новый Массив, "ОтборСписокТранспортныеПартииСтатус");
	Для каждого _Элемент Из ОтборСписокТранспортныеПартииСтатус Цикл
		Если _Элемент.Пометка Тогда
			СохраняемыеНастройки[0].Значение.Добавить(_Элемент.Значение);
		КонецЕсли;
	КонецЦикла;
	
	СохраняемыеНастройки.Вставить(0, Новый Массив, "ОтборСписокВСДТип");
	Для каждого _Элемент Из ОтборСписокВСДТип Цикл
		Если _Элемент.Пометка Тогда
			СохраняемыеНастройки[0].Значение.Добавить(_Элемент.Значение);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаЖурнал(Команда)
	
	ОткрытьФорму("РегистрСведений.ВетисЖурнал.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЖурналОпераций(Команда)
	
	ОткрытьФорму("РегистрСведений.ВетисЖурналОпераций.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаНастройки(Команда)
	
	ОткрытьФорму("ОбщаяФорма.ВетисНастройки");
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУстановкаСоответствияСправочников(Команда)
	
	ОткрытьФорму("Обработка.ВетисУстановкаСоответствияСправочников.Форма");
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПредприятияХС(Команда)
	
	ОткрытьФорму("РегистрСведений.ВетисBusinessMembers.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаНаправление(Команда)
	
	Направление = НЕ Направление;
	
	ОбновитьОтборы("ОтборНаправление");
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПоискПредприятий(Команда)
	
	ОткрытьФорму("Обработка.ВетисУстановкаСоответствияСправочников.Форма.ФормаПредприятия");
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПоискХС(Команда)
	
	ОткрытьФорму("Обработка.ВетисУстановкаСоответствияСправочников.Форма.ФормаКонтрагенты");
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаАннулироватьВСД(Команда)
	
	_ТекущиеДанные = Элементы.СписокВСД.ТекущиеДанные;
	
	Если _ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ _ТекущиеДанные.Статус = ПредопределенноеЗначение("Перечисление.ВетисVetDocumentStatus.Оформлен") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ _ТекущиеДанные.Тип = ПредопределенноеЗначение("Перечисление.ВетисVetDocumentType.Транспортный") Тогда
		Возврат;
	КонецЕсли;
	
	_Причина = "";
	
	_оо = Новый ОписаниеОповещения("КомандаАннулироватьОбработкаОповещения", ЭтаФорма, _ТекущиеДанные.Ссылка);
	
	ПоказатьВводСтроки(_оо, _Причина, "Причина аннулирования " + _ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСинхронизироватьВСД(Команда)
	
	Перем _Отказ, _Ошибка;
	
	Если НЕ ЗначениеЗаполнено(ОтборХС) Тогда
		Сообщить("Необходимо выбрать ХС");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОтборПредприятие) Тогда
		Сообщить("Необходимо выбрать предприятие");
		Возврат;
	КонецЕсли;
	
	ВетисСинхронизацияВызовСервера.Синхронизвать(_Отказ, _Ошибка);
	
	Если _Отказ = Истина Тогда
		Сообщить(_Ошибка);
		Возврат;
	КонецЕсли;
	
	Элементы.СписокВСД.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаАннулироватьОбработкаОповещения(Результат, Параметр) Экспорт
	
	Перем _Отказ, _Ошибка;
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//ВетисMercuryApplicationsСлой1с.WithdrawVetDocumentOperation(Параметр, Результат, _Отказ, _Ошибка);
	
	Если _Отказ = Истина Тогда
		Сообщить(_Ошибка);
	Иначе
		Элементы.СписокВСД.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтборСписокВСДТип(Команда)
	
	ОтборСписокВСДТип.ПоказатьОтметкуЭлементов(Новый ОписаниеОповещения("ОтборСписокВСДТипОбработкаОповещения", ЭтаФорма));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСписокВСДТипОбработкаОповещения(пСписок, пПараметры) Экспорт
	
	Если НЕ пСписок = Неопределено Тогда
		ОбновитьОтборы("ОтборСписокВСДТип");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтборСписокВСДСтатус(Команда)
	
	ОтборСписокВСДСтатус.ПоказатьОтметкуЭлементов(Новый ОписаниеОповещения("ОтборСписокВСДСтатусОбработкаОповещения", ЭтаФорма));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСписокВСДСтатусОбработкаОповещения(пСписок, пПараметры) Экспорт
	
	Если НЕ пСписок = Неопределено Тогда
		ОбновитьОтборы("ОтборСписокВСДСтатус");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтборСписокВходящиеПартииСтатус(Команда)
	
	ОтборСписокВходящиеПартииСтатус.ПоказатьОтметкуЭлементов(Новый ОписаниеОповещения("ОтборСписокВходящиеПартииСтатусОбработкаОповещения", ЭтаФорма));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСписокВходящиеПартииСтатусОбработкаОповещения(пСписок, пПараметры) Экспорт
	
	Если НЕ пСписок = Неопределено Тогда
		ОбновитьОтборы("ОтборСписокВходящиеПартииСтатус");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтборСписокТранспортныеПартииСтатус(Команда)
	
	ОтборСписокТранспортныеПартииСтатус.ПоказатьОтметкуЭлементов(Новый ОписаниеОповещения("ОтборСписокТранспортныеПартииСтатусОбработкаОповещения", ЭтаФорма));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСписокТранспортныеПартииСтатусОбработкаОповещения(пСписок, пПараметры) Экспорт
	
	Если НЕ пСписок = Неопределено Тогда
		ОбновитьОтборы("ОтборСписокТранспортныеПартииСтатус");
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьОтборы(пИмяСобытия = Неопределено)
	
	Если пИмяСобытия = "ОтборСписокВСДТип" ИЛИ пИмяСобытия = Неопределено Тогда
		
		_заголовок = "";
		
		_список = Новый Массив;
		_список.Добавить(ПредопределенноеЗначение("Перечисление.ВетисVetDocumentType.ПустаяСсылка"));
		
		Для каждого _элемент Из ОтборСписокВСДТип Цикл
			Если _элемент.Пометка Тогда
				_список.Добавить(_элемент.Значение);
				_заголовок = _заголовок + "," + Строка(_элемент.Значение);
			КонецЕсли;
		КонецЦикла;
		
		ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокВСД.Отбор, "Тип", _список, "ВСписке");
		
		Элементы.СписокВСДОтборТип.Заголовок = Сред(_заголовок, 2);
	КонецЕсли;
	
	
	Если пИмяСобытия = "ОтборСписокВСДСтатус" ИЛИ пИмяСобытия = Неопределено Тогда
		
		_заголовок = "";
		
		_список = Новый Массив;
		_список.Добавить(ПредопределенноеЗначение("Перечисление.ВетисVetDocumentStatus.ПустаяСсылка"));
		
		Для каждого _элемент Из ОтборСписокВСДСтатус Цикл
			Если _элемент.Пометка Тогда
				_список.Добавить(_элемент.Значение);
				_заголовок = _заголовок + "," + Строка(_элемент.Значение);
			КонецЕсли;
		КонецЦикла;
		
		ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокВСД.Отбор, "Статус", _список, "ВСписке");
		
		Элементы.СписокВСДОтборСтатус.Заголовок = Сред(_заголовок, 2);
	КонецЕсли;
	
	
	Если пИмяСобытия = "ОтборСписокВходящиеПартииСтатус" ИЛИ пИмяСобытия = Неопределено Тогда
		
		_заголовок = "";
		
		_список = Новый Массив;
		_список.Добавить(ПредопределенноеЗначение("Перечисление.ВетисVetDocumentStatus.ПустаяСсылка"));
		
		Для каждого _элемент Из ОтборСписокВходящиеПартииСтатус Цикл
			Если _элемент.Пометка Тогда
				_список.Добавить(_элемент.Значение);
				_заголовок = _заголовок + "," + Строка(_элемент.Значение);
			КонецЕсли;
		КонецЦикла;
		
		ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокВходящиеПартииПоДокументам.Отбор, "Статус", _список, "ВСписке");
		
		Элементы.СписокВходящиеПартииПоДокументамОтборСтатус.Заголовок = Сред(_заголовок, 2);
	КонецЕсли;
	
	Если пИмяСобытия = "ОтборСписокТранспортныеПартииСтатус" ИЛИ пИмяСобытия = Неопределено Тогда
		
		_заголовок = "";
		
		_список = Новый Массив;
		_список.Добавить(ПредопределенноеЗначение("Перечисление.ВетисVetDocumentStatus.ПустаяСсылка"));
		
		Для каждого _элемент Из ОтборСписокТранспортныеПартииСтатус Цикл
			Если _элемент.Пометка Тогда
				_список.Добавить(_элемент.Значение);
				_заголовок = _заголовок + "," + Строка(_элемент.Значение);
			КонецЕсли;
		КонецЦикла;
		
		ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокТранспортныеПартии.Отбор, "Статус", _список, "ВСписке");
		
		Элементы.СписокТранспортныеПартииОтборСтатус.Заголовок = Сред(_заголовок, 2);
	КонецЕсли;
	
	
	Если пИмяСобытия = "ОтборХСПредприятие" ИЛИ пИмяСобытия = Неопределено Тогда
		ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокСкладскойЖурнал.Отбор, "BusinessEntity", ОтборХС);
		ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокСкладскойЖурнал.Отбор, "Enterprise", ОтборПредприятие);
		
		ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокСкладскойЖурналУпаковка.Отбор, "уид", Новый УникальныйИдентификатор);
		ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокСкладскойЖурналМаркировка.Отбор, "уид", Новый УникальныйИдентификатор);
		ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокСкладскойЖурналМаркировка.Отбор, "КлючСвязи", 1);
		
		ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокТранспортныеПартии.Отбор, "Отправитель", ОтборХС);
		ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокТранспортныеПартии.Отбор, "ОтправительПредприятие", ОтборПредприятие);
		
		ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокВходящиеПартииПоДокументам.Отбор, "Получатель", ОтборХС);
		ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокВходящиеПартииПоДокументам.Отбор, "ПолучательПредприятие", ОтборПредприятие);
	КонецЕсли;
	
	
	Если пИмяСобытия = "ОтборХСПредприятие" ИЛИ пИмяСобытия = "ОтборНаправление" ИЛИ пИмяСобытия = Неопределено Тогда
		Элементы.СписокВСДКомандаНаправление.Заголовок = ?(Направление, "Иходящие", "Входящие");
		
		ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокВСД.Отбор, "Отправитель", ОтборХС, , Направление);
		ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокВСД.Отбор, "Получатель", ОтборХС, , НЕ Направление);
		ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокВСД.Отбор, "ОтправительПредприятие", ОтборПредприятие, , Направление);
		ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокВСД.Отбор, "ПолучательПредприятие", ОтборПредприятие, , НЕ Направление);
		
		Элементы.СписокВСДОтправитель.Видимость = НЕ Направление;
		Элементы.СписокВСДПолучатель.Видимость = Направление;
		Элементы.СписокВСДОтправительПредприятие.Видимость = НЕ Направление;
		Элементы.СписокВСДПолучательПредприятие.Видимость = Направление;
	КонецЕсли;
	
	
КонецПроцедуры


&НаКлиенте
Процедура ОтборХСПриИзменении(Элемент)
	
	ВетисВызовСервера.ТекущийХС(ОтборХС);
	
	ОбновитьОтборы("ОтборХСПредприятие");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПредприятиеПриИзменении(Элемент)
	
	ВетисВызовСервера.ТекущееПредприятие(ОтборПредприятие);
	
	ОбновитьОтборы("ОтборХСПредприятие");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПредприятиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ПредприятиеСвязь Тогда
		СтандартнаяОбработка = Ложь;
		Если ЗначениеЗаполнено(ОтборХС) Тогда
			ОткрытьФорму("Справочник.ВетисEnterprise.ФормаВыбора", Новый Структура("Ключ, BusinessEntity", ОтборПредприятие, ОтборХС),,,,,Новый ОписаниеОповещения("ОтборПредприятиеОбработкаОповещения",ЭтаФорма));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПредприятиеОбработкаОповещения(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		ОтборПредприятие = Результат;
		ВетисВызовСервера.ТекущееПредприятие(ОтборПредприятие);
		ОбновитьОтборы("ОтборХСПредприятие");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредприятиеСвязьНажатие(Элемент)
	
	ПредприятиеСвязь = НЕ ПредприятиеСвязь;
	
	УстановитьВидимостьКлиент("ПредприятиеСвязь");
	
КонецПроцедуры


&НаКлиенте
Процедура СписокСкладскойЖурналПриАктивизацииСтроки(Элемент)
	
	_ТекущиеДанные = Элементы.СписокСкладскойЖурнал.ТекущиеДанные;
	
	Если _ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокСкладскойЖурналУпаковка.Отбор, "уид", _ТекущиеДанные.уид);
	ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокСкладскойЖурналМаркировка.Отбор, "уид", _ТекущиеДанные.уид);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСкладскойЖурналУпаковкаПриАктивизацииСтроки(Элемент)
	
	_ТекущиеДанные = Элементы.СписокСкладскойЖурналУпаковка.ТекущиеДанные;
	
	Если _ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокСкладскойЖурналМаркировка.Отбор, "КлючСвязи", _ТекущиеДанные.КлючСтроки);
	
КонецПроцедуры


&НаКлиенте
Процедура УстановитьВидимостьКлиент(пИмяСобытия = Неопределено)
	
	Если пИмяСобытия = "ПредприятиеСвязь" ИЛИ пИмяСобытия = Неопределено Тогда
		Элементы.ПредприятиеСвязь.Подсказка = ?(ПредприятиеСвязь, "с учетом связи", "без учета связи");
		Элементы.ПредприятиеСвязь.Картинка = ?(ПредприятиеСвязь, БиблиотекаКартинок.ВетисЕстьСвязь, БиблиотекаКартинок.ВетисНетСвязи);
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура НастроитьУсловноеОформление()
	
	НастроитьУсловноеОформлениеДобавить(Новый Цвет(255, 255, 153), "Оформлен", "Транспортный");
	НастроитьУсловноеОформлениеДобавить(Новый Цвет(204, 255, 255), "Оформлен", "Возвратный");
	НастроитьУсловноеОформлениеДобавить(WebЦвета.Розовый, "Аннулирован");
	НастроитьУсловноеОформлениеДобавить(Новый Цвет(204, 255, 204), "Погашен");
	
КонецПроцедуры

&НаСервере
Процедура НастроитьУсловноеОформлениеДобавить(пЦвет, пСтатус = Неопределено, пТип = Неопределено)
	
	_уо = УсловноеОформление.Элементы.Добавить();
	
	_уо.Использование = Истина;
	
	_уо.Оформление.УстановитьЗначениеПараметра("ЦветФона", пЦвет);
	
	Если НЕ пСтатус = Неопределено Тогда
		_отбор = _уо.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		_отбор.Использование = Истина;
		_отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокВСД.Статус");
		_отбор.ПравоеЗначение = Перечисления.ВетисVetDocumentStatus[пСтатус];
	КонецЕсли;
	
	Если НЕ пТип = Неопределено Тогда
		_отбор = _уо.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		_отбор.Использование = Истина;
		_отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокВСД.Тип");
		_отбор.ПравоеЗначение = Перечисления.ВетисVetDocumentType[пТип];
	КонецЕсли;
	
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "СписокВСДДата");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "СписокВСДНомер");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "СписокВСДДатаВСД");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "СписокВСДНомерВСД");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "СписокВСДОтправитель");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "СписокВСДОтправительПредприятие");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "СписокВСДПолучатель");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "СписокВСДПолучательПредприятие");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "СписокВСДProductItemName");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "СписокВСДДатаВыработки");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "СписокВСДСрокГодности");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "СписокВСДСтранаПроисхождения");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "СписокВСДПроизводитель");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "СписокВСДКоличество");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "СписокВСДuuid");
	НастроитьУсловноеОформлениеДобавитьПоле(_уо, "СписокВСДОтветственныйВетис");
	
КонецПроцедуры

Процедура НастроитьУсловноеОформлениеДобавитьПоле(пУО, пИмяПоля)
	
	_поле = пУО.Поля.Элементы.Добавить();
	_поле.Использование = Истина;
	_поле.Поле = Новый ПолеКомпоновкиДанных(пИмяПоля);
	
КонецПроцедуры
