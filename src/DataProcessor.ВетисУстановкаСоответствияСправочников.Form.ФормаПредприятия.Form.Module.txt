
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.ФормаКомандаОтбор.Пометка = Истина;
	
	СправочникСписок.Параметры.УстановитьЗначениеПараметра("BusinessEntity", Объект.ХозяйствующийСубъект);
	
	МаксимальноеКоличество = 100;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Элементы.ГруппаОтборИмя.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		Элементы.ГруппаОтборАдрес.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	#КонецЕсли
	
	СправочникСписок.Параметры.УстановитьЗначениеПараметра("BusinessEntity", Объект.ХозяйствующийСубъект);
	
	УстановитьВидимостьОтВерсии();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Параметр = ЭтаФорма.ИмяФормы Тогда
		//
	ИначеЕсли ИмяСобытия = "ВетисНастройки" Тогда
		УстановитьВидимостьОтВерсии();
	ИначеЕсли ИмяСобытия = "ВетисВерсия" Тогда
		УстановитьВидимостьОтВерсии();
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаНайти(Команда)
	
	Если НЕ ЗначениеЗаполнено(ВариантПоиска) Тогда
		Возврат
	КонецЕсли;
	
	_Вариант = ВариантПоиска;
	
	Если _Вариант = "BE" Тогда
		КомандаНайтиПоGuidСервер(Объект.ХозяйствующийСубъект, Истина);
	ИначеЕсли _Вариант = "GuidBE" Тогда
		КомандаНайтиПоGuidСервер(ОтборBusinessEntityGuid, Истина);
	ИначеЕсли _Вариант = "GuidEnt" Тогда
		КомандаНайтиПоGuidСервер(ОтборGuid);
	ИначеЕсли ВариантПоиска = "GLN" Тогда
		КомандаНайтиПоGLNСервер();
	Иначе
		КомандаНайтиПоИмениСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСоздатьСвязь(Команда)
	
	Если Элементы.СправочникСписок.ТекущиеДанные = Неопределено ИЛИ Элементы.СписокВетис.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	_ТекущиеДанныеВетис = СписокВетис.НайтиПоИдентификатору(Элементы.СписокВетис.ТекущаяСтрока);
	
	ВетисВызовСервера.Соответствие_Добавить(Элементы.СправочникСписок.ТекущиеДанные.Ссылка, _ТекущиеДанныеВетис.guid, _ТекущиеДанныеВетис.name, _ТекущиеДанныеВетис.address);
	
	ОбновитьСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУдалитьСвязь(Команда)
	
	ВетисВызовСервера.Соответствие_УдалитьУС(Элементы.СправочникСписок.ТекущиеДанные.Ссылка);
	
	ОбновитьСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьИзСервиса(Команда)
	
	ДобавитьИзСервиса();
	
	ОбновитьСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаДобавитьИзСервиса(Команда)
	
	ДобавитьИзСервиса();
	
	ОбновитьСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтвязатьПредприятиеХС(Команда)
	
	_ТекущиеДанные = Элементы.СправочникСписок.ТекущиеДанные;
	
	Если _ТекущиеДанные = Неопределено ИЛИ НЕ ЗначениеЗаполнено(_ТекущиеДанные.guid) Тогда
		Возврат;
	КонецЕсли;
	
	ВетисХозяйственныеОперации.ОтвязатьХСПредприятие(Объект.ХозяйствующийСубъект, _ТекущиеДанные.Ссылка);
	
	ОбновитьСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПривязатьПредприятиеХС(Команда)
	
	_ТекущиеДанные = Элементы.СправочникСписок.ТекущиеДанные;
	
	Если _ТекущиеДанные = Неопределено ИЛИ НЕ ЗначениеЗаполнено(_ТекущиеДанные.guid) Тогда
		Возврат;
	КонецЕсли;
	
	//ВетисХозяйственныеОперации.ПривязатьХСПредприятие(Объект.ХозяйствующийСубъект, _ТекущиеДанные.Ссылка);
	ОткрытьФорму("РегистрСведений.ВетисBusinessMembers.ФормаЗаписи", ПолучитьПараметры(Объект.ХозяйствующийСубъект, _ТекущиеДанные.Ссылка));
	
	ОбновитьСписок();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПараметры(BusinessEntity, Enterprise)
	
	_Запись = РегистрыСведений.ВетисBusinessMembers.СоздатьМенеджерЗаписи();
	_Запись.BusinessEntity = BusinessEntity;
	_Запись.Enterprise = Enterprise;
	_Запись.Прочитать();
	
	Если _Запись.Выбран() Тогда
		Возврат Новый Структура("Ключ", РегистрыСведений.ВетисBusinessMembers.СоздатьКлючЗаписи(Новый Структура("BusinessEntity, Enterprise", BusinessEntity, Enterprise)));
	Иначе
		Возврат Новый Структура("BusinessEntity, Enterprise", BusinessEntity, Enterprise);
	КонецЕсли;
	
КонецФункции


&НаКлиенте
Процедура КомандаОтбор(Команда)
	
	Элементы.ФормаКомандаОтбор.Пометка = НЕ Элементы.ФормаКомандаОтбор.Пометка;
	
	Элементы.ГруппаОтбор.Видимость = Элементы.ФормаКомандаОтбор.Пометка;
	
КонецПроцедуры


&НаКлиенте
Процедура ВариантПоискаПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборИспользованиеПриИзменении(Элемент)
	
	//УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПриИзменении(Элемент)
	
	Выполнить(Элемент.Имя+"Использование=ЗначениеЗаполнено("+Элемент.Имя+");");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборХозяйствующийСубъектПриИзменении(Элемент)
	
	СправочникСписок.Параметры.УстановитьЗначениеПараметра("BusinessEntity", Объект.ХозяйствующийСубъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборРегионПриИзменении(Элемент)
	
	ОтборРегионИспользование = ЗначениеЗаполнено(ОтборРегион);
	
	ОтборРайонИспользование = ОтборРайонИспользование И ОтборРегионИспользование;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборРайонПриИзменении(Элемент)
	
	ОтборРайонИспользование = ЗначениеЗаполнено(ОтборРайон);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВетисВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Элементы.СправочникСписок.ТекущаяСтрока = ВетисВызовСервера.Соответствие_ПолучитьСсылку(Элементы.СписокВетис.ТекущиеДанные.guid, "Справочник.ВетисEnterprise");
	
КонецПроцедуры

&НаКлиенте
Процедура СправочникСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФорму("Справочник.ВетисEnterprise.ФормаОбъекта", Новый Структура("Ключ", Элементы.СправочникСписок.ТекущаяСтрока));
	
КонецПроцедуры


&НаКлиенте
Процедура УстановитьВидимостьОтВерсии()
	
	_Версия20 = ВетисВызовСервера.Версия_2_0();
	
	Элементы.ВариантПоиска.СписокВыбора.Очистить();
	Элементы.ВариантПоиска.СписокВыбора.Добавить("NameAdr", "Имя, Адрес");
	Элементы.ВариантПоиска.СписокВыбора.Добавить("GuidEnt", "guid Предприятия");
	Элементы.ВариантПоиска.СписокВыбора.Добавить("BE", "ХС");
	Элементы.ВариантПоиска.СписокВыбора.Добавить("GuidBE", "guid ХС");
	
	Если _Версия20 Тогда
		Элементы.ВариантПоиска.СписокВыбора.Добавить("GLN", "GLN");
	КонецЕсли;
	
	ВариантПоиска = "NameAdr";
	
	Элементы.ГруппаОтборНомер.Видимость = _Версия20;
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	
	//ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СправочникСписок.Отбор, "ХозяйствующийСубъект", Объект.ХозяйствующийСубъект, , ВариантПоиска = "BE");
	
	Элементы.ОтборХозяйствующийСубъект.Видимость = ВариантПоиска = "BE";
	Элементы.ОтборBusinessEntityGuid.Видимость = ВариантПоиска = "GuidBE";
	Элементы.ОтборGuid.Видимость = ВариантПоиска = "GuidEnt";
	Элементы.ГруппаОтборGLN.Видимость = ВариантПоиска = "GLN";
	Элементы.ГруппаОтборИмя.Видимость = ВариантПоиска = "NameAdr";
	Элементы.ГруппаОтборАдрес.Видимость = ВариантПоиска = "NameAdr";
	Элементы.МаксимальноеКоличество.Видимость = ВариантПоиска = "NameAdr";
	
	Элементы.СписокВетисКомандаПривязатьПредприятиеХС.Видимость = ВариантПоиска = "BE";
	Элементы.СписокВетисКомандаОтвязатьПредприятиеХС.Видимость = ВариантПоиска = "BE";
	
	//Элементы.ОтборНаименование.Доступность = ОтборНаименованиеИспользование;
	//Элементы.ОтборРайон.Доступность = ОтборРайонИспользование;
	//Элементы.ОтборРегион.Доступность = ОтборРегионИспользование;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписок()
	
	Элементы.СправочникСписок.Обновить();
	
КонецПроцедуры


&НаСервере
Процедура КомандаНайтиПоИмениСервер()
	
	Перем _Enterprise, _Параметры;
	
	_Версия20 = Ветис.Версия_2_0();
	_ВетисIkar = ?(_Версия20, ВетисDictionary_2_0, ВетисIkar);
	_ВетисIkarСлой1с = ?(_Версия20, ВетисDictionaryСлой1с, ВетисIkarСлой1с);
	
	СписокВетис.Очистить();
	
	_отбор = ?(_Версия20, ВетисDictionary_2_0, ВетисCerberusEnterprise).Enterprise();
	
	Если ОтборНаименованиеИспользование Тогда
		_отбор.name = ОтборНаименование;
	КонецЕсли;
	
	Если ОтборРайонИспользование ИЛИ ОтборРегионИспользование Тогда
		_отбор.address = _ВетисIkar.Address();
		Если ОтборРегионИспользование Тогда
			_отбор.address.region = _ВетисIkar.Region(_ВетисIkarСлой1с.Region(ОтборРегион));
		КонецЕсли;
		Если ОтборРайонИспользование Тогда
			_отбор.address.district = _ВетисIkar.District(_ВетисIkarСлой1с.District(ОтборРайон));
		КонецЕсли;
	КонецЕсли;
	
	Если ОтборНомерИспользование И _Версия20 Тогда
		_отбор.numberList = ВетисDictionary_2_0.EnterpriseNumberList();
		_отбор.numberList.enterpriseNumber.Добавить(ОтборНомер);
	КонецЕсли;
	
	Если _Версия20 Тогда
		Пока ВетисEnterpriseService_2_0.GetRussianEnterpriseListNext(_отбор, _Enterprise, _Параметры) Цикл
			СписокВетисДобавить(_Enterprise);
			Если МаксимальноеКоличество > 0 И СписокВетис.Количество() >= МаксимальноеКоличество Тогда Прервать; КонецЕсли;
		КонецЦикла;
		
	Иначе
		Пока ВетисEnterpriseService.GetRussianEnterpriseListNext(_отбор, _Enterprise, _Параметры) Цикл
			СписокВетисДобавить(_Enterprise);
			Если МаксимальноеКоличество > 0 И СписокВетис.Количество() >= МаксимальноеКоличество Тогда Прервать; КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура КомандаНайтиПоGuidСервер(пGuid, пОтборПоХС = Ложь, пОтказ = Ложь, пОшибка = "")
	
	Перем _Enterprise, _Параметры;
	
	СписокВетис.Очистить();
	
	Если НЕ ЗначениеЗаполнено(пGuid) Тогда Возврат; КонецЕсли;
	
	_Версия20 = Ветис.Версия_2_0();
	
	Если пОтборПоХС Тогда
		
		Если ТипЗнч(пGuid) = Тип("Строка") Тогда
			_Guid = пGuid;
		Иначе
			_Guid = ?(_Версия20, ВетисDictionaryСлой1с, ВетисCerberusEnterpriseСлой1с).BusinessEntity(пGuid);
		КонецЕсли;
		
		Пока ?(_Версия20, ВетисEnterpriseService_2_0, ВетисEnterpriseService).GetActivityLocationListNext(_Guid, _Enterprise, _Параметры, пОтказ, пОшибка) Цикл
			СписокВетисДобавить(_Enterprise);
		КонецЦикла;
		
	Иначе
		
		_Enterprise = ?(_Версия20, ВетисEnterpriseService_2_0, ВетисEnterpriseService).GetEnterpriseByGuid(пGuid, пОтказ, пОшибка);
		
		Если НЕ пОтказ = Истина Тогда
			СписокВетисДобавить(_Enterprise);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура КомандаНайтиПоGLNСервер(пОтказ = Ложь, пОшибка = "")
	
	СписокВетис.Очистить();
	
	Если НЕ ЗначениеЗаполнено(ОтборGuid) Тогда Возврат; КонецЕсли;
	
	Если НЕ Ветис.Версия_2_0() Тогда Возврат; КонецЕсли;
	
	_businessMember = ВетисEnterpriseService_2_0.GetBusinessMemberByGLN(ОтборGLN, пОтказ, пОшибка);
	
	Если НЕ пОтказ = Истина Тогда
		СписокВетисДобавить(_businessMember.enterprise);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьИзСервиса()
	
	_Версия20 = Ветис.Версия_2_0();
	_ВетисEnterpriseService = ?(_Версия20, ВетисEnterpriseService_2_0, ВетисEnterpriseService);
	
	Для каждого _ТекущиеДанныеИд Из Элементы.СписокВетис.ВыделенныеСтроки Цикл
		
		_ТекущиеДанные = СписокВетис.НайтиПоИдентификатору(_ТекущиеДанныеИд);
		
		_Ссылка = Ветис.Соответствие_ПолучитьСсылку(_ТекущиеДанные.guid, "Справочник.ВетисEnterprise");
		
		Если _Ссылка = Неопределено Тогда
			_Объект = Справочники.ВетисEnterprise.СоздатьЭлемент();
		Иначе
			_Объект = _Ссылка.ПолучитьОбъект();
		КонецЕсли;
		
		_Объект.Заполнить(_ВетисEnterpriseService.GetEnterpriseByGuid(_ТекущиеДанные.guid));
		_Объект.Записать();
		
		ВетисХозяйственныеОперации.ПривязатьХСПредприятие(Объект.ХозяйствующийСубъект, _Объект.Ссылка);
		
	КонецЦикла;
	
КонецПроцедуры


&НаСервере
Процедура СписокВетисДобавить(пEnterprise)
	
	//в 2.0 в тесте найдены дубли 2017-10-26
	Если СписокВетис.НайтиСтроки(Новый Структура("guid", пEnterprise.guid)).Количество() > 0 Тогда
		Возврат;
	КонецЕсли;
	
	_СписокВетисСтрока = СписокВетис.Добавить();
	
	_СписокВетисСтрока.guid = пEnterprise.guid;
	_СписокВетисСтрока.name = пEnterprise.name;
	_СписокВетисСтрока.type = пEnterprise.type;
	_СписокВетисСтрока.owner = ?(пEnterprise.owner = Неопределено, "", пEnterprise.owner.guid);
	//_СписокВетисСтрока.Владелец = ?(Ветис.Версия_2_0(), ВетисDictionaryСлой1с, ВетисCerberusEnterpriseСлой1с).BusinessEntity(пEnterprise.owner);
	
	Если НЕ пEnterprise.address = Неопределено Тогда
		_СписокВетисСтрока.country  = ?(пEnterprise.address.country = Неопределено, "", пEnterprise.address.country.guid);
		_СписокВетисСтрока.region   = ?(пEnterprise.address.region = Неопределено, "", пEnterprise.address.region.guid);
		_СписокВетисСтрока.district = ?(пEnterprise.address.district = Неопределено, "", пEnterprise.address.district.guid);
		_СписокВетисСтрока.locality = ?(пEnterprise.address.locality = Неопределено, "", пEnterprise.address.locality.guid);
		_СписокВетисСтрока.street   = ?(пEnterprise.address.street = Неопределено, "", пEnterprise.address.street.guid);
		_СписокВетисСтрока.address  = пEnterprise.address.addressView;
	КонецЕсли;
	
	Если НЕ пEnterprise.numberList = Неопределено Тогда
		Для каждого _enterpriseNumber Из пEnterprise.numberList.enterpriseNumber Цикл
			_СписокВетисСтрока.numberList.Добавить(_enterpriseNumber);
		КонецЦикла;
	КонецЕсли;
	
	_СписокВетисСтрока.link = НЕ Ветис.Соответствие_ПолучитьСсылку(пEnterprise.guid, "Справочник.ВетисEnterprise", Ложь) = Ложь;
	
КонецПроцедуры

&НаСервере
Функция ЕстьНомер(пОтборНомер, numberList)
	
	Если numberList = Неопределено Тогда
		//если номеров нет то пропускаем
		Возврат Ложь;
	Иначе
		_найден = Ложь;
		Для каждого _enterpriseNumber Из numberList.enterpriseNumber Цикл
			Если пОтборНомер = _enterpriseNumber Тогда
				_найден = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Возврат _найден;
	КонецЕсли;
	
КонецФункции
