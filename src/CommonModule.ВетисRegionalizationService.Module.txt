
//Используется самостоятельно в цикле Пока.
//Параметры:
// Disease - Заболевание, к которому относятся запрашиваемые условия перемещения груза. bs:String255 0..1
// Condition - элемент списка, возвращаемый параметр
// Params - для внутреннего использования, начальное значение - Неопределено
//Возвращаемое значение:
// Булево - Ложь значит список пройден весь
Функция GetR13nConditionListNext(Disease = Неопределено, Condition, Params, пОтказ = Ложь, пОшибка = "") Экспорт
	
	Если Ложь Тогда
	ИначеЕсли Ветис.Версия_2_1() Тогда
		Возврат GetR13nConditionListNext_2_0(Disease, Condition, Params, пОтказ, пОшибка);
	ИначеЕсли Ветис.Версия_2_0() Тогда
		Возврат GetR13nConditionListNext_2_0(Disease, Condition, Params, пОтказ, пОшибка);
	Иначе
		ВетисОбщегоНазначения.ВывестиСообщение(Ветис.ВерсияТекстОшибки());
		ВызватьИсключение Ветис.ВерсияТекстОшибки();
	КонецЕсли;
	
КонецФункции
Функция GetR13nConditionListNext_2_0(пЗаболевание = Неопределено, пУсловие, пПараметры, пОтказ = Ложь, пОшибка = "")
	
	Если Ветис.Настройки_ОберткаHttp() Тогда
		Возврат ВетисRegistry.GetR13nConditionListNext(пЗаболевание, пУсловие, пПараметры, пОтказ, пОшибка);
	КонецЕсли;
	
	Если пПараметры = Неопределено Тогда
		пПараметры = Новый Структура;
		//2017-11-24
		//их там около 600, если ставить меньше, то при втором обращении со смещением идет ошибка
		пПараметры.Вставить("ListOptions", ВетисBase.ListOptions(1000));
		пПараметры.Вставить("AnimalDisease", ВетисDictionary.AnimalDisease(пЗаболевание));
		пПараметры.Вставить("Индекс", 0);
	Иначе
		пПараметры.Индекс = пПараметры.Индекс + 1;
		Если пПараметры.Индекс >= пПараметры.ListResponse.count Тогда
			Если пПараметры.ListOptions.offset + пПараметры.ListOptions.count >= Число(пПараметры.ListResponse.Total) Тогда
				Возврат Ложь;
			Иначе
				пПараметры.ListOptions.offset = пПараметры.ListOptions.offset + пПараметры.ListOptions.count;
				пПараметры.Индекс = 0;
			КонецЕсли;
		Иначе
			пУсловие = пПараметры.ListResponse.condition[пПараметры.Индекс];
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;
	
	Попытка
		ListResponse = Прокси().GetR13nConditionList(пПараметры.ListOptions, пПараметры.AnimalDisease);
	Исключение
		пОтказ = Истина;
		пОшибка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВетисОбщегоНазначения.ВывестиСообщениеОбОшибке(ИнформацияОбОшибке(), "GetR13nConditionListNext");
		ВызватьИсключение;
	КонецПопытки;
	
	пПараметры.Вставить("ListResponse", ListResponse);
	
	Если пПараметры.Индекс >= пПараметры.ListResponse.count Тогда
		Возврат Ложь;
	Иначе
		пУсловие = пПараметры.ListResponse.condition[пПараметры.Индекс];
		Возврат Истина;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции


Функция ИмяСервиса() Экспорт
	
	Возврат Перечисления.ВетисСервис.RegionalizationService;
	
КонецФункции

Функция Прокси()
	
	_Прокси = ВетисПовтИсп.Прокси(ИмяСервиса());
	
	Возврат _Прокси;
	
КонецФункции
